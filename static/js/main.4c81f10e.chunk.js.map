{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","store/reducer.ts","store/state.tsx","constants.ts","util/socketProvider.tsx","components/Logo/index.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","util/fetch.ts","sections/Chat/PasswordLock/index.tsx","sections/Chat/index.tsx","sections/loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/icons.ts","index.tsx","sections/Chat/Messages/Message/index.module.scss","components/Logo/index.module.scss","sections/Chat/TextBox/index.module.scss","sections/Chat/PasswordLock/index.module.scss","sections/Chat/Messages/index.module.scss","components/OfflineCheck/index.module.scss"],"names":["module","exports","produce","draft","action","console","log","type","offline","auth","checked","error","payload","loggedIn","user","socket","connected","hasPassword","initialState","key","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","useGlobalState","useContext","API_URL","process","VALID_USERNAME","SocketContext","useState","setSocket","useEffect","newSocket","socketio","reconnection","timeout","on","provider","style","infinite","animationIterationCount","animationDirection","className","styles","logo","blob","svgFilter","xmlns","version","id","in","stdDeviation","result","mode","values","in2","Logo","userColor","message","color","isSystem","user_id","icon","attributes","private","classNames","system","privateDraft","timestamp","toDateString","background","OverlayTrigger","placement","overlay","Tooltip","name","spin","toLocaleTimeString","hour","minute","body","useImmer","messages","setState","chatAreaRef","useRef","current","scrollTop","scrollHeight","existingDraft","findIndex","eachMessage","splice","trim","length","lastMessage","Date","push","map","ref","Container","messageList","Message","to","isCommand","draftTimer","sendMessage","emit","Form","noValidate","onSubmit","e","preventDefault","textBox","command","Group","controlId","Control","as","placeholder","autoFocus","onChange","clearTimeout","currentTarget","isPM","words","split","test","substr","setTimeout","users","localState","onlineUsers","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","a","Error","url","options","data","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","i","Array","isArray","parseErrors","useFetch","showModal","setShowModal","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","handleClose","buttonClass","unlocked","buttonIcon","tooltipText","title","locked","passwordLock","delay","Button","variant","padding","onClick","Modal","show","onHide","event","stopPropagation","checkValidity","then","catch","reason","Header","closeButton","Title","Body","required","minLength","Feedback","pattern","Footer","chatArea","Loader","chat","Row","Col","PasswordLock","OnlineUsers","Messages","TextBox","exact","component","String","username","loading","recaptchaRef","login","execute","disabled","maxLength","size","sitekey","token","reset","recaptchaToken","visibility","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Chat","windowFocused","setWindowFocused","titleNotification","setTitleNotification","onMessage","useCallback","msg","window","onfocus","onblur","library","add","faLock","faLockOpen","faCircle","faDotCircle","farDotCircle","faCircleNotch","faCode","faCog","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c81f10e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__LEZtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","import produce from 'immer'\n\nimport { AppState, Action } from './types'\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n\n  console.log('REDUCER', action)\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true\n      }\n\n      draft.error = null\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false\n        draft.auth.user = null\n        break\n      }\n\n      draft.offline = false\n\n      draft.auth.loggedIn = true\n      draft.auth.user = action.payload.user\n      break\n    case 'offline':\n      draft.offline = true\n      draft.error = null\n      draft.socket.connected = false\n      break\n    case 'error':\n      draft.error = action.payload\n      break\n    case 'socketConnected':\n      draft.socket.connected = action.payload\n      draft.offline = false\n      draft.error = null\n      break\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true\n      }\n      break\n  }\n})\n","import React from 'react'\n\nimport reducer from './reducer'\nimport { AppState, AppContext, Action } from './types'\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n  },\n  socket: {\n    connected: false,\n    key: null,\n  },\n  offline: false,\n  error: null,\n}\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider')\n  return initialState\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n})\n\ntype Props = {\n  children: any\n}\n\nexport const StateProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch }\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  )\n}\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext)\nexport default useGlobalState\n","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im'\nexport const VALID_USERNAME = /^[A-Za-z0-9]+(?:[ _][A-Za-z0-9]+)*_?$/i\nexport const RECAPTCHA_KEY = '6LddUucUAAAAAIk_E1AoLY5YyxoulIzlyRLjMoMi'\n","import React, { createContext, useEffect, useState } from 'react'\nimport socketio from 'socket.io-client'\n\nimport { useGlobalState } from 'store/state'\nimport { API_URL } from '../constants'\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null\n}\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n})\n\ntype Props = {\n  children: any\n}\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null)\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    })\n\n    if (!state.auth.loggedIn) {\n      return\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n    })\n\n    newSocket.on('connect', () => {\n      dispatch({\n        type: 'socketConnected',\n        payload: true,\n      })\n    })\n\n    newSocket.on('connect_error', (error: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('connect_timeout', (timeout: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: 'socketConnected',\n        payload: false,\n      })\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        })\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n      }\n    })\n\n    setSocket(newSocket)\n  }, [dispatch, state.auth.loggedIn])\n\n  let provider = {\n    socket,\n  }\n\n  return (\n    <SocketContext.Provider value={provider}>\n      {props.children}\n    </SocketContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  infinite?: boolean\n}\n\nexport default (props: Props) => {\n  const style: any = {}\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite'\n    style.animationDirection = 'alternate'\n  }\n  return (\n    <>\n      <div className={styles.logo}>\n        <div className={styles.blob} style={style}></div>\n        <div className={styles.blob} style={style}></div>\n      </div>\n\n      <svg\n        className={styles.svgFilter}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n      >\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport Logo from 'components/Logo'\n\ntype Props = {\n  text?: string | null\n}\n\nexport default (props: Props) => {\n  return (\n    <>\n      <Logo infinite />\n    </>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Message } from 'store/types'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\ntype Props = {\n  message: Message\n}\n\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n\n  const userColor = `#${props.message.user.color}`\n  const isSystem = props.message.user.user_id === 'dotdot'\n\n  let icon: IconProp = 'circle'\n  if (props.message.user.user_id === state.auth.user?.user_id) {\n    icon = ['far', 'dot-circle']\n  } else if (props.message.attributes.draft) {\n    icon = 'circle-notch'\n  }\n  if (props.message.attributes.private) {\n    icon = 'lock'\n  }\n  if (isSystem) {\n    icon = 'cog'\n  }\n\n  return (\n    <div\n      className={classNames(styles.message, {\n        [styles.system]: isSystem,\n        [styles.draft]: props.message.attributes.draft,\n        [styles.private]: props.message.attributes.private,\n        [styles.privateDraft]:\n          props.message.attributes.private && props.message.attributes.draft,\n      })}\n      key={props.message.timestamp.toDateString()}\n    >\n      <div className={classNames(styles.icon, { [styles.private]: props.message.attributes.private })} style={{ color: userColor, background: userColor }}>\n        { props.message.attributes.private && (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={(\n              <Tooltip id={`user-${props.message.user.user_id}`}>\n                Private message from <b>@{props.message.user.name}</b><br />\n                Only you can see this.\n              </Tooltip>\n            )}\n          >\n            <FontAwesomeIcon icon={ icon } />\n          </OverlayTrigger>\n        ) }\n        { !props.message.attributes.private && (\n          <FontAwesomeIcon icon={ icon } spin={ props.message.attributes.draft } />\n        ) }\n      </div>\n      <div className={classNames(styles.timestamp)}>\n        {props.message.attributes.draft ? 'now' : props.message.timestamp.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\n      </div>\n      <span\n        className={classNames(styles.user)}\n        style={ { color: userColor } }\n      >\n        {props.message.user.name}\n      </span>\n      <div className={classNames(styles.body)}>{props.message.message}</div>\n    </div>\n  )\n}\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport MessageComponent from './Message'\n\nimport styles from './index.module.scss'\n\ntype State = {\n  messages: Message[]\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    messages: [],\n  })\n\n  const { socket } = useContext(SocketContext)\n\n  const chatAreaRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return\n    }\n    chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight\n  }, [state.messages])\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('message', (payload: Message) => {\n      setState((draft) => {\n        // delete draft from this user\n        const existingDraft = draft.messages.findIndex(\n          (eachMessage) =>\n            eachMessage.attributes.draft &&\n            eachMessage.user.user_id === payload.user.user_id\n        )\n        if (existingDraft > -1) {\n          draft.messages.splice(existingDraft, 1)\n        }\n\n        if (payload.message.trim().length < 1) {\n          return;\n        }\n\n        if (!payload.attributes.draft) {\n          const lastMessage = draft.messages[draft.messages.length - 1]\n\n          if (lastMessage && lastMessage.user.user_id === payload.user.user_id && lastMessage.attributes.private === payload.attributes.private) {\n            // last message was by this same user (and it's the same kind of message)\n            lastMessage.message += `\\n${payload.message}`\n            lastMessage.timestamp = new Date(payload.timestamp)\n            return\n          }\n        }\n\n        draft.messages.push({\n          timestamp: new Date(payload.timestamp),\n          attributes: payload.attributes,\n          message: payload.message,\n          user: payload.user,\n        })\n      })\n    })\n    socket.on('history', (payload: Message[]) => {\n      setState(draft => {\n        if (draft.messages.length > 0) {\n          return;\n        }\n        draft.messages = payload.map(eachMessage => {\n          eachMessage.timestamp = new Date(eachMessage.timestamp)\n          return eachMessage\n        });\n      });\n    })\n  }, [socket, setState])\n\n  return (\n    <div className={classNames(styles.messages, 'my-4')} ref={chatAreaRef}>\n      <Container>\n        <div className={classNames(styles.messageList)}>\n          {state.messages.map((eachMessage) => (\n            <MessageComponent key={eachMessage.timestamp.toDateString()} message={eachMessage} />\n          ))}\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport styles from './index.module.scss'\nimport { VALID_USERNAME } from '../../../constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\ntype State = {\n  message: string,\n  private: boolean,\n  to: string | null,\n  isCommand: boolean,\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n    private: false,\n    to: null,\n    isCommand: false,\n  })\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    if (state.message.length < 1 || state.message.trim().length < 1) {\n      return\n    }\n\n    sendMessage(state.message);\n\n    setState((draft) => {\n      draft.message = ''\n      draft.private = false\n      draft.isCommand = false\n    })\n  }\n\n  const sendMessage = (message: string, draft: boolean = false) => {\n    if (!draft && (message.length < 1 || message.trim().length < 1)) {\n      return\n    }\n    let type = 'message'\n    if (state.isCommand) {\n      type = 'command'\n    }\n    socket?.emit(type, {\n      message,\n      attributes: {\n        draft,\n        private: state.private,\n        to: state.to,\n      },\n    })\n  }\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    clearTimeout(draftTimer.current)\n\n    const value: string = e.currentTarget.value\n\n    // special messages\n    let isCommand = false;\n    let isPM = false;\n    let to: string | null = null;\n\n    if (value[0] === '/') {\n      isCommand = true;\n    } else {\n      const words = value.split(' ')\n      if (words.length > 0 && words[0][0] === '@' && VALID_USERNAME.test(words[0].substr(1))) {\n        isPM = true;\n        to = words[0].substr(1);\n      }\n    }\n\n    setState((draft) => {\n      draft.message = value\n      draft.private = isPM\n      draft.to = to\n      draft.isCommand = isCommand\n    })\n\n    if (isPM || isCommand) {\n      return;\n    }\n\n    draftTimer.current = setTimeout(() => {\n      sendMessage(value, true)\n    }, 100)\n  }\n\n  let icon: IconProp = 'lock'\n  if (state.isCommand) {\n    icon = 'code'\n  }\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={ classNames('container', styles.textBox, { [styles.private]: state.private, [styles.command]: state.isCommand }) }>\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          autoFocus\n          onChange={onType}\n          value={state.message}\n        />\n        <span>\n          <FontAwesomeIcon icon={ icon } />\n        </span>\n      </Form.Group>\n    </Form>\n  )\n}\n","import React, { useEffect, useContext } from 'react'\nimport { useImmer } from 'use-immer'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { User } from 'store/types'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './index.module.scss'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport useGlobalState from 'store/state'\n\ntype State = {\n  users: User[]\n}\n\nexport default () => {\n  const { state } = useGlobalState();\n  const [localState, setState] = useImmer<State>({\n    users: [],\n  })\n\n  const { socket } = useContext(SocketContext)\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('users', (payload: any) => {\n      setState((draft) => {\n        draft.users = payload.users\n      })\n    })\n  }, [socket, setState])\n\n  return (\n    <div className={styles.onlineUsers}>\n      {\n        localState.users.map((user) => {\n          let icon: IconProp = 'circle'\n          if (user.user_id === state.auth.user?.user_id) {\n            icon = ['far', 'dot-circle']\n          }\n          return (\n            <OverlayTrigger\n              key={user.user_id}\n              placement=\"bottom\"\n              overlay={<Tooltip id={`user-${user.user_id}`}>@{user.name}</Tooltip>}\n            >\n              <span style={{ color: `#${user.color}` }}>\n                <FontAwesomeIcon icon={ icon } />\n              </span>\n            </OverlayTrigger>\n          )\n        })\n      }\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { API_URL } from '../constants'\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\nexport const CSRF_HEADER = 'x-csrf-token'\nlet csrfToken = ''\n\nexport type FetchError = {\n  status: number\n  message: string\n  errors: string[]\n}\n\ntype FetchReturn<T> = [boolean, T | null, FetchError | null]\n\naxios.defaults.withCredentials = true\n\nfunction useFetch<T>(\n  path: string,\n  method: FetchMethod,\n  body?: any\n): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [response, setResponse] = useState<T | null>(null)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body)\n        setResponse(data)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    sendRequest()\n  }, [path, method, body])\n\n  return [loading, response, error]\n}\n\nexport const fetchResource = async (\n  path: string,\n  method: FetchMethod,\n  body?: any\n) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`)\n  }\n\n  const url = `${API_URL}${path}`\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  }\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken\n  }\n\n  try {\n    const response = await axios(options)\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER]\n    }\n\n    return await response.data\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response)\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n      }\n      throw returnError\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error)\n    const returnError: FetchError = {\n      status: 500,\n      message: error.message,\n      errors: [error.message],\n    }\n    throw returnError\n  }\n}\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred'\n  }\n\n  return parseErrorList(error).join('. ')\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred'\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError]\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error\n  )\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i]\n    if (Array.isArray(error)) return error\n    if (typeof error === 'string') return [error]\n  }\n\n  return [defaultError]\n}\n\nexport default useFetch\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip, Button, Modal, Form } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\nimport { fetchResource } from 'util/fetch'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [validated, setValidated] = useState<boolean>(false)\n\n  const [password, setPassword] = useState<string>('')\n  const [repeatPassword, setRepeatPassword] = useState<string>('')\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    setValidated(true)\n\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      return\n    }\n\n    const body = {\n      password,\n      repeatPassword,\n    }\n\n    fetchResource('/password', 'POST', body)\n      .then(() => {\n        dispatch({\n          type: 'user_password',\n          payload: true,\n        })\n\n        setShowModal(false)\n        setValidated(false)\n        setPassword('')\n        setRepeatPassword('')\n      })\n      .catch((reason) => {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      })\n  }\n\n  let buttonClass = styles.unlocked\n  let buttonIcon: IconProp = 'lock-open'\n  let tooltipText = 'Set a password to keep your username'\n  let title = 'Claim Username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    buttonClass = styles.locked\n    buttonIcon = 'lock'\n    tooltipText = 'Change your password'\n    title = 'Update Password'\n  }\n\n  return (\n    <div className={styles.passwordLock}>\n      <OverlayTrigger\n        placement=\"bottom\"\n        delay={500}\n        overlay={<Tooltip id=\"passwordLock\">{tooltipText}</Tooltip>}\n      >\n        <Button variant=\"link\" className={buttonClass} style={ { padding: 0 } } onClick={handleShow}>\n          <FontAwesomeIcon icon={buttonIcon} />\n        </Button>\n      </OverlayTrigger>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              { title }\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Password...\"\n                autoFocus\n                required\n                minLength={6}\n                onChange={(event) => {\n                  setPassword(event.currentTarget.value)\n                }}\n                value={password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The password is too short. Minimum length is 6 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Repeat Password...\"\n                required\n                minLength={6}\n                pattern={password}\n                onChange={(event) => {\n                  setRepeatPassword(event.currentTarget.value)\n                }}\n                value={repeatPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The passwords don't match!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button type=\"submit\" variant=\"primary\">\n              Set password\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { useGlobalState } from 'store/state'\nimport Loader from 'components/Loader'\n\nimport styles from './index.module.scss'\nimport Messages from './Messages'\nimport TextBox from './TextBox'\nimport OnlineUsers from './OnlineUsers'\nimport PasswordLock from './PasswordLock'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  let chatArea = <Loader />\n\n  if (state.socket.connected) {\n    chatArea = (\n      <>\n        <div className={styles.chat}>\n          <Container>\n            <Row>\n              <Col>\n                <PasswordLock />\n              </Col>\n              <Col>\n                <OnlineUsers />\n              </Col>\n            </Row>\n          </Container>\n\n          <Messages />\n          <TextBox />\n        </div>\n      </>\n    )\n  }\n\n  return chatArea\n}\n","import React from 'react'\n\nimport Loader from 'components/Loader'\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (!state.auth.loggedIn) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (state.auth.loggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\n\nimport { useGlobalState } from 'store/state'\nimport styles from './index.module.scss'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  if (!state.offline && !state.error) {\n    return null\n  }\n\n  let error = state.error\n  if (Array.isArray(error)) {\n    error = error.join('. ')\n  }\n  if (typeof error !== 'string') {\n    error = String(error)\n  }\n\n  if (state.error) {\n    return <div className={styles.offline}>Error: {error}</div>\n  }\n\n  return (\n    <div className={styles.offline}>\n      You seem to be offline! Please try again later\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\nimport ReCAPTCHA from \"react-google-recaptcha\"\n\nimport { useGlobalState } from 'store/state'\nimport { fetchResource } from 'util/fetch'\nimport Logo from 'components/Logo'\n\nimport styles from './index.module.scss'\nimport { AuthData } from 'store/types'\nimport { RECAPTCHA_KEY } from '../../constants'\n\ntype State = {\n  username: string\n  password: string\n  hasPassword: boolean\n  loading: boolean\n}\n\nexport default () => {\n  const { dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    hasPassword: false,\n    loading: false,\n  })\n\n  const recaptchaRef = useRef<any>(null)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n    recaptchaRef.current.execute()\n  };\n\n  const onRecaptchaChange = (token: string | null) => {\n    if (!token || localState.loading) {\n      return\n    }\n\n    setState((draft) => {\n      draft.loading = true\n    })\n\n    recaptchaRef.current.reset()\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n      recaptchaToken: token,\n    }\n    fetchResource('/auth', 'POST', body)\n      .then((data: AuthData) => {\n        if (!data || !data.user.user_id) {\n          console.warn('Invalid user object')\n          dispatch({\n            type: 'login',\n            payload: data,\n          })\n          return\n        }\n\n        dispatch({\n          type: 'login',\n          payload: data,\n        })\n      })\n      .catch((reason) => {\n        console.log('login fail reason', reason)\n        if (reason.status !== 400) {\n          // username requires password\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        setState((draft) => {\n          draft.loading = false\n          if (reason.status === 400) {\n            draft.hasPassword = true\n          }\n        })\n      }\n    )\n  }\n\n  return (\n    <Container className={classNames(styles.login, 'mt-4')}>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={localState.loading}\n            autoFocus\n            minLength={ 1 }\n            maxLength={ 20 }\n            onChange={(e) => {\n              const value = e.currentTarget.value\n              setState((draft) => {\n                draft.username = value\n              })\n            }}\n            value={localState.username}\n          />\n          {localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              disabled={localState.loading}\n              autoFocus\n              onChange={(e) => {\n                const value = e.currentTarget.value\n                setState((draft) => {\n                  draft.password = value\n                })\n              }}\n              value={localState.password}\n            />\n          )}\n          <ReCAPTCHA\n            ref={ recaptchaRef }\n            size='invisible'\n            sitekey={ RECAPTCHA_KEY }\n            onChange={ onRecaptchaChange }\n          />\n          <button type=\"submit\" style={{ visibility: 'hidden' }}>\n            Login\n          </button>\n        </Form.Group>\n      </Form>\n    </Container>\n  )\n}\n","import { Action, AuthData } from 'store/types'\n\nimport { fetchResource } from './fetch'\n\nconst OFFLINE_RETRY_DELAY = 2000\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET')\n    .then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object')\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    })\n    .catch((reason) => {\n      console.log('Login check failed', reason)\n      if (reason.message === 'Network Error') {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n\n        // try again\n        setTimeout(() => {\n          checkAuth(dispatch)\n        }, OFFLINE_RETRY_DELAY)\n      } else {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      }\n    })\n}\n\nexport default checkAuth\n","import React, { useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport Chat from 'sections/Chat'\nimport AuthenticatedRoute from 'util/AuthenticatedRoute'\nimport UnauthenticatedRoute from 'util/UnauthenticatedRoute'\nimport OfflineCheck from 'components/OfflineCheck'\nimport Login from 'sections/Login'\nimport useGlobalState from 'store/state'\nimport checkAuth from 'util/checkAuth'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked) {\n      checkAuth(dispatch)\n    }\n  }, [state.auth.checked, dispatch])\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path=\"/login\" component={Login} />\n        <AuthenticatedRoute path=\"/\" component={Chat} />\n      </Switch>\n    </>\n  )\n}\n","import React, { useEffect, useContext, useState, useCallback } from 'react'\nimport Helmet from 'react-helmet'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport useGlobalState from 'store/state'\n\nexport default () => {\n  const { state } = useGlobalState();\n  const { socket } = useContext(SocketContext)\n\n  const [windowFocused, setWindowFocused] = useState<boolean>(true)\n  const [titleNotification, setTitleNotification] = useState<boolean>(false)\n\n  const onMessage = useCallback((msg: Message) => {\n    const user = state.auth.user;\n    if (!windowFocused && user && user.user_id !== msg.user.user_id) {\n      setTitleNotification(true)\n    }\n  }, [windowFocused, state.auth.user])\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('message', onMessage)\n  }, [socket, onMessage])\n\n  window.onfocus = function () {\n    setTitleNotification(false)\n    setWindowFocused(true)\n  }\n\n  window.onblur = function () {\n    setWindowFocused(false)\n  }\n\n  return (\n    <Helmet>\n      <title>{titleNotification ? '• dotdot' : 'dotdot'}</title>\n    </Helmet>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport { faLock, faLockOpen, faCircle, faDotCircle, faCircleNotch, faCode, faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faDotCircle as farDotCircle\n} from \"@fortawesome/free-regular-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\n\nexport default () => {\n  library.add(faLock, faLockOpen, faCircle, faDotCircle, farDotCircle, faCircleNotch, faCode, faCog)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { StateProvider } from 'store/state'\nimport SocketProvider from 'util/socketProvider'\n\nimport loadIcons from './lib/icons'\nimport Router from './router'\nimport Title from './components/Title'\n\nimport 'assets/scss/index.scss'\n\nloadIcons()\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"system\":\"Message_system__2g6ZE\",\"icon\":\"Message_icon__ATXFm\",\"user\":\"Message_user__3HofW\",\"timestamp\":\"Message_timestamp__2armv\",\"body\":\"Message_body__32TEj\",\"draft\":\"Message_draft__1zB7h\",\"header\":\"Message_header__3wUCX\",\"private\":\"Message_private__ORZ48\",\"privateDraft\":\"Message_privateDraft__YRrde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBox\":\"TextBox_textBox__McZeC\",\"private\":\"TextBox_private__1kesE\",\"command\":\"TextBox_command__1uXWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordLock\":\"PasswordLock_passwordLock__2FTiA\",\"unlocked\":\"PasswordLock_unlocked__21MTQ\",\"pulse\":\"PasswordLock_pulse__2T-_F\",\"locked\":\"PasswordLock_locked__1mCl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\",\"messageList\":\"Messages_messageList__3cw_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};"],"sourceRoot":""}