{"version":3,"sources":["sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","store/reducer.ts","store/state.tsx","constants.ts","util/socketProvider.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","sections/Chat/index.tsx","sections/Loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","util/fetch.ts","components/Logo/index.tsx","sections/Login/index.tsx","router.tsx","lib/icons.ts","index.tsx","sections/Chat/Messages/Message/index.module.scss","components/Logo/index.module.scss","components/OfflineCheck/index.module.scss","sections/Chat/index.module.scss","sections/Chat/Messages/index.module.scss"],"names":["module","exports","produce","draft","action","console","log","type","auth","checked","error","offline","payload","loggedIn","user","token","socket","connected","initialState","key","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","useGlobalState","useContext","API_URL","process","SocketContext","useState","setSocket","useEffect","newSocket","socketio","reconnection","timeout","query","on","provider","icon","pulse","text","userColor","message","color","style","borderLeft","className","classNames","styles","id","op","user_id","name","dots","backgroundColor","useImmer","messages","drafts","setState","chatAreaRef","useRef","current","scrollTop","scrollHeight","lastMessage","length","push","trim","ref","map","eachMessage","Message","Object","values","draftTimer","Form","noValidate","onSubmit","e","preventDefault","emit","textBox","Group","controlId","Control","as","placeholder","autoFocus","onChange","clearTimeout","currentTarget","setTimeout","users","onlineUsers","OverlayTrigger","placement","overlay","Tooltip","chatArea","Loader","OnlineUsers","Messages","TextBox","Container","container","Row","Col","md","span","offset","path","exact","component","to","Loading","csrfToken","axios","defaults","withCredentials","fetchResource","method","body","a","Error","url","options","data","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","i","Array","isArray","parseErrors","useFetch","logo","blob","svgFilter","xmlns","version","in","stdDeviation","result","mode","in2","username","loading","localState","login","Logo","then","catch","reason","disabled","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Chat","faGoogleFix","faGoogle","faGithubFix","faGithub","library","add","faCoins","faCreditCard","faAt","faColumns","faCog","faArrowDown","faArrowUp","faSignOutAlt","faSignInAlt","faSave","faQuestionCircle","faSmile","faHeart","faAngleRight","faSpinner","faPlus","faTrash","faExclamationTriangle","loadIcons","app","basename","titleTemplate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71b47686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","import produce from \"immer\"\n\nimport { AppState, Action } from \"./types\";\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n\n  console.log('REDUCER', action);\n\n  switch (action.type) {\n    case 'login':\n      draft.auth.checked = true;\n      draft.error = null;\n      draft.offline = false;\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false;\n        draft.auth.user = null;\n        draft.auth.token = null;\n        break;\n      }\n\n      draft.auth.loggedIn = true;\n      draft.auth.user = action.payload.user;\n      draft.auth.token = action.payload.token;\n      break;\n    case 'offline':\n      draft.offline = true;\n      draft.error = null;\n      break;\n    case 'error':\n      draft.error = action.payload;\n      break;\n    case 'socketConnected':\n      draft.socket.connected = action.payload;\n      if (!action.payload) {\n        draft.auth.checked = false;\n      }\n      break;\n  }\n});","import React from 'react';\n\nimport reducer from './reducer';\nimport { AppState, AppContext, Action } from './types';\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n    token: null,\n  },\n  socket: {\n    connected: false,\n    key: null,\n  },\n  offline: false,\n  error: null,\n};\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider');\n  return initialState;\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport const StateProvider = (props: Props) =>{\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch };\n  return (\n    <StateContext.Provider value={ value }>\n      { props.children }\n    </StateContext.Provider>\n  );\n};\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext);\nexport default useGlobalState;","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im';","import React, { createContext, useEffect, useState } from \"react\";\nimport socketio from 'socket.io-client';\n\nimport { useGlobalState } from \"store/state\";\nimport { API_URL } from \"../constants\";\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null,\n};\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState();\n  const [ socket, setSocket ] = useState<SocketIOClient.Socket | null>(null);\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    });\n\n    if (!state.auth.loggedIn) {\n      return;\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n      query: {\n          token: state.auth.token,\n      }\n    });\n\n    newSocket.on('connect', () => {\n      dispatch({\n        type: 'socketConnected',\n        payload: true,\n      });\n    });\n\n    newSocket.on('connect_error', (error: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      });\n    });\n\n    newSocket.on('connect_timeout', (timeout: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      });\n    });\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: 'login',\n        payload: null,\n      });\n\n      dispatch({\n        type: 'socketConnected',\n        payload: false,\n      });\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        });\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        });\n      }\n    });\n\n    setSocket(newSocket);\n  }, [dispatch, state.auth.loggedIn, state.auth.token]);\n\n  let provider = {\n    socket,\n  };\n\n  return (\n    <SocketContext.Provider value={ provider }>\n      { props.children }\n    </SocketContext.Provider>\n  );\n};","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  text?: string | null,\n};\n\nexport default (props: Props) => {\n  return (\n    <>\n      <FontAwesomeIcon icon='spinner' pulse /> { props.text || 'Loading' }\n    </>\n  );\n};","import React from 'react';\nimport classNames from 'classnames';\nimport { Message } from 'store/types';\n\nimport styles from './index.module.scss';\nimport useGlobalState from 'store/state';\n\ntype Props = {\n  message: Message,\n  draft?: boolean,\n};\n\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n\n  const userColor = `#${props.message.user.color}`;\n\n  const style: any = {\n    borderLeft: `solid 5px ${userColor}`,\n  };\n\n  if (props.draft) {\n    style.color = '#aaa';\n  }\n\n  return (\n    <div\n      className={ classNames(styles.message) }\n      key={props.message.id}\n      style={ style }\n    >\n      {props.message.message}\n      <span className={ classNames(styles.user, { [styles.op]: props.message.user.user_id === state.auth.user?.user_id }) }>\n        <i>@</i>{props.message.user.name}\n      </span>\n      <div className={ classNames(styles.dots) } style={ { backgroundColor: userColor } } />\n    </div>\n  );\n};","import React, { useEffect, useContext, useRef } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport classNames from \"classnames\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport { Message } from \"store/types\";\nimport MessageComponent from \"./Message\";\n\nimport styles from './index.module.scss';\n\ntype State = {\n  messages: Message[];\n  drafts: {\n    [key: string]: Message;\n  };\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    messages: [],\n    drafts: {}\n  });\n\n  const { socket } = useContext(SocketContext);\n\n  const chatAreaRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return;\n    }\n    chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight;\n  }, [state.messages]);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"message\", (payload: Message) => {\n      // check if the last one was by the same user\n      setState(draft => {\n        // delete draft from this user\n        delete draft.drafts[payload.user.user_id];\n\n        const lastMessage = draft.messages[draft.messages.length - 1];\n        if (lastMessage && lastMessage.user.user_id === payload.user.user_id) {\n          lastMessage.message += `\\n${payload.message}`;\n          return;\n        }\n\n        draft.messages.push({\n          id: draft.messages.length,\n          message: payload.message,\n          user: payload.user\n        });\n\n      });\n    });\n\n    socket.on(\"draft\", (payload: Message) => {\n      setState(draft => {\n        if (payload.message.trim().length < 1) {\n          delete draft.drafts[payload.user.user_id];\n          return;\n        }\n        draft.drafts[payload.user.user_id] = payload;\n      });\n    });\n  }, [socket, setState]);\n\n  return (\n    <div className={ classNames(styles.messages, \"my-4\") } ref={ chatAreaRef }>\n      {state.messages.map(eachMessage => (\n        <MessageComponent key={ eachMessage.id } message={ eachMessage } />\n      ))}\n      {Object.values(state.drafts).map(eachMessage => (\n        <MessageComponent key={ eachMessage.id } message={ eachMessage } draft />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext, useRef } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useImmer } from \"use-immer\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport styles from './index.module.scss';\n\ntype State = {\n  message: string,\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n  });\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext);\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    if (state.message.length < 1 || state.message.trim().length < 1) {\n      return;\n    }\n\n    socket?.emit('message', {\n      message: state.message,\n    });\n\n    setState(draft => {\n      draft.message = '';\n    });\n  };\n\n  const sendDraft = (message: string) => {\n    if (message.length < 1 || message.trim().length < 1) {\n      return;\n    }\n    socket?.emit('draft', {\n      message,\n    });\n  };\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    clearTimeout(draftTimer.current);\n\n    const value = e.currentTarget.value;\n    setState(draft => {\n      draft.message = value;\n    });\n\n    draftTimer.current = setTimeout(() => {\n      sendDraft(value);\n    }, 100);\n  };\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={ styles.textBox }>\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder='Type a message...'\n          autoFocus\n          onChange={ onType }\n          value={ state.message }\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport { useImmer } from \"use-immer\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport { User } from \"store/types\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport styles from './index.module.scss';\n\ntype State = {\n  users: User[];\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    users: [],\n  });\n\n  const { socket } = useContext(SocketContext);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"users\", (payload: any) => {\n      console.log('users', payload)\n      setState(draft => {\n        draft.users = payload.users;\n      });\n    });\n  }, [socket, setState]);\n\n  return (\n    <div className={ styles.onlineUsers }>\n      { state.users.map(user => (\n        <OverlayTrigger\n          key={ user.user_id }\n          placement='bottom'\n          overlay={\n            <Tooltip id={`user-${user.user_id}`}>\n              @{user.name}\n            </Tooltip>\n          }\n        >\n          <span style={{ color: `#${user.color}` }}>&bull;</span>\n        </OverlayTrigger>\n      )) }\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport { useGlobalState } from \"store/state\";\nimport Loader from 'components/Loader';\n\nimport styles from \"./index.module.scss\";\nimport Messages from\"./Messages\";\nimport TextBox from \"./TextBox\";\nimport OnlineUsers from \"./OnlineUsers\";\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  let chatArea = (\n    <Loader />\n  );\n\n  if (state.socket.connected) {\n    chatArea = (\n      <>\n        <OnlineUsers />\n        <Messages />\n        <TextBox />\n      </>\n    );\n  }\n\n  return (\n    <Container className={ styles.container }>\n      { chatArea }\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport Loader from \"components/Loader\";\n\nexport default () => {\n  return (\n    <>\n      <header>\n        <div className=\"bg-angle\" />\n        <section>\n          <Container>\n            <Row>\n              <Col md={{ span: 6, offset: 3 }}>\n                <div className='text-center mt-5'>\n                  <h4 className='my-2' style={{ color: '#fff' }}>\n                    <Loader />\n                  </h4>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n      </header>\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useGlobalState } from 'store/state';\n\nimport Loading from 'sections/Loading';\n\ntype Props = {\n  path: string,\n  exact?: boolean,\n  component?: React.ComponentType<any>,\n};\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n  if (!state.auth.checked) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (!state.auth.loggedIn) {\n    return (\n      <Redirect to='/login' />\n    );\n  }\n\n  return (\n    <Route\n      path={ props.path }\n      exact={ props.exact }\n      component={ props.component }\n    />\n  );\n};","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useGlobalState } from 'store/state';\n\nimport Loading from 'sections/Loading';\n\ntype Props = {\n  path: string,\n  exact?: boolean,\n  component?: React.ComponentType<any>,\n};\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n  if (!state.auth.checked) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (state.auth.loggedIn) {\n    return (\n      <Redirect to='/' />\n    );\n  }\n\n  return (\n    <Route\n      path={ props.path }\n      exact={ props.exact }\n      component={ props.component }\n    />\n  );\n};","import React from \"react\";\n\nimport { useGlobalState } from \"store/state\";\nimport styles from './index.module.scss';\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  if (!state.offline && !state.error) {\n    return null;\n  }\n\n  if (state.error) {\n    return (\n      <div className={ styles.offline }>\n        Error: {state.error}\n      </div>\n    );\n  }\n\n  return (\n    <div className={ styles.offline }>\n      You seem to be offline! Please try again later\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\n\nimport { API_URL } from '../constants';\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\nexport const CSRF_HEADER = 'x-csrf-token';\nlet csrfToken = '';\n\nexport type FetchError = {\n  status: number,\n  message: string,\n  errors: string[],\n};\n\ntype FetchReturn<T> = [\n  boolean,\n  T | null,\n  FetchError | null,\n];\n\naxios.defaults.withCredentials = true;\n\nfunction useFetch<T>(path: string, method: FetchMethod, body?: any): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [response, setResponse] = useState<T | null>(null);\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body);\n        setResponse(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    sendRequest();\n\n  }, [path, method, body,]);\n\n  return [loading, response, error];\n};\n\nexport const fetchResource = async (path: string, method: FetchMethod, body?: any) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`);\n  }\n\n  const url = `${API_URL}${path}`;\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  };\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken;\n  }\n\n  try {\n    const response = await axios(options);\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER];\n    }\n\n    return await response.data;\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response);\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n      };\n      throw returnError;\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error);\n      const returnError: FetchError = {\n        status: 500,\n        message: error.message,\n        errors: [error.message]\n      };\n      throw returnError;\n  }\n};\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred';\n  }\n\n  return parseErrorList(error).join('. ');\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred';\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError];\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error,\n  );\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i];\n    if (Array.isArray(error)) return error;\n    if (typeof error === 'string') return [error];\n  }\n\n  return [defaultError];\n}\n\nexport default useFetch;","import React from 'react';\n\nimport styles from './index.module.scss';\n\nexport default () => {\n  return (\n    <>\n      <div className={ styles.logo }>\n        <div className={ styles.blob }></div>\n        <div className={ styles.blob }></div>\n      </div>\n\n      <svg className={ styles.svgFilter } xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n};","import React from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport { useImmer } from 'use-immer';\nimport classNames from 'classnames';\n\nimport { useGlobalState } from 'store/state';\nimport { fetchResource } from 'util/fetch';\nimport Logo from 'components/Logo';\n\nimport styles from './index.module.scss';\nimport { AuthData } from 'store/types';\n\ntype State = {\n  username: string,\n  loading: boolean,\n};\n\nexport default () => {\n  const { dispatch } = useGlobalState();\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    loading: false,\n  });\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    if (localState.loading) {\n      return;\n    }\n\n    setState(draft => {\n      draft.loading = true;\n    });\n\n    const body = {\n      username: localState.username,\n    };\n    fetchResource('/auth', 'POST', body).then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object');\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return;\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    }).catch(reason => {\n      console.log('login fail reason', reason);\n      dispatch({\n        type: 'error',\n        payload: reason.errors.join(', '),\n      })\n\n      setState(draft => {\n        draft.loading = false;\n      });\n    });\n  };\n\n  return (\n    <Container className={ classNames(styles.login, 'mt-4') }>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={ localState.loading }\n            autoFocus\n            onChange={e => {\n              const value = e.currentTarget.value;\n              setState(draft => { draft.username = value });\n            }}\n            value={ localState.username }\n          />\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n};","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport Chat from \"sections/Chat\";\nimport AuthenticatedRoute from \"util/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"util/UnauthenticatedRoute\";\nimport OfflineCheck from \"components/OfflineCheck\";\nimport Login from \"sections/Login\";\nimport useGlobalState from \"store/state\";\nimport { fetchResource } from \"util/fetch\";\nimport { AuthData } from \"store/types\";\n\nexport default () => {\n  const { state, dispatch } = useGlobalState();\n\n  if (!state.auth.checked) {\n    fetchResource('/auth', 'GET').then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object');\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return;\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    }).catch(reason => {\n      console.log('Login check failed', reason);\n      dispatch({\n        type: 'error',\n        payload: reason.errors.join(', '),\n      })\n\n      dispatch({\n        type: 'login',\n        payload: null,\n      })\n    });\n  };\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path='/login' component={ Login } />\n        <AuthenticatedRoute path=\"/\" component={ Chat } />\n      </Switch>\n    </>\n  );\n};\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport {\n    faCoins,\n    faCreditCard,\n    faAt,\n    faColumns,\n    faCog,\n    faArrowUp,\n    faArrowDown,\n    faSignOutAlt,\n    faSignInAlt,\n    faSave,\n    faQuestionCircle,\n    faHeart,\n    faAngleRight,\n    faSpinner,\n    faPlus,\n    faTrash,\n    faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n    faSmile,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport {\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\n\nexport default () => {\n  const faGoogleFix: any = faGoogle;\n  const faGithubFix: any = faGithub;\n  library.add(\n    faCoins,\n    faCreditCard,\n    faAt,\n    faColumns,\n    faCog,\n    faArrowDown,\n    faArrowUp,\n    faSignOutAlt,\n    faSignInAlt,\n    faSave,\n    faQuestionCircle,\n    faSmile,\n    faHeart,\n    faAngleRight,\n    faGoogleFix,\n    faGithubFix,\n    faSpinner,\n    faPlus,\n    faTrash,\n    faExclamationTriangle,\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\n\nimport { StateProvider } from \"store/state\";\nimport SocketProvider from \"util/socketProvider\";\n\nimport loadIcons from \"./lib/icons\";\nimport Router from \"./router\";\n\nimport \"assets/scss/index.scss\";\n\n\nloadIcons();\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <Helmet\n      titleTemplate='%s | dotdot'\n    />\n    <StateProvider>\n      <SocketProvider>\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"dots\":\"Message_dots__24igM\",\"user\":\"Message_user__3HofW\",\"op\":\"Message_op__3lLYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\",\"blob-third\":\"Logo_blob-third__2F93D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chat_container__22QAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\"};"],"sourceRoot":""}