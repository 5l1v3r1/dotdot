{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","store/reducer.ts","store/state.tsx","constants.ts","util/socketProvider.tsx","components/Logo/index.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","util/fetch.ts","sections/Chat/PasswordLock/index.tsx","sections/Chat/index.tsx","sections/loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/icons.ts","index.tsx","sections/Chat/Messages/Message/index.module.scss","components/Logo/index.module.scss","sections/Chat/PasswordLock/index.module.scss","sections/Chat/Messages/index.module.scss","sections/Chat/TextBox/index.module.scss","components/OfflineCheck/index.module.scss"],"names":["module","exports","produce","draft","action","console","log","type","offline","auth","checked","error","payload","loggedIn","user","token","socket","connected","hasPassword","initialState","key","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","useGlobalState","useContext","API_URL","process","VALID_USERNAME","SocketContext","useState","setSocket","useEffect","newSocket","socketio","reconnection","timeout","query","on","provider","style","infinite","animationIterationCount","animationDirection","className","styles","logo","blob","svgFilter","xmlns","version","id","in","stdDeviation","result","mode","values","in2","Logo","userColor","message","color","icon","attributes","private","classNames","privateDraft","borderLeftColor","header","background","OverlayTrigger","placement","overlay","Tooltip","user_id","name","timestamp","time","toLocaleTimeString","hour","minute","op","body","useImmer","messages","setState","chatAreaRef","useRef","current","scrollTop","scrollHeight","existingDraft","findIndex","eachMessage","splice","lastMessage","length","push","Date","ref","Container","messageList","map","Message","to","draftTimer","sendMessage","trim","emit","Form","noValidate","onSubmit","e","preventDefault","textBox","Group","controlId","Control","as","placeholder","autoFocus","onChange","clearTimeout","currentTarget","isPM","words","split","test","substr","setTimeout","users","onlineUsers","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","a","Error","url","options","data","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","i","Array","isArray","parseErrors","useFetch","showModal","setShowModal","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","handleClose","buttonClass","unlocked","buttonIcon","tooltipText","title","locked","passwordLock","delay","Button","variant","onClick","Modal","show","onHide","event","stopPropagation","checkValidity","then","catch","reason","Header","closeButton","Title","Body","required","minLength","Feedback","pattern","Footer","chatArea","Loader","chat","Row","Col","PasswordLock","OnlineUsers","Messages","TextBox","exact","component","String","username","loading","localState","login","disabled","visibility","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Chat","windowFocused","setWindowFocused","titleNotification","setTitleNotification","onMessage","useCallback","window","onfocus","onblur","library","add","faLock","faLockOpen","faCircle","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ba1471f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__LEZtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","import produce from 'immer'\n\nimport { AppState, Action } from './types'\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n\n  console.log('REDUCER', action)\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true\n      }\n\n      draft.error = null\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false\n        draft.auth.user = null\n        draft.auth.token = null\n        break\n      }\n\n      draft.offline = false\n\n      draft.auth.loggedIn = true\n      draft.auth.user = action.payload.user\n      draft.auth.token = action.payload.token\n      break\n    case 'offline':\n      draft.offline = true\n      draft.error = null\n      draft.auth.token = null\n      draft.socket.connected = false\n      break\n    case 'error':\n      draft.error = action.payload\n      break\n    case 'socketConnected':\n      draft.socket.connected = action.payload\n      if (!action.payload) {\n        draft.auth.token = null\n      }\n      break\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true\n      }\n      break\n  }\n})\n","import React from 'react'\n\nimport reducer from './reducer'\nimport { AppState, AppContext, Action } from './types'\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n    token: null,\n  },\n  socket: {\n    connected: false,\n    key: null,\n  },\n  offline: false,\n  error: null,\n}\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider')\n  return initialState\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n})\n\ntype Props = {\n  children: any\n}\n\nexport const StateProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch }\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  )\n}\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext)\nexport default useGlobalState\n","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im'\nexport const VALID_USERNAME = /^[A-Za-z0-9]+(?:[ _][A-Za-z0-9]+)*_?$/i\n","import React, { createContext, useEffect, useState } from 'react'\nimport socketio from 'socket.io-client'\n\nimport { useGlobalState } from 'store/state'\nimport { API_URL } from '../constants'\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null\n}\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n})\n\ntype Props = {\n  children: any\n}\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null)\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    })\n\n    if (!state.auth.loggedIn || !state.auth.token) {\n      return\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n      query: {\n        token: state.auth.token,\n      },\n    })\n\n    newSocket.on('connect', () => {\n      dispatch({\n        type: 'socketConnected',\n        payload: true,\n      })\n    })\n\n    newSocket.on('connect_error', (error: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('connect_timeout', (timeout: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: 'socketConnected',\n        payload: false,\n      })\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        })\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n      }\n    })\n\n    setSocket(newSocket)\n  }, [dispatch, state.auth.loggedIn, state.auth.token])\n\n  let provider = {\n    socket,\n  }\n\n  return (\n    <SocketContext.Provider value={provider}>\n      {props.children}\n    </SocketContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  infinite?: boolean\n}\n\nexport default (props: Props) => {\n  const style: any = {}\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite'\n    style.animationDirection = 'alternate'\n  }\n  return (\n    <>\n      <div className={styles.logo}>\n        <div className={styles.blob} style={style}></div>\n        <div className={styles.blob} style={style}></div>\n      </div>\n\n      <svg\n        className={styles.svgFilter}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n      >\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport Logo from 'components/Logo'\n\ntype Props = {\n  text?: string | null\n}\n\nexport default (props: Props) => {\n  return (\n    <>\n      <Logo infinite />\n    </>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Message } from 'store/types'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\ntype Props = {\n  message: Message\n}\n\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n\n  const userColor = `#${props.message.user.color}`\n\n  let icon: IconProp = 'circle'\n  if (props.message.attributes.private) {\n    icon = 'lock'\n  }\n\n  return (\n    <div\n      className={classNames(styles.message, {\n        [styles.draft]: props.message.attributes.draft,\n        [styles.private]: props.message.attributes.private,\n        [styles.privateDraft]:\n          props.message.attributes.private && props.message.attributes.draft,\n      })}\n      key={props.message.id}\n      style={{ borderLeftColor: userColor, }}\n    >\n      <div className={classNames(styles.header, { [styles.private]: props.message.attributes.private })} style={{ color: userColor, background: userColor }}>\n        { props.message.attributes.private && (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={(\n              <Tooltip id={`user-${props.message.user.user_id}`}>\n                Private message from <b>@{props.message.user.name}</b><br />\n                Only you can see this.\n              </Tooltip>\n            )}\n          >\n            <FontAwesomeIcon icon={ icon } />\n          </OverlayTrigger>\n        ) }\n        { !props.message.attributes.private && (\n          <FontAwesomeIcon icon={ icon } />\n        ) }\n      </div>\n      <div className={classNames(styles.timestamp)}>\n        {props.message.attributes.draft ? 'now' : props.message.time.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\n      </div>\n      <span\n        className={classNames(styles.user, {\n          [styles.op]: props.message.user.user_id === state.auth.user?.user_id,\n        })}\n        style={ { color: userColor } }\n      >\n        {props.message.user.name}\n      </span>\n      <div className={classNames(styles.body)}>{props.message.message}</div>\n    </div>\n  )\n}\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport MessageComponent from './Message'\n\nimport styles from './index.module.scss'\n\ntype State = {\n  messages: Message[]\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    messages: [],\n  })\n\n  const { socket } = useContext(SocketContext)\n\n  const chatAreaRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return\n    }\n    chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight\n  }, [state.messages])\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('message', (payload: Message) => {\n\n      setState((draft) => {\n        // delete draft from this user\n        const existingDraft = draft.messages.findIndex(\n          (eachMessage) =>\n            eachMessage.attributes.draft &&\n            eachMessage.user.user_id === payload.user.user_id\n        )\n        if (existingDraft > -1) {\n          draft.messages.splice(existingDraft, 1)\n        }\n\n        if (!payload.attributes.draft) {\n          const lastMessage = draft.messages[draft.messages.length - 1]\n\n          if (lastMessage && lastMessage.user.user_id === payload.user.user_id && lastMessage.attributes.private === payload.attributes.private) {\n            // last message was by this same user (and it's the same kind of message)\n            lastMessage.message += `\\n${payload.message}`\n            return\n          }\n        }\n\n        draft.messages.push({\n          id: draft.messages.length,\n          time: new Date(),\n          attributes: payload.attributes,\n          message: payload.message,\n          user: payload.user,\n        })\n      })\n    })\n  }, [socket, setState])\n\n  return (\n    <div className={classNames(styles.messages, 'my-4')} ref={chatAreaRef}>\n      <Container>\n        <div className={classNames(styles.messageList)}>\n          {state.messages.map((eachMessage) => (\n            <MessageComponent key={eachMessage.id} message={eachMessage} />\n          ))}\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport styles from './index.module.scss'\nimport { User } from 'store/types'\nimport { VALID_USERNAME } from '../../../constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\ntype State = {\n  message: string,\n  private: boolean,\n  to: User | null,\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n    private: false,\n    to: null,\n  })\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    if (state.message.length < 1 || state.message.trim().length < 1) {\n      return\n    }\n\n    sendMessage(state.message);\n\n    setState((draft) => {\n      draft.message = ''\n      draft.private = false\n    })\n  }\n\n  const sendMessage = (message: string, draft: boolean = false) => {\n    if (message.length < 1 || message.trim().length < 1) {\n      return\n    }\n    socket?.emit('message', {\n      message,\n      attributes: {\n        draft,\n        private: state.private\n      },\n    })\n  }\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    clearTimeout(draftTimer.current)\n\n    const value: string = e.currentTarget.value\n\n    // is it a PM?\n    let isPM = false;\n    const words = value.split(' ')\n    if (words.length > 0 && words[0][0] === '@' && VALID_USERNAME.test(words[0].substr(1))) {\n      isPM = true;\n    }\n\n    setState((draft) => {\n      draft.message = value\n      draft.private = isPM\n    })\n\n    draftTimer.current = setTimeout(() => {\n      sendMessage(value, true)\n    }, 100)\n  }\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={ classNames('container', styles.textBox, { [styles.private]: state.private }) }>\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          autoFocus\n          onChange={onType}\n          value={state.message}\n        />\n        <span>\n          <FontAwesomeIcon icon='lock' />\n        </span>\n      </Form.Group>\n    </Form>\n  )\n}\n","import React, { useEffect, useContext } from 'react'\nimport { useImmer } from 'use-immer'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { User } from 'store/types'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\n\ntype State = {\n  users: User[]\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    users: [],\n  })\n\n  const { socket } = useContext(SocketContext)\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('users', (payload: any) => {\n      setState((draft) => {\n        draft.users = payload.users\n      })\n    })\n  }, [socket, setState])\n\n  return (\n    <div className={styles.onlineUsers}>\n      {state.users.map((user) => (\n        <OverlayTrigger\n          key={user.user_id}\n          placement=\"bottom\"\n          overlay={<Tooltip id={`user-${user.user_id}`}>@{user.name}</Tooltip>}\n        >\n          <span style={{ color: `#${user.color}` }}>&bull;</span>\n        </OverlayTrigger>\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { API_URL } from '../constants'\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\nexport const CSRF_HEADER = 'x-csrf-token'\nlet csrfToken = ''\n\nexport type FetchError = {\n  status: number\n  message: string\n  errors: string[]\n}\n\ntype FetchReturn<T> = [boolean, T | null, FetchError | null]\n\naxios.defaults.withCredentials = true\n\nfunction useFetch<T>(\n  path: string,\n  method: FetchMethod,\n  body?: any\n): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [response, setResponse] = useState<T | null>(null)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body)\n        setResponse(data)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    sendRequest()\n  }, [path, method, body])\n\n  return [loading, response, error]\n}\n\nexport const fetchResource = async (\n  path: string,\n  method: FetchMethod,\n  body?: any\n) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`)\n  }\n\n  const url = `${API_URL}${path}`\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  }\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken\n  }\n\n  try {\n    const response = await axios(options)\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER]\n    }\n\n    return await response.data\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response)\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n      }\n      throw returnError\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error)\n    const returnError: FetchError = {\n      status: 500,\n      message: error.message,\n      errors: [error.message],\n    }\n    throw returnError\n  }\n}\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred'\n  }\n\n  return parseErrorList(error).join('. ')\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred'\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError]\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error\n  )\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i]\n    if (Array.isArray(error)) return error\n    if (typeof error === 'string') return [error]\n  }\n\n  return [defaultError]\n}\n\nexport default useFetch\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip, Button, Modal, Form } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\nimport { fetchResource } from 'util/fetch'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [validated, setValidated] = useState<boolean>(false)\n\n  const [password, setPassword] = useState<string>('')\n  const [repeatPassword, setRepeatPassword] = useState<string>('')\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const form = event.currentTarget\n\n    if (form.checkValidity() === false || password !== repeatPassword) {\n      return\n    }\n\n    setValidated(true)\n\n    const body = {\n      password,\n      repeatPassword,\n    }\n\n    fetchResource('/password', 'POST', body)\n      .then(() => {\n        dispatch({\n          type: 'user_password',\n          payload: true,\n        })\n      })\n      .catch((reason) => {\n        console.log('login fail reason', reason)\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      })\n  }\n\n  let buttonClass = styles.unlocked\n  let buttonIcon: IconProp = 'lock-open'\n  let tooltipText = 'Set a password to keep your username'\n  let title = 'Claim Username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    buttonClass = styles.locked\n    buttonIcon = 'lock'\n    tooltipText = 'Change your password'\n    title = 'Update Password'\n  }\n\n  return (\n    <div className={styles.passwordLock}>\n      <OverlayTrigger\n        placement=\"bottom\"\n        delay={500}\n        overlay={<Tooltip id=\"passwordLock\">{tooltipText}</Tooltip>}\n      >\n        <Button variant=\"link\" className={buttonClass} onClick={handleShow}>\n          <FontAwesomeIcon icon={buttonIcon} />\n        </Button>\n      </OverlayTrigger>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              { title }\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Password...\"\n                autoFocus\n                required\n                minLength={6}\n                onChange={(event) => {\n                  setPassword(event.currentTarget.value)\n                }}\n                value={password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The password is too short. Minimum length is 6 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Repeat Password...\"\n                required\n                minLength={6}\n                pattern={password}\n                onChange={(event) => {\n                  setRepeatPassword(event.currentTarget.value)\n                }}\n                value={repeatPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The passwords don't match!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button type=\"submit\" variant=\"primary\">\n              Set password\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { useGlobalState } from 'store/state'\nimport Loader from 'components/Loader'\n\nimport styles from './index.module.scss'\nimport Messages from './Messages'\nimport TextBox from './TextBox'\nimport OnlineUsers from './OnlineUsers'\nimport PasswordLock from './PasswordLock'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  let chatArea = <Loader />\n\n  if (state.socket.connected) {\n    chatArea = (\n      <>\n        <div className={styles.chat}>\n          <Container>\n            <Row>\n              <Col>\n                <PasswordLock />\n              </Col>\n              <Col>\n                <OnlineUsers />\n              </Col>\n            </Row>\n          </Container>\n\n          <Messages />\n          <TextBox />\n        </div>\n      </>\n    )\n  }\n\n  return chatArea\n}\n","import React from 'react'\n\nimport Loader from 'components/Loader'\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (!state.auth.loggedIn) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (state.auth.loggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\n\nimport { useGlobalState } from 'store/state'\nimport styles from './index.module.scss'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  if (!state.offline && !state.error) {\n    return null\n  }\n\n  let error = state.error\n  if (Array.isArray(error)) {\n    error = error.join('. ')\n  }\n  if (typeof error !== 'string') {\n    error = String(error)\n  }\n\n  if (state.error) {\n    return <div className={styles.offline}>Error: {error}</div>\n  }\n\n  return (\n    <div className={styles.offline}>\n      You seem to be offline! Please try again later\n    </div>\n  )\n}\n","import React from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { useGlobalState } from 'store/state'\nimport { fetchResource } from 'util/fetch'\nimport Logo from 'components/Logo'\n\nimport styles from './index.module.scss'\nimport { AuthData } from 'store/types'\n\ntype State = {\n  username: string\n  password: string\n  hasPassword: boolean\n  loading: boolean\n}\n\nexport default () => {\n  const { dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    hasPassword: false,\n    loading: false,\n  })\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    console.log('login')\n\n    if (localState.loading) {\n      return\n    }\n\n    setState((draft) => {\n      draft.loading = true\n    })\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n    }\n    fetchResource('/auth', 'POST', body)\n      .then((data: AuthData) => {\n        if (!data || !data.user.user_id) {\n          console.warn('Invalid user object')\n          dispatch({\n            type: 'login',\n            payload: data,\n          })\n          return\n        }\n\n        dispatch({\n          type: 'login',\n          payload: data,\n        })\n      })\n      .catch((reason) => {\n        console.log('login fail reason', reason)\n        if (reason.status !== 400) {\n          // username requires password\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        setState((draft) => {\n          draft.loading = false\n          if (reason.status === 400) {\n            draft.hasPassword = true\n          }\n        })\n      })\n  }\n\n  return (\n    <Container className={classNames(styles.login, 'mt-4')}>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={localState.loading}\n            autoFocus\n            onChange={(e) => {\n              const value = e.currentTarget.value\n              setState((draft) => {\n                draft.username = value\n              })\n            }}\n            value={localState.username}\n          />\n          {localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              disabled={localState.loading}\n              autoFocus\n              onChange={(e) => {\n                const value = e.currentTarget.value\n                setState((draft) => {\n                  draft.password = value\n                })\n              }}\n              value={localState.password}\n            />\n          )}\n          <button type=\"submit\" style={{ visibility: 'hidden' }}>\n            Login\n          </button>\n        </Form.Group>\n      </Form>\n    </Container>\n  )\n}\n","import { Action, AuthData } from 'store/types'\n\nimport { fetchResource } from './fetch'\n\nconst OFFLINE_RETRY_DELAY = 2000\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET')\n    .then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object')\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    })\n    .catch((reason) => {\n      console.log('Login check failed', reason)\n      if (reason.message === 'Network Error') {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n\n        // try again\n        setTimeout(() => {\n          checkAuth(dispatch)\n        }, OFFLINE_RETRY_DELAY)\n      } else {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      }\n    })\n}\n\nexport default checkAuth\n","import React, { useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport Chat from 'sections/Chat'\nimport AuthenticatedRoute from 'util/AuthenticatedRoute'\nimport UnauthenticatedRoute from 'util/UnauthenticatedRoute'\nimport OfflineCheck from 'components/OfflineCheck'\nimport Login from 'sections/Login'\nimport useGlobalState from 'store/state'\nimport checkAuth from 'util/checkAuth'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked || !state.auth.token) {\n      checkAuth(dispatch)\n    }\n  }, [state.auth.checked, state.auth.token, dispatch])\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path=\"/login\" component={Login} />\n        <AuthenticatedRoute path=\"/\" component={Chat} />\n      </Switch>\n    </>\n  )\n}\n","import React, { useEffect, useContext, useState, useCallback } from 'react'\nimport Helmet from 'react-helmet'\n\nimport { SocketContext } from 'util/socketProvider'\n\nexport default () => {\n  const { socket } = useContext(SocketContext)\n\n  const [windowFocused, setWindowFocused] = useState<boolean>(true)\n  const [titleNotification, setTitleNotification] = useState<boolean>(false)\n\n  const onMessage = useCallback(() => {\n    if (!windowFocused) {\n      setTitleNotification(true)\n    }\n  }, [windowFocused])\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('message', onMessage)\n  }, [socket, onMessage])\n\n  window.onfocus = function () {\n    setTitleNotification(false)\n    setWindowFocused(true)\n  }\n\n  window.onblur = function () {\n    setWindowFocused(false)\n  }\n\n  return (\n    <Helmet>\n      <title>{titleNotification ? '• dotdot' : 'dotdot'}</title>\n    </Helmet>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport { faLock, faLockOpen, faCircle } from '@fortawesome/free-solid-svg-icons'\n\n// import {\n\n// } from \"@fortawesome/free-regular-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\n\nexport default () => {\n  library.add(faLock, faLockOpen, faCircle)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { StateProvider } from 'store/state'\nimport SocketProvider from 'util/socketProvider'\n\nimport loadIcons from './lib/icons'\nimport Router from './router'\nimport Title from './components/Title'\n\nimport 'assets/scss/index.scss'\n\nloadIcons()\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"header\":\"Message_header__3wUCX\",\"user\":\"Message_user__3HofW\",\"timestamp\":\"Message_timestamp__2armv\",\"body\":\"Message_body__32TEj\",\"op\":\"Message_op__3lLYM\",\"draft\":\"Message_draft__1zB7h\",\"private\":\"Message_private__ORZ48\",\"privateDraft\":\"Message_privateDraft__YRrde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordLock\":\"PasswordLock_passwordLock__2FTiA\",\"unlocked\":\"PasswordLock_unlocked__21MTQ\",\"pulse\":\"PasswordLock_pulse__2T-_F\",\"locked\":\"PasswordLock_locked__1mCl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\",\"messageList\":\"Messages_messageList__3cw_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBox\":\"TextBox_textBox__McZeC\",\"private\":\"TextBox_private__1kesE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};"],"sourceRoot":""}