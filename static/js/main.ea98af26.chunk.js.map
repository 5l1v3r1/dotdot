{"version":3,"sources":["store/reducer.ts","store/state.tsx","components/Footer/index.tsx","util/socketProvider.tsx","sections/landing/index.tsx","components/OfflineCheck/index.tsx","router.tsx","lib/icons.ts","index.tsx","components/OfflineCheck/index.module.scss"],"names":["produce","draft","action","console","info","type","log","payload","initialState","auth","checked","loggedIn","user","csrf","offline","domains","payouts","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","year","Date","getFullYear","className","Container","Row","Col","icon","socket","socketio","reconnection","timeout","query","SocketContext","provider","useImmer","message","messages","setState","useContext","useEffect","on","msg","push","id","length","color","ListGroup","map","eachMessage","Item","key","style","borderLeftWidth","borderLeftColor","Form","noValidate","onSubmit","e","preventDefault","emit","Group","controlId","Label","Control","as","onChange","currentTarget","styles","OfflineCheck","path","component","Landing","faGoogleFix","faGoogle","faGithubFix","faGithub","library","add","faCoins","faCreditCard","faAt","faColumns","faCog","faArrowDown","faArrowUp","faSignOutAlt","faSignInAlt","faSave","faQuestionCircle","faSmile","faHeart","faAngleRight","faSpinner","faPlus","faTrash","faExclamationTriangle","loadIcons","app","basename","process","titleTemplate","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ea98af26.chunk.js","sourcesContent":["import produce from \"immer\"\n\nimport { AppState, Action } from \"./types\";\n\nexport default produce((draft: AppState, action: Action) => {\n  console.info('REDUCER: ', action.type);\n  console.log(action.payload);\n  switch (action.type) {\n    // case 'login':\n    //   draft.auth.checked = true;\n\n    //   if (!action.payload) {\n    //     break;\n    //   }\n\n    //   draft.auth.loggedIn = true;\n    //   draft.auth.user = action.payload.user;\n    //   draft.auth.csrf = action.payload.csrf;\n    //   break;\n  }\n});","import React from 'react';\n\nimport reducer from './reducer';\nimport { AppState, AppContext, Action } from './types';\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n    csrf: null,\n  },\n  offline: false,\n  domains: [],\n  payouts: [],\n};\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider');\n  return initialState;\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport const StateProvider = (props: Props) =>{\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch };\n  return (\n    <StateContext.Provider value={ value }>\n      { props.children }\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateValue = (): AppContext => React.useContext(StateContext);","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./index.scss\";\n\ntype Props = {};\n\nexport default (props: Props) => {\n  const year = (new Date()).getFullYear();\n  return (\n    <footer>\n      <div className=\"company\">\n        <Container>\n          <Row>\n            <Col>Made with <FontAwesomeIcon icon='heart' /> in London, UK</Col>\n            <Col className='text-right'>\n              &copy; butt <small>{ year }</small>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </footer>\n  );\n}","import React, { createContext } from \"react\";\nimport socketio from 'socket.io-client';\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket,\n};\n\nconst socket = socketio('http://localhost:8080', {\n  reconnection: true,\n  timeout: 2000,\n  query: {\n      user: 'anon',\n  }\n});\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport default (props: Props) => {\n  const provider = {\n    socket,\n  };\n\n  return (\n    <SocketContext.Provider value={ provider }>\n      { props.children }\n    </SocketContext.Provider>\n  );\n};","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Form, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useImmer } from \"use-immer\";\n\nimport \"./index.scss\";\nimport { SocketContext } from \"util/socketProvider\";\n\ntype Message = {\n  id: number,\n  msg: string,\n  user: string,\n  color: string,\n};\n\ntype State = {\n  message: string,\n  messages: Message[],\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n    messages: [],\n  });\n\n  const { socket } = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.on('message', (msg: string) => {\n      console.log('message', msg);\n      setState(draft => {\n        draft.messages.push({\n          id: draft.messages.length,\n          msg,\n          user: 'alex',\n          color: 'eb0000',\n        });\n      });\n    });\n  }, [socket, setState]);\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    socket.emit('message', state.message);\n\n\n    setState(draft => {\n      draft.message = '';\n    });\n  };\n\n  return (\n    <Container>\n      <section>\n        <ListGroup className='my-4'>\n          { state.messages.map(eachMessage => (\n            <ListGroup.Item key={ eachMessage.id } style={ { borderLeftWidth: '4px', borderLeftColor: `#${eachMessage.color}` } }>\n              { eachMessage.msg }\n            </ListGroup.Item>\n          )) }\n        </ListGroup>\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Message</Form.Label>\n            <Form.Control\n              as=\"input\"\n              type=\"text\"\n              onChange={e => {\n                const value = e.currentTarget.value;\n                setState(draft => { draft.message = value });\n              }}\n              value={ state.message }\n            />\n          </Form.Group>\n        </Form>\n      </section>\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { useStateValue } from \"store/state\";\nimport styles from './index.module.scss';\n\nexport default () => {\n  const { state } = useStateValue();\n\n  if (!state.offline) {\n    return null;\n  }\n\n  return (\n    <div className={ styles.offline }>\n      You seem to be offline! Please try again later\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Landing from \"sections/landing\";\n// import AuthenticatedRoute from \"util/AuthenticatedRoute\";\n// import UnauthenticatedRoute from \"util/UnauthenticatedRoute\";\n// import useCheckLogin from \"lib/checkAuth\";\nimport OfflineCheck from \"components/OfflineCheck\";\n\nexport default () => {\n  // useCheckLogin();\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <Route path=\"/\" component={Landing} />\n      </Switch>\n    </>\n  );\n};\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport {\n    faCoins,\n    faCreditCard,\n    faAt,\n    faColumns,\n    faCog,\n    faArrowUp,\n    faArrowDown,\n    faSignOutAlt,\n    faSignInAlt,\n    faSave,\n    faQuestionCircle,\n    faHeart,\n    faAngleRight,\n    faSpinner,\n    faPlus,\n    faTrash,\n    faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n    faSmile,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport {\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\n\nexport default () => {\n  const faGoogleFix: any = faGoogle;\n  const faGithubFix: any = faGithub;\n  library.add(\n    faCoins,\n    faCreditCard,\n    faAt,\n    faColumns,\n    faCog,\n    faArrowDown,\n    faArrowUp,\n    faSignOutAlt,\n    faSignInAlt,\n    faSave,\n    faQuestionCircle,\n    faSmile,\n    faHeart,\n    faAngleRight,\n    faGoogleFix,\n    faGithubFix,\n    faSpinner,\n    faPlus,\n    faTrash,\n    faExclamationTriangle,\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { StateProvider } from \"store/state\";\nimport Footer from \"components/Footer\";\n\nimport \"assets/scss/index.scss\";\n\nimport loadIcons from \"./lib/icons\";\nimport Router from \"./router\";\nimport Helmet from \"react-helmet\";\nimport SocketProvider from \"util/socketProvider\";\n\nloadIcons();\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <Helmet\n      titleTemplate='%s | dotdot'\n    />\n    <StateProvider>\n      {/*  some components for user selection/login */}\n\n      <SocketProvider>\n        <div id=\"content\">\n          <Router />\n        </div>\n        <Footer />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};"],"sourceRoot":""}