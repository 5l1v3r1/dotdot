{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/Messages/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","store/reducer.ts","store/state.tsx","constants.ts","util/socketProvider.tsx","components/Logo/index.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","util/fetch.ts","sections/Chat/PasswordLock/index.tsx","sections/Chat/index.tsx","sections/Loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/icons.ts","index.tsx","components/Logo/index.module.scss","sections/Chat/Messages/Message/index.module.scss","sections/Chat/PasswordLock/index.module.scss","components/OfflineCheck/index.module.scss"],"names":["module","exports","produce","draft","action","console","log","type","offline","auth","checked","error","payload","loggedIn","user","token","socket","connected","hasPassword","initialState","key","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","useGlobalState","useContext","API_URL","process","SocketContext","useState","setSocket","useEffect","newSocket","socketio","reconnection","timeout","query","on","provider","style","infinite","animationIterationCount","animationDirection","className","styles","logo","blob","svgFilter","xmlns","version","id","in","stdDeviation","result","mode","values","in2","Logo","userColor","message","color","borderLeft","attributes","private","classNames","op","user_id","name","dots","backgroundColor","useImmer","messages","setState","chatAreaRef","useRef","current","scrollTop","scrollHeight","existingDraft","findIndex","eachMessage","splice","lastMessage","length","push","ref","map","Message","draftTimer","Form","noValidate","onSubmit","e","preventDefault","trim","emit","textBox","Group","controlId","Control","as","placeholder","autoFocus","onChange","clearTimeout","currentTarget","setTimeout","users","onlineUsers","OverlayTrigger","placement","overlay","Tooltip","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","body","a","Error","url","options","data","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","i","Array","isArray","parseErrors","useFetch","showModal","setShowModal","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","handleClose","buttonClass","unlocked","buttonIcon","tooltipText","locked","passwordLock","delay","Button","variant","onClick","icon","Modal","show","onHide","event","stopPropagation","checkValidity","then","catch","reason","Header","closeButton","Title","Body","required","minLength","Feedback","pattern","Footer","chatArea","Loader","Row","Col","PasswordLock","OnlineUsers","Messages","TextBox","Container","container","exact","component","to","Loading","String","username","loading","localState","login","disabled","visibility","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Chat","windowFocused","setWindowFocused","titleNotification","setTitleNotification","onMessage","useCallback","window","onfocus","onblur","library","add","faLock","faLockOpen","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dcdad5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chat_container__22QAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","import produce from \"immer\"\n\nimport { AppState, Action } from \"./types\";\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n\n  console.log('REDUCER', action);\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true;\n      }\n\n      draft.error = null;\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false;\n        draft.auth.user = null;\n        draft.auth.token = null;\n        break;\n      }\n\n      draft.offline = false;\n\n      draft.auth.loggedIn = true;\n      draft.auth.user = action.payload.user;\n      draft.auth.token = action.payload.token;\n      break;\n    case 'offline':\n      draft.offline = true;\n      draft.error = null;\n      draft.auth.token = null;\n      draft.socket.connected = false;\n      break;\n    case 'error':\n      draft.error = action.payload;\n      break;\n    case 'socketConnected':\n      draft.socket.connected = action.payload;\n      if (!action.payload) {\n        draft.auth.token = null;\n      }\n      break;\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true;\n      }\n      break;\n  }\n});","import React from 'react';\n\nimport reducer from './reducer';\nimport { AppState, AppContext, Action } from './types';\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n    token: null,\n  },\n  socket: {\n    connected: false,\n    key: null,\n  },\n  offline: false,\n  error: null,\n};\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider');\n  return initialState;\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport const StateProvider = (props: Props) =>{\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch };\n  return (\n    <StateContext.Provider value={ value }>\n      { props.children }\n    </StateContext.Provider>\n  );\n};\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext);\nexport default useGlobalState;","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im';","import React, { createContext, useEffect, useState } from \"react\";\nimport socketio from 'socket.io-client';\n\nimport { useGlobalState } from \"store/state\";\nimport { API_URL } from \"../constants\";\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null,\n};\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n});\n\ntype Props = {\n  children: any,\n};\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState();\n  const [ socket, setSocket ] = useState<SocketIOClient.Socket | null>(null);\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    });\n\n    if (!state.auth.loggedIn || !state.auth.token) {\n      return;\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n      query: {\n          token: state.auth.token,\n      }\n    });\n\n    newSocket.on('connect', () => {\n      dispatch({\n        type: 'socketConnected',\n        payload: true,\n      });\n    });\n\n    newSocket.on('connect_error', (error: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      });\n    });\n\n    newSocket.on('connect_timeout', (timeout: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      });\n    });\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: 'socketConnected',\n        payload: false,\n      });\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        });\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        });\n      }\n    });\n\n    setSocket(newSocket);\n  }, [dispatch, state.auth.loggedIn, state.auth.token]);\n\n  let provider = {\n    socket,\n  };\n\n  return (\n    <SocketContext.Provider value={ provider }>\n      { props.children }\n    </SocketContext.Provider>\n  );\n};","import React from 'react';\n\nimport styles from './index.module.scss';\n\ntype Props = {\n  infinite?: boolean,\n};\n\nexport default (props: Props) => {\n  const style: any = {};\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite';\n    style.animationDirection = 'alternate';\n  }\n  return (\n    <>\n      <div className={ styles.logo }>\n        <div className={ styles.blob } style={ style }></div>\n        <div className={ styles.blob } style={ style }></div>\n      </div>\n\n      <svg className={ styles.svgFilter } xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n};","import React from 'react';\nimport Logo from 'components/Logo';\n\ntype Props = {\n  text?: string | null,\n};\n\nexport default (props: Props) => {\n  return (\n    <>\n      <Logo infinite />\n    </>\n  );\n};","import React from 'react';\nimport classNames from 'classnames';\nimport { Message } from 'store/types';\n\nimport styles from './index.module.scss';\nimport useGlobalState from 'store/state';\n\ntype Props = {\n  message: Message,\n};\n\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n\n  const userColor = `#${props.message.user.color}`;\n\n  const style: any = {\n    borderLeft: `solid 5px ${userColor}`,\n  };\n\n  if (props.message.attributes.draft) {\n    style.color = '#aaa';\n  }\n\n  if (props.message.attributes.private) {\n    style.color = 'orange';\n  }\n\n  return (\n    <div\n      className={ classNames(styles.message) }\n      key={props.message.id}\n      style={ style }\n    >\n      {props.message.message}\n      <span className={ classNames(styles.user, { [styles.op]: props.message.user.user_id === state.auth.user?.user_id }) }>\n        <i>@</i>{props.message.user.name}\n      </span>\n      <div className={ classNames(styles.dots) } style={ { backgroundColor: userColor } } />\n    </div>\n  );\n};","import React, { useEffect, useContext, useRef } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport classNames from \"classnames\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport { Message } from \"store/types\";\nimport MessageComponent from \"./Message\";\n\nimport styles from './index.module.scss';\n\ntype State = {\n  messages: Message[];\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    messages: [],\n  });\n\n  const { socket } = useContext(SocketContext);\n\n  const chatAreaRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return;\n    }\n    chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight;\n  }, [state.messages]);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"message\", (payload: Message) => {\n      // check if the last one was by the same user\n      setState(draft => {\n        // delete draft from this user\n        // find previous drafts by this user\n        const existingDraft = draft.messages.findIndex(eachMessage => eachMessage.attributes.draft && eachMessage.user.user_id === payload.user.user_id);\n        if (existingDraft > -1) {\n          draft.messages.splice(existingDraft, 1);\n        }\n\n        // if the last message is by the same user, just append to it\n        const lastMessage = draft.messages[draft.messages.length - 1];\n        if (lastMessage && lastMessage.user.user_id === payload.user.user_id) {\n          lastMessage.message += `\\n${payload.message}`;\n          return;\n        }\n\n        draft.messages.push({\n          id: draft.messages.length,\n          attributes: payload.attributes,\n          message: payload.message,\n          user: payload.user\n        });\n\n      });\n    });\n  }, [socket, setState]);\n\n  return (\n    <div className={ classNames(styles.messages, \"my-4\") } ref={ chatAreaRef }>\n      {state.messages.map(eachMessage => (\n        <MessageComponent key={ eachMessage.id } message={ eachMessage } />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext, useRef } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useImmer } from \"use-immer\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport styles from './index.module.scss';\n\ntype State = {\n  message: string,\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n  });\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext);\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    if (state.message.length < 1 || state.message.trim().length < 1) {\n      return;\n    }\n\n    socket?.emit('message', {\n      message: state.message,\n    });\n\n    setState(draft => {\n      draft.message = '';\n    });\n  };\n\n  const sendDraft = (message: string) => {\n    if (message.length < 1 || message.trim().length < 1) {\n      return;\n    }\n    socket?.emit('draft', {\n      message,\n    });\n  };\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    clearTimeout(draftTimer.current);\n\n    const value = e.currentTarget.value;\n    setState(draft => {\n      draft.message = value;\n    });\n\n    draftTimer.current = setTimeout(() => {\n      sendDraft(value);\n    }, 100);\n  };\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={ styles.textBox }>\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder='Type a message...'\n          autoFocus\n          onChange={ onType }\n          value={ state.message }\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport { useImmer } from \"use-immer\";\n\nimport { SocketContext } from \"util/socketProvider\";\nimport { User } from \"store/types\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nimport styles from './index.module.scss';\n\ntype State = {\n  users: User[];\n};\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    users: [],\n  });\n\n  const { socket } = useContext(SocketContext);\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    socket.on(\"users\", (payload: any) => {\n      setState(draft => {\n        draft.users = payload.users;\n      });\n    });\n  }, [socket, setState]);\n\n  return (\n    <div className={ styles.onlineUsers }>\n      { state.users.map(user => (\n        <OverlayTrigger\n          key={ user.user_id }\n          placement='bottom'\n          overlay={\n            <Tooltip id={`user-${user.user_id}`}>\n              @{user.name}\n            </Tooltip>\n          }\n        >\n          <span style={{ color: `#${user.color}` }}>&bull;</span>\n        </OverlayTrigger>\n      )) }\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\n\nimport { API_URL } from '../constants';\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';\nexport const CSRF_HEADER = 'x-csrf-token';\nlet csrfToken = '';\n\nexport type FetchError = {\n  status: number,\n  message: string,\n  errors: string[],\n};\n\ntype FetchReturn<T> = [\n  boolean,\n  T | null,\n  FetchError | null\n];\n\naxios.defaults.withCredentials = true;\n\nfunction useFetch<T>(path: string, method: FetchMethod, body?: any): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [response, setResponse] = useState<T | null>(null);\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body);\n        setResponse(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    sendRequest();\n\n  }, [path, method, body,]);\n\n  return [loading, response, error];\n};\n\nexport const fetchResource = async (path: string, method: FetchMethod, body?: any) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`);\n  }\n\n  const url = `${API_URL}${path}`;\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  };\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken;\n  }\n\n  try {\n    const response = await axios(options);\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER];\n    }\n\n    return await response.data;\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response);\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n      };\n      throw returnError;\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error);\n      const returnError: FetchError = {\n        status: 500,\n        message: error.message,\n        errors: [error.message]\n      };\n      throw returnError;\n  }\n};\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred';\n  }\n\n  return parseErrorList(error).join('. ');\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred';\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError];\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error,\n  );\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i];\n    if (Array.isArray(error)) return error;\n    if (typeof error === 'string') return [error];\n  }\n\n  return [defaultError];\n}\n\nexport default useFetch;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { OverlayTrigger, Tooltip, Button, Modal, Form } from \"react-bootstrap\";\n\nimport styles from './index.module.scss';\nimport { fetchResource } from 'util/fetch';\nimport useGlobalState from 'store/state';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nexport default () => {\n  const { state, dispatch } = useGlobalState();\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [validated, setValidated] = useState<boolean>(false);\n\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false || password !== repeatPassword) {\n      return;\n    }\n\n    setValidated(true);\n\n    const body = {\n      password,\n      repeatPassword,\n    };\n\n    fetchResource('/password', 'POST', body).then(() => {\n      dispatch({\n        type: 'user_password',\n        payload: true,\n      })\n    }).catch(reason => {\n      console.log('login fail reason', reason);\n      dispatch({\n        type: 'error',\n        payload: reason.errors.join(', '),\n      })\n    });\n  };\n\n  let buttonClass = styles.unlocked;\n  let buttonIcon: IconProp = 'lock-open';\n  let tooltipText = 'Set a password to keep your username';\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    buttonClass = styles.locked;\n    buttonIcon = 'lock';\n    tooltipText = 'Change your password';\n  }\n\n  return (\n    <div className={ styles.passwordLock }>\n      <OverlayTrigger\n          placement='bottom'\n          delay={ 500 }\n          overlay={\n            <Tooltip id='passwordLock'>\n              { tooltipText }\n            </Tooltip>\n          }\n        >\n          <Button variant=\"link\" className={ buttonClass } onClick={ handleShow }>\n            <FontAwesomeIcon icon={ buttonIcon } />\n          </Button>\n        </OverlayTrigger>\n\n        <Modal show={ showModal } onHide={handleClose}>\n          <Form noValidate validated={validated} onSubmit={handleSubmit} >\n            <Modal.Header closeButton>\n              <Modal.Title>Claim Username</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n\n              <Form.Group controlId=\"pwd.new\">\n                <Form.Control\n                  as=\"input\"\n                  type=\"password\"\n                  placeholder='Password...'\n                  autoFocus\n                  required\n                  minLength={ 6 }\n                  onChange={ (event) => { setPassword(event.currentTarget.value); } }\n                  value={ password }\n                />\n                <Form.Control.Feedback type=\"invalid\">The password is too short. Minimum length is 6 characters.</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"pwd.new\">\n                <Form.Control\n                  as=\"input\"\n                  type=\"password\"\n                  placeholder='Repeat Password...'\n                  required\n                  minLength={ 6 }\n                  pattern={ password }\n                  onChange={ (event) => { setRepeatPassword(event.currentTarget.value); } }\n                  value={ repeatPassword }\n                />\n                <Form.Control.Feedback type=\"invalid\">The passwords don't match!</Form.Control.Feedback>\n              </Form.Group>\n\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button type='submit' variant=\"primary\">\n                Set password\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n    </div>\n  );\n};","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { useGlobalState } from \"store/state\";\nimport Loader from 'components/Loader';\n\nimport styles from \"./index.module.scss\";\nimport Messages from\"./Messages\";\nimport TextBox from \"./TextBox\";\nimport OnlineUsers from \"./OnlineUsers\";\nimport PasswordLock from \"./PasswordLock\";\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  let chatArea = (\n    <Loader />\n  );\n\n  if (state.socket.connected) {\n    chatArea = (\n      <>\n        <Row>\n          <Col>\n            <PasswordLock />\n          </Col>\n          <Col>\n            <OnlineUsers />\n          </Col>\n        </Row>\n\n        <Messages />\n        <TextBox />\n      </>\n    );\n  }\n\n  return (\n    <Container className={ styles.container }>\n      { chatArea }\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport Loader from \"components/Loader\";\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useGlobalState } from 'store/state';\n\nimport Loading from 'sections/Loading';\n\ntype Props = {\n  path: string,\n  exact?: boolean,\n  component?: React.ComponentType<any>,\n};\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n  if (!state.auth.checked) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (!state.auth.loggedIn) {\n    return (\n      <Redirect to='/login' />\n    );\n  }\n\n  return (\n    <Route\n      path={ props.path }\n      exact={ props.exact }\n      component={ props.component }\n    />\n  );\n};","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useGlobalState } from 'store/state';\n\nimport Loading from 'sections/Loading';\n\ntype Props = {\n  path: string,\n  exact?: boolean,\n  component?: React.ComponentType<any>,\n};\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState();\n  if (!state.auth.checked) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (state.auth.loggedIn) {\n    return (\n      <Redirect to='/' />\n    );\n  }\n\n  return (\n    <Route\n      path={ props.path }\n      exact={ props.exact }\n      component={ props.component }\n    />\n  );\n};","import React from \"react\";\n\nimport { useGlobalState } from \"store/state\";\nimport styles from './index.module.scss';\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  if (!state.offline && !state.error) {\n    return null;\n  }\n\n  let error = state.error;\n  if (Array.isArray(error)) {\n    error = error.join('. ');\n  }\n  if (typeof error !== 'string') {\n    error = String(error);\n  }\n\n  if (state.error) {\n    return (\n      <div className={ styles.offline }>\n        Error: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div className={ styles.offline }>\n      You seem to be offline! Please try again later\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport { useImmer } from 'use-immer';\nimport classNames from 'classnames';\n\nimport { useGlobalState } from 'store/state';\nimport { fetchResource } from 'util/fetch';\nimport Logo from 'components/Logo';\n\nimport styles from './index.module.scss';\nimport { AuthData } from 'store/types';\n\ntype State = {\n  username: string,\n  password: string,\n  hasPassword: boolean,\n  loading: boolean,\n};\n\nexport default () => {\n  const { dispatch } = useGlobalState();\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    hasPassword: false,\n    loading: false,\n  });\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n\n    console.log('login');\n\n    if (localState.loading) {\n      return;\n    }\n\n    setState(draft => {\n      draft.loading = true;\n    });\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n    };\n    fetchResource('/auth', 'POST', body).then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object');\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return;\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    }).catch(reason => {\n      console.log('login fail reason', reason);\n      if (reason.status !== 400) {\n        // username requires password\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      }\n\n\n      setState(draft => {\n        draft.loading = false;\n        if (reason.status === 400) {\n          draft.hasPassword = true;\n        }\n      });\n    });\n  };\n\n  return (\n    <Container className={ classNames(styles.login, 'mt-4') }>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={ localState.loading }\n            autoFocus\n            onChange={e => {\n              const value = e.currentTarget.value;\n              setState(draft => { draft.username = value });\n            }}\n            value={ localState.username }\n          />\n          { localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              disabled={ localState.loading }\n              autoFocus\n              onChange={e => {\n                const value = e.currentTarget.value;\n                setState(draft => { draft.password = value });\n              }}\n              value={ localState.password }\n            />\n          ) }\n          <button type=\"submit\" style={ { visibility: 'hidden' } }>\n            Login\n          </button>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n};","import { Action, AuthData } from \"store/types\";\n\nimport { fetchResource } from \"./fetch\";\n\nconst OFFLINE_RETRY_DELAY = 2000;\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET').then((data: AuthData) => {\n    if (!data || !data.user.user_id) {\n      console.warn('Invalid user object');\n      dispatch({\n        type: 'login',\n        payload: null,\n      })\n      return;\n    }\n\n    dispatch({\n      type: 'login',\n      payload: data,\n    })\n  }).catch(reason => {\n    console.log('Login check failed', reason);\n    if (reason.message === 'Network Error') {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n\n      // try again\n      setTimeout(() => {\n        checkAuth(dispatch);\n      }, OFFLINE_RETRY_DELAY);\n    } else {\n      dispatch({\n        type: 'error',\n        payload: reason.errors.join(', '),\n      })\n\n      dispatch({\n        type: 'login',\n        payload: null,\n      })\n    }\n  });\n};\n\nexport default checkAuth;","import React, { useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport Chat from \"sections/Chat\";\nimport AuthenticatedRoute from \"util/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"util/UnauthenticatedRoute\";\nimport OfflineCheck from \"components/OfflineCheck\";\nimport Login from \"sections/Login\";\nimport useGlobalState from \"store/state\";\nimport checkAuth from \"util/checkAuth\";\n\n\nexport default () => {\n  const { state, dispatch } = useGlobalState();\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked || !state.auth.token) {\n      checkAuth(dispatch);\n    };\n  }, [state.auth.checked, state.auth.token, dispatch]);\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path='/login' component={ Login } />\n        <AuthenticatedRoute path=\"/\" component={ Chat } />\n      </Switch>\n    </>\n  );\n};\n","import React, { useEffect, useContext, useState, useCallback } from 'react';\nimport Helmet from 'react-helmet';\n\nimport { SocketContext } from \"util/socketProvider\";\n\nexport default () => {\n\n    const { socket } = useContext(SocketContext);\n\n    const [windowFocused, setWindowFocused] = useState<boolean>(true);\n    const [titleNotification, setTitleNotification] = useState<boolean>(false);\n\n    const onMessage = useCallback(() => {\n        if (!windowFocused) {\n            setTitleNotification(true);\n        }\n    }, [windowFocused]);\n\n    useEffect(() => {\n        if (!socket) {\n            return;\n        }\n        socket.on(\"message\", onMessage);\n\n    },[socket, onMessage]);\n\n    window.onfocus = function() {\n        setTitleNotification(false);\n        setWindowFocused(true);\n    }\n\n    window.onblur = function() {\n        setWindowFocused(false);\n    }\n\n    return (\n        <Helmet>\n            <title>{titleNotification ? \"• dotdot\" : \"dotdot\"}</title>\n        </Helmet>\n    );\n};\n\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport {\n  faLock,\n  faLockOpen,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// import {\n\n// } from \"@fortawesome/free-regular-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\n\nexport default () => {\n  library.add(\n   faLock,\n   faLockOpen,\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { StateProvider } from \"store/state\";\nimport SocketProvider from \"util/socketProvider\";\n\nimport loadIcons from \"./lib/icons\";\nimport Router from \"./router\";\nimport Title from \"./components/Title\";\n\nimport \"assets/scss/index.scss\";\n\n\nloadIcons();\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"dots\":\"Message_dots__24igM\",\"user\":\"Message_user__3HofW\",\"op\":\"Message_op__3lLYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordLock\":\"PasswordLock_passwordLock__2FTiA\",\"unlocked\":\"PasswordLock_unlocked__21MTQ\",\"pulse\":\"PasswordLock_pulse__2T-_F\",\"locked\":\"PasswordLock_locked__1mCl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};"],"sourceRoot":""}