{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/PasswordLock/index.module.scss","components/OfflineCheck/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","assets/sounds/newMessage.mp3","sections/Chat/Messages/Message/index.module.scss","store/types.ts","constants.ts","sections/Admin/RealtimeChart/index.tsx","lib/secondsToHuman.ts","util/socketProvider.tsx","sections/Admin/index.tsx","store/reducer.ts","store/state.tsx","components/Logo/index.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/HelpMessage/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/ScrollBox/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","util/fetch.ts","sections/Chat/PasswordLock/index.tsx","sections/Chat/index.tsx","sections/loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/dateDiff.ts","lib/icons.ts","index.tsx","components/Logo/index.module.scss","sections/Chat/Messages/index.module.scss","sections/Chat/TextBox/index.module.scss"],"names":["module","exports","EVENTS","CONNECT","DISCONNECT","MESSAGE","COMMAND","HISTORY","ONLINE_USERS","STATS","TIMER","CONTROL","CHANGE_ROOM","API_URL","process","VALID_USERNAME","CAPTCHA_KEY","props","data","map","num","index","date","value","i","length","MAX_STATS_BARS","push","style","width","height","barSize","barCategoryGap","barGap","margin","top","bottom","left","right","allowDecimals","dataKey","tick","label","position","offset","fill","stroke","isAnimationActive","type","cursor","forHumans","seconds","levels","Math","floor","returntext","max","substr","trim","SocketContext","createContext","socket","useGlobalState","state","dispatch","useState","setSocket","useEffect","payload","auth","loggedIn","newSocket","socketio","reconnection","timeout","setInterval","connected","emit","Object","values","forEach","event","on","error","provider","Provider","children","useContext","totalTime","stats","timeActive","timeInactive","tableData","header","onlineUsers","round","totalUsers","totalMessages","cpuUsage","freeMemory","uptime","sessions","roomData","rooms","Container","fluid","Row","Col","RealtimeChart","messages","users","onClick","room","activePayload","id","domain","stackId","Table","size","variant","className","row","key","produce","draft","action","offline","checked","user","hasPassword","helpMessage","systemUser","message","timestamp","Date","attributes","private","existingDraft","findIndex","eachMessage","user_id","splice","lastMessage","shift","keys","name","icon","color","isActive","initialState","draftTimer","Array","StateContext","React","console","warn","StateProvider","useReducer","reducer","infinite","animationIterationCount","animationDirection","styles","logo","blob","svgFilter","xmlns","version","in","stdDeviation","result","mode","in2","Logo","href","rel","target","USER_REGEX","RegExp","URL_REGEX","userData","find","userColor","isSystem","isUserOnline","iconName","HelpMessage","reactStringReplace","username","userIndex","mention","url","classNames","system","toDateString","background","OverlayTrigger","placement","overlay","Tooltip","spin","toLocaleTimeString","hour","minute","body","boxRef","onScrollChanged","threshold","scrollTop","setScrollTop","setHeight","scrollDebounce","useRef","onScrollDebounced","useCallback","isAtBottom","clearTimeout","current","setTimeout","scrollToBottom","scrollHeight","offsetHeight","updateScrollState","shouldScroll","customThreshold","abs","window","addEventListener","removeEventListener","newHeight","useImmer","scrollAtBottom","unseenMessages","localState","setLocalState","chatAreaRef","unseen","unseenContainer","Button","messageScroll","ref","ScrollBox","Message","getTime","onFocus","onBlur","to","isCommand","setState","askForHelp","sendMessage","Form","noValidate","onSubmit","e","preventDefault","textBox","command","Group","controlId","Control","as","placeholder","autoFocus","onChange","currentTarget","isPM","words","split","test","textIcon","isCurrentUser","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","a","Error","options","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","isArray","parseErrors","useFetch","showModal","setShowModal","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","handleClose","buttonClass","unlocked","buttonIcon","tooltipText","title","locked","passwordLock","delay","padding","Modal","show","onHide","stopPropagation","checkValidity","then","catch","reason","Header","closeButton","Title","Body","required","minLength","Feedback","pattern","Footer","isTextBoxFocused","scrollingWhileFocused","chatArea","Loader","setHeaderPosition","headerStyle","pageYOffset","chat","scrollingChat","PasswordLock","isAdmin","marginLeft","OnlineUsers","Messages","TextBox","exact","component","String","verified","loading","captchaRef","oncaptchaChange","token","captchaToken","resetCaptcha","theme","matchMedia","matches","login","execute","disabled","maxLength","sitekey","CAPTCHA_PROVIDER","visibility","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Admin","Chat","lastSound","windowFocused","titleNotification","useSound","newMessageSound","interrupt","volume","play","onMessage","msg","t1","t2","dateDiff","library","add","faLock","faLockOpen","faCircle","faDotCircle","farDotCircle","faCircleNotch","faCode","faCog","faArrowAltCircleDown","faMeh","farMeh","faAngry","faDizzy","faFlushed","faFrown","faFrownOpen","faGrimace","faGrin","faGrinAlt","faGrinBeam","faGrinBeamSweat","faGrinHearts","faGrinSquint","faGrinSquintTears","faGrinStars","faGrinTears","faGrinTongue","faGrinTongueSquint","faGrinTongueWink","faGrinWink","faKiss","faKissBeam","faKissWinkHeart","faLaugh","faLaughBeam","faLaughSquint","faLaughWink","faMehBlank","faMehRollingEyes","faSadCry","faSadTear","faSmile","faSmileBeam","faSmileWink","faSurprise","faTired","farAngry","farDizzy","farFlushed","farFrown","farFrownOpen","farGrimace","farGrin","farGrinAlt","farGrinBeam","farGrinBeamSweat","farGrinHearts","farGrinSquint","farGrinSquintTears","farGrinStars","farGrinTears","farGrinTongue","farGrinTongueSquint","farGrinTongueWink","farGrinWink","farKiss","farKissBeam","farKissWinkHeart","farLaugh","farLaughBeam","farLaughSquint","farLaughWink","farMehBlank","farMehRollingEyes","farSadCry","farSadTear","farSmile","farSmileBeam","farSmileWink","farSurprise","farTired","faShieldAlt","faQuestionCircle","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de90cd1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__LEZtX\",\"scrollingChat\":\"Chat_scrollingChat__165RB\",\"header\":\"Chat_header__ThKzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordLock\":\"PasswordLock_passwordLock__2FTiA\",\"unlocked\":\"PasswordLock_unlocked__21MTQ\",\"pulse\":\"PasswordLock_pulse__2T-_F\",\"locked\":\"PasswordLock_locked__1mCl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","module.exports = __webpack_public_path__ + \"static/media/newMessage.482e2f99.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"mention\":\"Message_mention__82QFp\",\"system\":\"Message_system__2g6ZE\",\"user\":\"Message_user__3HofW\",\"timestamp\":\"Message_timestamp__2armv\",\"offline\":\"Message_offline__32gHu\",\"icon\":\"Message_icon__ATXFm\",\"body\":\"Message_body__32TEj\",\"draft\":\"Message_draft__1zB7h\",\"header\":\"Message_header__3wUCX\",\"private\":\"Message_private__ORZ48\"};","import { IconName } from \"@fortawesome/fontawesome-svg-core\"\n\nexport type User = {\n  user_id: string\n  name: string\n  color: string\n  icon: IconName | null\n  isActive: boolean\n  isAdmin?: boolean\n  hasPassword: boolean\n}\n\nexport type Message = {\n  user: User\n  timestamp: Date\n  message: string\n  attributes: {\n    draft: boolean\n    private: boolean\n    to?: string | null\n  }\n}\n\nexport type RoomStats = {\n  id: string,\n  active: number,\n  inactive: number,\n}\n\nexport type AppState = {\n  auth: {\n    checked: boolean\n    loggedIn: boolean\n    user: User | null\n  }\n  socket: {\n    connected: boolean\n  }\n  draftTimer: number,\n  onlineUsers: User[]\n  messages: Message[]\n  stats: {\n    messages: number[],\n    users: number[],\n    rooms: RoomStats[],\n    onlineUsers: number,\n    totalMessages: number,\n    totalUsers: number,\n    cpuUsage: number,\n    freeMemory: number,\n    uptime: number,\n    timeActive: number,\n    timeInactive: number,\n    sessions: number,\n  }\n  offline: boolean\n  error: string | null\n\n  [key: string]: any\n}\n\nexport type Action = {\n  type: string\n  payload?: any\n}\n\nexport type AppContext = {\n  state: AppState\n  dispatch: React.Dispatch<Action>\n}\n\nexport type AuthData = {\n  user: User\n  token: string\n}\n\nexport const EVENTS = {\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  MESSAGE: 'message',\n  COMMAND: 'command',\n  HISTORY: 'history',\n  ONLINE_USERS: 'users',\n  STATS: 'stats',\n  TIMER: 'timer',\n  CONTROL: 'control',\n  CHANGE_ROOM: 'change_room',\n};","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im'\nexport const VALID_USERNAME = /^[A-Za-z0-9]+(?:[ _][A-Za-z0-9]+)*_?$/i\nexport const CAPTCHA_PROVIDER = process.env.REACT_APP_CAPTCHA_PROVIDER || 'recaptcha'\nexport const CAPTCHA_KEY = process.env.REACT_APP_CAPTCHA_KEY || ''\nexport const MAX_MESSAGE_HISTORY = 100\n","import React from 'react'\nimport { AreaChart, XAxis, YAxis, Area, Tooltip, ResponsiveContainer, Label } from 'recharts'\nimport { MAX_STATS_BARS } from '..';\n\ntype Props = {\n  data: number[],\n  height?: number,\n  label: string,\n};\n\nexport default (props: Props) => {\n  const data = props.data.map((num, index) => ({\n    date: index,\n    value: num,\n  }))\n\n  for (let i = data.length; i < MAX_STATS_BARS; i++) {\n    data.push({\n      date: i,\n      value: 0,\n    })\n  }\n\n  return (\n    <div style={ { width: '100%', height: `${ props.height || 250 }px` } }>\n      <ResponsiveContainer>\n        <AreaChart data={data} barSize={ 5 } barCategoryGap={ 2 } barGap={ 2 } margin={{ top: 50, bottom: 20, left: 0, right: 0}}>\n          <YAxis allowDecimals={ false } />\n          <XAxis dataKey=\"date\" tick={false}>\n            <Label value={ props.label } position=\"bottom\" offset={ -15 } fill='#ccc' />\n          </XAxis>\n          <Area dataKey=\"value\" fill=\"#f75f00\" stroke=\"#f75f00\" isAnimationActive={ false } type='linear' />\n          <Tooltip cursor={ { fill: 'rgba(255, 255, 255, 0.1)' } }/>\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","export function forHumans ( seconds: number ) {\n  const levels: [number, string][] = [\n      [Math.floor(seconds / 31536000), 'years'],\n      [Math.floor((seconds % 31536000) / 86400), 'days'],\n      [Math.floor(((seconds % 31536000) % 86400) / 3600), 'hours'],\n      [Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 'minutes'],\n      [(((seconds % 31536000) % 86400) % 3600) % 60, 'seconds'],\n  ];\n  let returntext = '';\n\n  for (let i = 0, max = levels.length; i < max; i++) {\n      if ( levels[i][0] === 0 ) continue;\n      returntext += ' ' + levels[i][0] + ' ' + (levels[i][0] === 1 ? levels[i][1].substr(0, levels[i][1].length-1): levels[i][1]);\n  };\n  return returntext.trim();\n}","import React, { createContext, useEffect, useState } from 'react'\nimport socketio from 'socket.io-client'\n\nimport { useGlobalState } from 'store/state'\nimport { API_URL } from '../constants'\nimport { Message, EVENTS } from 'store/types'\n\nconst USAGE_TIMER_INTERAL = 30 * 1000\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null\n}\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n})\n\ntype Props = {\n  children: any\n}\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null)\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    })\n\n    if (!state.auth.loggedIn) {\n      return\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n    })\n\n    setInterval(() => {\n      if (newSocket.connected) {\n        newSocket.emit('timer')\n      }\n    }, USAGE_TIMER_INTERAL)\n\n    Object.values(EVENTS).forEach(event => {\n      newSocket.on(event, (payload: any) => {\n        dispatch({\n          type: `socket_${event}`,\n          payload: payload,\n        })\n      })\n    })\n\n    newSocket.on('stats', (payload: Message[]) => {\n      dispatch({\n        type: 'stats',\n        payload,\n      })\n    })\n\n    newSocket.on('connect_error', () => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('connect_timeout', () => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: `socket_${EVENTS.DISCONNECT}`,\n      })\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        })\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n      }\n    })\n\n    setSocket(newSocket)\n  }, [dispatch, state.auth.loggedIn])\n\n  let provider = {\n    socket,\n  }\n\n  return (\n    <SocketContext.Provider value={provider}>\n      {props.children}\n    </SocketContext.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Container, Row, Col, Table } from 'react-bootstrap'\nimport { BarChart, XAxis, YAxis, Bar, Tooltip, ResponsiveContainer, Label } from 'recharts'\n\nimport useGlobalState from 'store/state';\nimport RealtimeChart from './RealtimeChart';\nimport { forHumans } from 'lib/secondsToHuman';\nimport { SocketContext } from 'util/socketProvider';\nimport { EVENTS } from 'store/types';\n\nexport const MAX_STATS_BARS = 100;\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  const { socket } = useContext(SocketContext)\n\n  const totalTime = state.stats.timeActive + state.stats.timeInactive\n\n  const tableData = [\n    {\n      header: 'Users Online',\n      data: `${state.stats.onlineUsers}  (${Math.round(state.stats.onlineUsers * 100 / state.stats.totalUsers)}%)`,\n    },\n    {\n      header: 'Total Users',\n      data: state.stats.totalUsers,\n    },\n    {\n      header: 'Total Messages',\n      data: state.stats.totalMessages,\n    },\n    {\n      header: 'CPU Usage',\n      data: state.stats.cpuUsage + '%',\n    },\n    {\n      header: 'Free Memory',\n      data: state.stats.freeMemory + '%',\n    },\n    {\n      header: 'Server Uptime',\n      data: forHumans(state.stats.uptime),\n    },\n    {\n      header: 'Time Active / Ses',\n      data: forHumans(Math.round(state.stats.timeActive / state.stats.sessions)),\n    },\n    {\n      header: 'Time Inactive / Sess',\n      data: forHumans(Math.round(state.stats.timeInactive / state.stats.sessions)),\n    },\n    {\n      header: 'Total Sessions',\n      data: state.stats.sessions,\n    },\n    {\n      header: 'Avg Sessions / user',\n      data: Math.round(state.stats.sessions / state.stats.totalUsers),\n    },\n    {\n      header: 'Total Time Active',\n      data: forHumans(state.stats.timeActive) + ' (' + Math.round(state.stats.timeActive * 100 / totalTime) + '%)',\n    },\n    {\n      header: 'Total Time Inactive',\n      data: forHumans(state.stats.timeInactive) + ' (' + Math.round(state.stats.timeInactive * 100 / totalTime) + '%)',\n    },\n  ]\n\n  const roomData = state.stats.rooms\n\n  const onRoomClick = (event: any) => {\n    const room = event.activePayload[0].payload.id\n    if (socket) {\n      socket.emit(EVENTS.CHANGE_ROOM, {\n        room,\n      })\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <RealtimeChart\n            data={ state.stats.messages }\n            label='Realtime Messages'\n          />\n        </Col>\n        <Col>\n          <RealtimeChart\n            data={ state.stats.users }\n            label='Realtime Users'\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div style={ { width: '100%', height: '400px' } }>\n            <ResponsiveContainer>\n              <BarChart onClick={ onRoomClick } data={roomData} barSize={ 10 } margin={{ top: 50, bottom: 0, left: 0, right: 0}}>\n                <YAxis allowDecimals={ false } domain={ [ 0, 10 ] } />\n                <XAxis tick={false}>\n                  <Label value='Rooms' position=\"bottom\" offset={ -15 } fill='#ccc' />\n                </XAxis>\n                <Bar dataKey=\"active\" stackId='a' fill=\"#f75f00\" />\n                <Bar dataKey=\"inactive\" stackId='a' fill=\"#555\" />\n                <Tooltip cursor={ { fill: 'rgba(255, 255, 255, 0.1)' } }/>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </Col>\n      </Row>\n      <Container>\n        <Row>\n          <Col>\n            <Table size='sm' variant=\"dark\" className='mt-4'>\n              <tbody>\n                { tableData.map(row => (\n                  <tr key={ row.header }>\n                    <th style={ { width: '230px' } }>\n                      { row.header }\n                    </th>\n                    <td>\n                      { row.data }\n                    </td>\n                  </tr>\n                )) }\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}","import produce from 'immer'\n\nimport { AppState, Action, Message, EVENTS, User } from './types'\nimport { MAX_MESSAGE_HISTORY } from '../constants'\nimport { MAX_STATS_BARS } from 'sections/Admin'\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n  // console.log('REDUCER', action)\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true\n      }\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false\n        draft.auth.user = null\n        break\n      }\n\n      draft.offline = false\n\n      draft.auth.loggedIn = true\n      draft.auth.user = action.payload.user\n      break\n    case 'offline':\n      draft.offline = true\n      draft.error = null\n      draft.socket.connected = false\n      break\n    case 'error':\n      draft.error = action.payload\n      break\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true\n      }\n      break\n    case 'help_message':\n      const helpMessage = {\n        user: systemUser,\n        message: '/help',\n        timestamp: new Date(),\n        attributes: {\n          private: false,\n          draft: false,\n        }\n      };\n      draft.messages.push(helpMessage)\n      break;\n    case `socket_${EVENTS.CONNECT}`:\n      draft.socket.connected = true\n      draft.offline = false\n      draft.error = null\n      break\n    case `socket_${EVENTS.DISCONNECT}`:\n      draft.socket.connected = false\n      draft.offline = true\n      draft.error = null\n      break\n    case `socket_${EVENTS.ONLINE_USERS}`:\n      draft.onlineUsers = action.payload.users\n      break\n    case `socket_${EVENTS.MESSAGE}`:\n      const message: Message = action.payload\n      // delete draft from this user\n      const existingDraft = draft.messages.findIndex(\n        (eachMessage) =>\n          eachMessage.attributes.draft &&\n          eachMessage.user.user_id === message.user.user_id\n      )\n      if (existingDraft > -1) {\n        draft.messages.splice(existingDraft, 1)\n      }\n\n      if (message.message.trim().length < 1) {\n        return;\n      }\n\n      if (!message.attributes.draft) {\n        const lastMessage = draft.messages[draft.messages.length - 1]\n\n        if (lastMessage && lastMessage.user.user_id === message.user.user_id && lastMessage.attributes.private === message.attributes.private) {\n          // last message was by this same user (and it's the same kind of message)\n          lastMessage.message += `\\n${message.message}`\n          lastMessage.timestamp = new Date(message.timestamp)\n          return\n        }\n      }\n\n      draft.messages.push({\n        timestamp: new Date(message.timestamp),\n        attributes: message.attributes,\n        message: message.message,\n        user: message.user,\n      })\n\n      if (draft.messages.length > MAX_MESSAGE_HISTORY) {\n        draft.messages.shift()\n      }\n      break;\n    case `socket_${EVENTS.HISTORY}`:\n      draft.messages = action.payload.map((eachMessage: Message) => {\n        eachMessage.timestamp = new Date(eachMessage.timestamp)\n        return eachMessage\n      });\n      break;\n    case `socket_${EVENTS.STATS}`:\n      draft.stats.messages.push(action.payload.messages)\n      if (draft.stats.messages.length > MAX_STATS_BARS) {\n        draft.stats.messages.shift()\n      }\n\n      draft.stats.users.push(action.payload.users)\n      if (draft.stats.users.length > MAX_STATS_BARS) {\n        draft.stats.users.shift()\n      }\n\n      draft.stats.rooms = action.payload.rooms\n      draft.stats.onlineUsers = action.payload.users\n      draft.stats.totalUsers = action.payload.totalUsers\n      draft.stats.totalMessages = action.payload.totalMessages\n      draft.stats.cpuUsage = Math.round(action.payload.cpuUsage * 100)\n      draft.stats.freeMemory = Math.round(action.payload.freeMemory * 100)\n      draft.stats.uptime = Math.round(action.payload.uptime)\n      draft.stats.timeActive = action.payload.timeActive * 30\n      draft.stats.timeInactive = action.payload.timeInactive * 30\n      draft.stats.sessions = action.payload.sessions\n      break;\n    case `socket_${EVENTS.CONTROL}`:\n      Object.keys(action.payload).forEach(key => {\n        if (typeof draft[key] !== 'undefined') {\n          draft[key] = action.payload[key]\n        }\n      })\n  }\n})\n\nconst systemUser: User = {\n  user_id: 'dotdot',\n  name: 'dotdot',\n  icon: 'cog',\n  color: 'f75f00',\n  isActive: true,\n  hasPassword: true,\n};","import React from 'react'\n\nimport reducer from './reducer'\nimport { AppState, AppContext, Action } from './types'\nimport { MAX_STATS_BARS } from 'sections/Admin'\n\nexport const initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n  },\n  socket: {\n    connected: false,\n  },\n  draftTimer: 100,\n  onlineUsers: [],\n  messages: [],\n  stats: {\n    messages: new Array(MAX_STATS_BARS).fill(0),\n    users: new Array(MAX_STATS_BARS).fill(0),\n    rooms: [],\n    onlineUsers: 0,\n    totalUsers: 0,\n    totalMessages: 0,\n    cpuUsage: 0,\n    freeMemory: 0,\n    uptime: 0,\n    timeActive: 0,\n    timeInactive: 0,\n    sessions: 1,\n  },\n  offline: false,\n  error: null,\n}\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider')\n  return initialState\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n})\n\ntype Props = {\n  state?: AppState,\n  children: any\n}\n\nexport const StateProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(reducer, props.state || initialState)\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch }\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  )\n}\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext)\nexport default useGlobalState\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  infinite?: boolean\n}\n\nexport default (props: Props) => {\n  const style: any = {}\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite'\n    style.animationDirection = 'alternate'\n  }\n  return (\n    <>\n      <div className={styles.logo}>\n        <div className={styles.blob} style={style}></div>\n        <div className={styles.blob} style={style}></div>\n      </div>\n\n      <svg\n        className={styles.svgFilter}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n      >\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport Logo from 'components/Logo'\n\ntype Props = {\n  text?: string | null\n}\n\nexport default (props: Props) => {\n  return (\n    <>\n      <Logo infinite />\n    </>\n  )\n}\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\nexport default () => {\n  return (\n    <div>\n      <h4>Welcome to dotdot:</h4>\n      <p>\n        This is a place where you can chat with people whenever you want :)<br />\n        We don't save any messages, so when the last person in a chat disconnects, the chat history is lost.\n      </p>\n      <p>Inactive user accounts are deleted after 2 weeks without chatting.</p>\n\n      <h4>Keep your User</h4>\n      <p>You can set a password to protect your username from being deleted and used by someone else. Simply click on the lock in the top left corner.</p>\n\n      <h4>Private Messages</h4>\n      <p>You can send anyone a private message simply by starting your message with @ and their name. You'll see the text box change to orange and a lock icon appear.</p>\n      <p>Only you and the person you send the message to can see them. If they are offline they won't receive the message</p>\n\n      <h4>Commands</h4>\n      <p>There are some commands that you can use:</p>\n      <Table size='sm' variant='dark'>\n        <thead>\n          <tr>\n            <th>Command</th>\n            <th>Example</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><code>/help</code></td>\n            <td><code>/help</code></td>\n            <td>It shows this message</td>\n          </tr>\n          <tr>\n            <td><code>/set color</code></td>\n            <td><code>/set color eb0000</code></td>\n            <td>Change your color, the color needs to be a hex representation (sorry if this sounds confusing, soon there will be an easier way to do this)</td>\n          </tr>\n          <tr>\n            <td><code>/set icon</code></td>\n            <td><code>/set icon smile</code></td>\n            <td>Change your icon, pick any of the ones from <a href=\"https://fontawesome.com/icons?d=gallery&s=regular&c=emoji&m=free\" rel=\"noopener noreferrer\" target='_blank'>this list</a></td>\n          </tr>\n          <tr>\n            <td><code>/list</code></td>\n            <td><code>/list</code></td>\n            <td>Get a list of the users who are currently online</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  )\n}","import React from 'react'\nimport classNames from 'classnames'\nimport reactStringReplace from 'react-string-replace'\nimport { IconProp, IconName } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\nimport { Message } from 'store/types'\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport HelpMessage from './HelpMessage'\n\ntype Props = {\n  message: Message\n}\n\nconst USER_REGEX = new RegExp('@([A-Za-z0-9]+(?:[_][A-Za-z0-9]+)*_?)', 'gmi');\nconst URL_REGEX = new RegExp(/((?:ftp|http|https):\\/\\/(?:\\w+:{0,1}\\w*@)?(?:\\S+)(?::[0-9]+)?(?:\\/|\\/(?:[\\w#!:.?+=&%@!\\-/]))?)/, 'gmi');\n\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n\n  // User data comes from online users if available\n  const userData = state.onlineUsers.find(\n    user => user.user_id === props.message.user.user_id\n  ) || props.message.user\n\n  const userColor = `#${userData.color}`\n  const isSystem = userData.user_id === 'dotdot'\n  const isUserOnline = isSystem || (state.onlineUsers.findIndex(user => user.user_id === userData.user_id) > -1 && userData.isActive)\n\n  let iconName: IconName = 'circle'\n  if (userData.icon) {\n    iconName = userData.icon\n  } else if (userData.user_id === state.auth.user?.user_id) {\n    iconName = 'dot-circle'\n  }\n\n  // special icons\n  if (isSystem) {\n    iconName = 'cog'\n  } else if (props.message.attributes.draft) {\n    iconName = 'circle-notch'\n  } else if (props.message.attributes.private) {\n    iconName = 'lock'\n  } else if (!isUserOnline) {\n    iconName = 'meh'\n  }\n\n  let icon: IconProp = iconName\n  if (userData.user_id === state.auth.user?.user_id) {\n    icon = ['far', iconName]\n  }\n\n  let message\n\n  if (isSystem && props.message.message === '/help') {\n    message = (\n      <HelpMessage />\n    )\n  } else {\n    // replace mentions with colored version\n    message = reactStringReplace(props.message.message, USER_REGEX, (username, index) => {\n      let style = {}\n      const userIndex = state.onlineUsers.findIndex(user => user.name === username)\n      if (userIndex > -1) {\n        style = {\n          color: `#${state.onlineUsers[userIndex].color}`\n        }\n      }\n      return (\n        <span key={index} className={ styles.mention } style={ style }>\n          @{username}\n        </span>\n      );\n    })\n    // auto-link urls\n    message = reactStringReplace(message, URL_REGEX, (url) => {\n      return (\n        <a key={ url } href={ url } rel=\"noopener noreferrer\" target='_blank'>{ url }</a>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classNames(styles.message, {\n        [styles.system]: isSystem,\n        [styles.offline]: !isUserOnline,\n        [styles.draft]: props.message.attributes.draft,\n        [styles.private]: props.message.attributes.private,\n      })}\n      key={props.message.timestamp.toDateString()}\n    >\n      <div className={classNames(styles.icon, { [styles.private]: props.message.attributes.private })} style={{ color: userColor, background: userColor }}>\n        { props.message.attributes.private && (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={(\n              <Tooltip id={`user-${userData.user_id}`}>\n                Private message from <b>@{userData.name}</b><br />\n                Only you can see this.\n              </Tooltip>\n            )}\n          >\n            <FontAwesomeIcon icon={ icon } />\n          </OverlayTrigger>\n        ) }\n        { !props.message.attributes.private && (\n          <FontAwesomeIcon icon={ icon } spin={ props.message.attributes.draft } />\n        ) }\n      </div>\n      <div className={classNames(styles.timestamp)}>\n        {props.message.attributes.draft ? 'now' : props.message.timestamp.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\n      </div>\n      <span\n        className={classNames(styles.user)}\n        style={ { color: userColor } }\n      >\n        {userData.name}\n      </span>\n      <div className={classNames(styles.body)}>\n        {message}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\n\nconst SCROLL_THRESHOLD = 100\nconst SCROLL_DEBOUNCE_DELAY = 150\n\ntype Props = {\n  onScrollChanged?: (isAtBottom: boolean) => void,\n  boxRef: React.RefObject<HTMLElement | null>,\n  threshold?: number,\n  children?: any,\n}\n\nexport default ({ boxRef, onScrollChanged, threshold, children }: Props) => {\n  const [ scrollTop, setScrollTop ] = useState<number>(-1);\n  const [ height, setHeight ] = useState<number>(0);\n  const scrollDebounce = useRef<any>(null)\n\n  const onScrollDebounced = useCallback((isAtBottom: boolean) => {\n    clearTimeout(scrollDebounce.current)\n\n    if (onScrollChanged) {\n      scrollDebounce.current = setTimeout(() => {\n        onScrollChanged(isAtBottom)\n      }, SCROLL_DEBOUNCE_DELAY)\n    }\n  }, [onScrollChanged])\n\n  const scrollToBottom = useCallback(() => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    const scrollHeight = boxRef.current.scrollHeight - boxRef.current.offsetHeight\n    boxRef.current.scrollTop = scrollHeight\n\n    setScrollTop(boxRef.current.scrollTop)\n    onScrollDebounced(true)\n  }, [boxRef, onScrollDebounced, setScrollTop])\n\n  const updateScrollState = useCallback((shouldScroll: boolean) => () => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    if (scrollTop > 0) {\n      const customThreshold = threshold || SCROLL_THRESHOLD\n      if (scrollTop > 0 && Math.abs(boxRef.current.scrollTop - scrollTop) > customThreshold) {\n         // we are not at the bottom of the page, so we won't do anything\n        onScrollDebounced(false)\n        return\n      } else {\n        onScrollDebounced(true)\n      }\n    }\n\n    if (shouldScroll) {\n      scrollToBottom()\n    }\n  }, [boxRef, onScrollDebounced, threshold, scrollToBottom, scrollTop])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", scrollToBottom, true);\n\n    if (boxRef && boxRef.current) {\n      boxRef.current.addEventListener('scroll', updateScrollState(false), true)\n    }\n\n    // cleanup\n    return () => {\n      window.removeEventListener(\"resize\", scrollToBottom, true);\n    }\n  }, [boxRef, scrollToBottom, updateScrollState])\n\n  useEffect(() => {\n    // when the children changes, recalculate\n    if (!boxRef.current) {\n      return;\n    }\n    const newHeight = boxRef.current.scrollHeight;\n    if (newHeight !== height) {\n      setHeight(newHeight)\n      updateScrollState(true)()\n    }\n  }, [boxRef, height, updateScrollState, children])\n\n  return (\n    <>\n      { children }\n    </>\n  )\n}\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Container, Button } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport MessageComponent from './Message'\n\nimport styles from './index.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ScrollBox from './ScrollBox'\nimport useGlobalState from 'store/state'\n\ntype State = {\n  scrollAtBottom: boolean,\n  unseenMessages: boolean, // are there new messages below the scroll point?\n}\n\nexport default () => {\n  const { state } = useGlobalState()\n  const [localState, setLocalState] = useImmer<State>({\n    scrollAtBottom: true,\n    unseenMessages: false,\n  })\n\n  const chatAreaRef = useRef<HTMLDivElement>(null)\n\n  const onScrollChanged = useCallback((isAtBottom: boolean) => {\n    setLocalState(draft => {\n      draft.scrollAtBottom = isAtBottom\n      if (isAtBottom) {\n        draft.unseenMessages = false\n      }\n    })\n  }, [setLocalState])\n\n  const scrollToBottom = useCallback(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return\n    }\n    const scrollHeight = chatAreaRef.current.scrollHeight - chatAreaRef.current.offsetHeight\n    chatAreaRef.current.scrollTop = scrollHeight\n\n    setLocalState(draft => {\n      draft.unseenMessages = false\n    })\n  }, [setLocalState])\n\n  useEffect(() => {\n    setLocalState(draft => {\n      draft.unseenMessages = !draft.scrollAtBottom\n    })\n  }, [state.messages, setLocalState])\n\n  // TODO set this on new messages: draft.unseenMessages = !draft.scrollAtBottom\n\n  return (\n    <div className={ styles.messages }>\n      { localState.unseenMessages && (\n        <div className={ classNames(styles.unseen) }>\n          <Container className={ styles.unseenContainer }>\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={ scrollToBottom }>\n              <FontAwesomeIcon icon='arrow-alt-circle-down' /> New messages\n            </Button>\n          </Container>\n        </div>\n      ) }\n        <div className={classNames(styles.messageScroll)} ref={chatAreaRef}>\n          <div className='container'>\n            <ScrollBox\n              boxRef={ chatAreaRef }\n              onScrollChanged={ onScrollChanged }\n            >\n              {state.messages.map((eachMessage) => (\n                <MessageComponent key={eachMessage.timestamp.getTime()} message={eachMessage} />\n              ))}\n            </ScrollBox>\n          </div>\n        </div>\n    </div>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport styles from './index.module.scss'\nimport { VALID_USERNAME } from '../../../constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport useGlobalState from 'store/state'\nimport { EVENTS } from 'store/types'\n\ntype State = {\n  message: string\n  private: boolean\n  to: string | null\n  isCommand: boolean\n}\n\ntype Props = {\n  onFocus?: () => void\n  onBlur?: () => void\n}\n\nexport default ({ onFocus, onBlur }: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    message: '',\n    private: false,\n    to: null,\n    isCommand: false,\n  })\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext)\n\n  const askForHelp = () => {\n    dispatch({\n      type: 'help_message',\n    })\n  }\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    if (localState.message.length < 1 || localState.message.trim().length < 1) {\n      return\n    }\n\n    sendMessage(localState.message)\n\n    setState((draft) => {\n      draft.message = ''\n      draft.private = false\n      draft.isCommand = false\n    })\n  }\n\n  const sendMessage = (message: string, draft: boolean = false) => {\n    if (!draft && (message.length < 1 || message.trim().length < 1)) {\n      return\n    }\n\n    if (message === '/help') {\n      return askForHelp()\n    }\n\n    let type = EVENTS.MESSAGE\n    if (localState.isCommand) {\n      type = EVENTS.COMMAND\n    }\n    socket?.emit(type, {\n      message,\n      attributes: {\n        draft,\n        private: localState.private,\n        to: localState.to,\n      },\n    })\n  }\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    clearTimeout(draftTimer.current)\n\n    const value: string = e.currentTarget.value\n\n    // special messages\n    let isCommand = false\n    let isPM = false\n    let to: string | null = null\n\n    if (value[0] === '/') {\n      isCommand = true\n    } else if (value[0] === '@') {\n      const words = value.split(' ')\n      isPM = true\n      if (\n        words.length > 0 &&\n        words[0][0] === '@' &&\n        VALID_USERNAME.test(words[0].substr(1))\n      ) {\n        to = words[0].substr(1)\n      }\n    }\n\n    setState((draft) => {\n      draft.message = value\n      draft.private = isPM\n      draft.to = to\n      draft.isCommand = isCommand\n    })\n\n    if (isPM || isCommand) {\n      return\n    }\n\n    if (state.draftTimer > 0) {\n      draftTimer.current = setTimeout(() => {\n        sendMessage(value, true)\n      }, state.draftTimer)\n    }\n  }\n\n  let icon: IconProp = 'question-circle'\n  if (localState.isCommand) {\n    icon = 'code'\n  } else if (localState.private) {\n    icon = 'lock'\n  }\n\n  const onIconClick = () => {\n    if (icon !== 'question-circle') {\n      return\n    }\n    askForHelp()\n  }\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className={classNames(styles.textBox, 'container', {\n        [styles.private]: localState.private,\n        [styles.command]: localState.isCommand,\n      })}\n    >\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          autoFocus\n          onChange={onType}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          value={localState.message}\n        />\n        <div className={styles.textIcon} onClick={onIconClick}>\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      </Form.Group>\n    </Form>\n  )\n}\n","import React from 'react'\nimport { IconProp, IconName } from '@fortawesome/fontawesome-svg-core'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  return (\n    <div className={styles.onlineUsers}>\n      {\n        state.onlineUsers.map((user) => {\n          const isCurrentUser = user.user_id === state.auth.user?.user_id\n\n          let iconName: IconName = 'circle'\n          if (user.icon) {\n            iconName = user.icon\n          } else if (user.user_id === state.auth.user?.user_id) {\n            iconName = 'dot-circle'\n          }\n\n          if (!user.isActive) {\n            iconName = 'meh'\n          }\n\n          let icon: IconProp = iconName\n          if (isCurrentUser) {\n            icon = ['far', iconName]\n          }\n\n          return (\n            <OverlayTrigger\n              key={user.user_id}\n              placement=\"bottom\"\n              overlay={<Tooltip id={`user-${user.user_id}`}>@{user.name}</Tooltip>}\n            >\n              <span style={{ color: `#${user.color}` }}>\n                <FontAwesomeIcon icon={ icon } />\n              </span>\n            </OverlayTrigger>\n          )\n        })\n      }\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { API_URL } from '../constants'\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\nexport const CSRF_HEADER = 'x-csrf-token'\nlet csrfToken = ''\n\nexport type FetchError = {\n  status: number\n  message: string\n  errors: string[]\n  data?: any\n}\n\ntype FetchReturn<T> = [boolean, T | null, FetchError | null]\n\naxios.defaults.withCredentials = true\n\nfunction useFetch<T>(\n  path: string,\n  method: FetchMethod,\n  body?: any\n): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [response, setResponse] = useState<T | null>(null)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body)\n        setResponse(data)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    sendRequest()\n  }, [path, method, body])\n\n  return [loading, response, error]\n}\n\nexport const fetchResource = async (\n  path: string,\n  method: FetchMethod,\n  body?: any\n) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`)\n  }\n\n  const url = `${API_URL}${path}`\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  }\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken\n  }\n\n  try {\n    const response = await axios(options)\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER]\n    }\n\n    return await response.data\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response)\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n        data: error.response.data\n      }\n      throw returnError\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error)\n    const returnError: FetchError = {\n      status: 500,\n      message: error.message,\n      errors: [error.message],\n    }\n    throw returnError\n  }\n}\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred'\n  }\n\n  return parseErrorList(error).join('. ')\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred'\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError]\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error\n  )\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i]\n    if (Array.isArray(error)) return error\n    if (typeof error === 'string') return [error]\n  }\n\n  return [defaultError]\n}\n\nexport default useFetch\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip, Button, Modal, Form } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\nimport { fetchResource } from 'util/fetch'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { API_URL } from '../../../constants'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [validated, setValidated] = useState<boolean>(false)\n\n  const [password, setPassword] = useState<string>('')\n  const [repeatPassword, setRepeatPassword] = useState<string>('')\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    setValidated(true)\n\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      return\n    }\n\n    const body = {\n      password,\n      repeatPassword,\n    }\n\n    fetchResource('/password', 'POST', body)\n      .then(() => {\n        dispatch({\n          type: 'user_password',\n          payload: true,\n        })\n\n        setShowModal(false)\n        setValidated(false)\n        setPassword('')\n        setRepeatPassword('')\n      })\n      .catch((reason) => {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      })\n  }\n\n  let buttonClass = styles.unlocked\n  let buttonIcon: IconProp = 'lock-open'\n  let tooltipText = 'Set a password to keep your username'\n  let title = 'Claim Username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    buttonClass = styles.locked\n    buttonIcon = 'lock'\n    tooltipText = 'Change your password'\n    title = 'Update Password'\n  }\n\n  return (\n    <span className={styles.passwordLock}>\n      <OverlayTrigger\n        placement=\"bottom\"\n        delay={500}\n        overlay={<Tooltip id=\"passwordLock\">{tooltipText}</Tooltip>}\n      >\n        <Button variant=\"link\" className={buttonClass} style={ { padding: 0 } } onClick={handleShow}>\n          <FontAwesomeIcon icon={buttonIcon} />\n        </Button>\n      </OverlayTrigger>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              { title }\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Password...\"\n                autoFocus\n                required\n                minLength={6}\n                onChange={(event) => {\n                  setPassword(event.currentTarget.value)\n                }}\n                value={password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The password is too short. Minimum length is 6 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Repeat Password...\"\n                required\n                minLength={6}\n                pattern={password}\n                onChange={(event) => {\n                  setRepeatPassword(event.currentTarget.value)\n                }}\n                value={repeatPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The passwords don't match!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <a href={ `${API_URL}/logout` }>\n              Logout\n            </a>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button type=\"submit\" variant=\"primary\">\n              Set password\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </span>\n  )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport classNames from 'classnames'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { useGlobalState } from 'store/state'\nimport Loader from 'components/Loader'\n\nimport styles from './index.module.scss'\nimport Messages from './Messages'\nimport TextBox from './TextBox'\nimport OnlineUsers from './OnlineUsers'\nimport PasswordLock from './PasswordLock'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useImmer } from 'use-immer'\n\ntype State = {\n  isTextBoxFocused: boolean,\n  scrollingWhileFocused: boolean,\n}\n\nexport default () => {\n  const { state } = useGlobalState()\n  const [ localState, setState ] = useImmer<State>({\n    isTextBoxFocused: false,\n    scrollingWhileFocused: false,\n  })\n\n  let chatArea = <Loader />\n\n  // On window scroll\n  const setHeaderPosition = useCallback(() => {\n    setState(draft => {\n      if (draft.isTextBoxFocused) {\n        draft.scrollingWhileFocused = true\n      }\n    })\n    // eslint-disable-next-line\n  }, [setState]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', setHeaderPosition, true)\n\n    return () => {\n      window.removeEventListener('scroll', setHeaderPosition)\n    }\n  }, [setHeaderPosition])\n\n  const handleTextBoxFocus = () => {\n    setState(draft => {\n      draft.isTextBoxFocused = true\n    })\n    setHeaderPosition()\n  }\n\n  const handleTextBoxBlur = () => {\n    setState(draft => {\n      draft.isTextBoxFocused = false\n      draft.scrollingWhileFocused = false\n    })\n  }\n\n  const headerStyle = {\n    position: 'static',\n    top: 0,\n  } as React.CSSProperties\n\n  if (localState.scrollingWhileFocused) {\n    headerStyle.position = 'absolute';\n    headerStyle.top = window.pageYOffset + 'px'\n  }\n\n  if (state.socket.connected) {\n    chatArea = (\n      <div className={classNames(styles.chat, { [styles.scrollingChat]: localState.scrollingWhileFocused })}>\n        <div className={classNames(styles.header)} style={headerStyle}>\n          <Container>\n            <Row>\n              <Col>\n                <PasswordLock />\n                {state.auth.user?.isAdmin && (\n                  <Link\n                    to=\"/admin\"\n                    title=\"Monitoring\"\n                    style={{ marginLeft: '1em' }}\n                  >\n                    <FontAwesomeIcon icon=\"shield-alt\" />\n                  </Link>\n                )}\n              </Col>\n              <Col>\n                <OnlineUsers />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n\n        <Messages />\n        <TextBox onFocus={handleTextBoxFocus} onBlur={handleTextBoxBlur} />\n      </div>\n    )\n  }\n\n  return chatArea\n}\n","import React from 'react'\n\nimport Loader from 'components/Loader'\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (!state.auth.loggedIn) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (state.auth.loggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\n\nimport { useGlobalState } from 'store/state'\nimport styles from './index.module.scss'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  if (!state.offline && !state.error) {\n    return null\n  }\n\n  let error = state.error\n  if (Array.isArray(error)) {\n    error = error.join('. ')\n  }\n  if (typeof error !== 'string') {\n    error = String(error)\n  }\n\n  if (state.error) {\n    return <div className={styles.offline}>Error: {error}</div>\n  }\n\n  return (\n    <div className={styles.offline}>\n      You seem to be offline! Please try again later\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\nimport HCaptcha from \"react-hcaptcha\"\nimport ReCaptcha from \"react-google-recaptcha\"\n\nimport { useGlobalState } from 'store/state'\nimport { fetchResource } from 'util/fetch'\nimport Logo from 'components/Logo'\n\nimport styles from './index.module.scss'\nimport { AuthData } from 'store/types'\nimport { CAPTCHA_KEY, CAPTCHA_PROVIDER } from '../../constants'\n\ntype State = {\n  username: string\n  password: string\n  verified: boolean\n  hasPassword: boolean\n  loading: boolean\n}\n\nexport default () => {\n  const { dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    verified: false,\n    hasPassword: false,\n    loading: false,\n  })\n\n  const captchaRef = useRef<any>(null)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n    if (localState.verified) {\n      oncaptchaChange('verified')\n      return\n    }\n    captchaRef.current.execute()\n  };\n\n  const oncaptchaChange = (token: string | null) => {\n    if (!token || localState.loading) {\n      return\n    }\n\n    setState((draft) => {\n      draft.loading = true\n    })\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n      captchaToken: token,\n    }\n    fetchResource('/auth', 'POST', body)\n      .then((data: AuthData) => {\n        if (captchaRef.current.resetCaptcha) {\n          captchaRef.current.resetCaptcha()\n        }\n\n        if (!data || !data.user.user_id) {\n          console.warn('Invalid user object')\n          dispatch({\n            type: 'login',\n            payload: null,\n          })\n          return\n        }\n\n        dispatch({\n          type: 'login',\n          payload: data,\n        })\n      })\n      .catch((reason) => {\n        if (reason.status !== 400) {\n          // username requires password\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        if (captchaRef.current.resetCaptcha) {\n          captchaRef.current.resetCaptcha()\n        }\n\n        setState((draft) => {\n          draft.loading = false\n          draft.verified = (reason.data && reason.data.verified) || false\n          if (reason.status === 400) {\n            draft.hasPassword = true\n          }\n        })\n      }\n    )\n  }\n\n  let theme: 'light' | 'dark' = 'light'\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    theme = 'dark'\n  }\n\n  return (\n    <Container className={classNames(styles.login, 'mt-4')}>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={localState.loading}\n            autoFocus\n            minLength={ 1 }\n            maxLength={ 20 }\n            onChange={(e) => {\n              const value = e.currentTarget.value\n              setState((draft) => {\n                draft.username = value\n              })\n            }}\n            value={localState.username}\n          />\n          {localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              disabled={localState.loading}\n              autoFocus\n              onChange={(e) => {\n                const value = e.currentTarget.value\n                setState((draft) => {\n                  draft.password = value\n                })\n              }}\n              value={localState.password}\n            />\n          )}\n          { CAPTCHA_PROVIDER === 'recaptcha' && (\n            <ReCaptcha\n              ref={ captchaRef }\n              size='invisible'\n              theme={ theme }\n              sitekey={ CAPTCHA_KEY }\n              onChange={ oncaptchaChange }\n            />\n          )}\n          { CAPTCHA_PROVIDER === 'hcaptcha' && (\n            <HCaptcha\n              ref={ captchaRef }\n              size='invisible'\n              theme={ theme }\n              sitekey={ CAPTCHA_KEY }\n              onVerify={ oncaptchaChange }\n            />\n          )}\n          <button type=\"submit\" style={{ visibility: 'hidden' }}>\n            Login\n          </button>\n        </Form.Group>\n      </Form>\n    </Container>\n  )\n}\n","import { Action, AuthData } from 'store/types'\n\nimport { fetchResource } from './fetch'\n\nconst OFFLINE_RETRY_DELAY = 2000\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET')\n    .then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object')\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    })\n    .catch((reason) => {\n      if (reason.message === 'Network Error') {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n\n        // try again\n        setTimeout(() => {\n          checkAuth(dispatch)\n        }, OFFLINE_RETRY_DELAY)\n      } else {\n        if (reason.status !== 401) {\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      }\n    })\n}\n\nexport default checkAuth\n","import React, { useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport Chat from 'sections/Chat'\nimport AuthenticatedRoute from 'util/AuthenticatedRoute'\nimport UnauthenticatedRoute from 'util/UnauthenticatedRoute'\nimport OfflineCheck from 'components/OfflineCheck'\nimport Login from 'sections/Login'\nimport useGlobalState from 'store/state'\nimport checkAuth from 'util/checkAuth'\nimport Admin from 'sections/Admin'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked) {\n      checkAuth(dispatch)\n    }\n  }, [state.auth.checked, dispatch])\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path=\"/login\" component={Login} />\n        <AuthenticatedRoute path=\"/admin\" component={Admin} />\n        <AuthenticatedRoute path=\"/\" component={Chat} />\n      </Switch>\n    </>\n  )\n}\n","import React, { useEffect, useContext, useCallback } from 'react'\nimport Helmet from 'react-helmet'\nimport useSound from 'use-sound'\nimport { useImmer } from 'use-immer'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport useGlobalState from 'store/state'\nimport newMessageSound from 'assets/sounds/newMessage.mp3'\nimport { dateDiff } from 'lib/dateDiff'\n\nconst TIME_BETWEEN_SOUND = 5 * 1000 // ms\nconst NOTIFICATION_VOLUME = 0.5 // 0-1\n\ntype State = {\n  lastSound: Date | null,\n  windowFocused: boolean,\n  titleNotification: boolean,\n}\n\nexport default () => {\n  const { state } = useGlobalState();\n  const [ localState, setState ] = useImmer<State>({\n    lastSound: new Date(),\n    windowFocused: true,\n    titleNotification: false,\n  })\n\n  const { socket } = useContext(SocketContext)\n  const [ play ] = useSound(newMessageSound, {\n    interrupt: true,\n    volume: NOTIFICATION_VOLUME,\n  });\n\n  const onMessage = useCallback((user_id: string) => (msg: Message) => {\n    if (msg.attributes.draft || user_id === msg.user.user_id) {\n      return\n    }\n\n    setState(draft => {\n      if (!draft.windowFocused) {\n        draft.titleNotification = true;\n\n        if (!draft.lastSound || dateDiff(draft.lastSound) > TIME_BETWEEN_SOUND) {\n          draft.lastSound = new Date()\n          play({})\n        }\n      }\n    })\n  }, [setState, play])\n\n  const onFocus = useCallback(() => {\n    setState(draft => {\n      draft.titleNotification = false\n      draft.windowFocused = true\n    })\n  }, [setState])\n\n  const onBlur = useCallback(() => {\n    setState(draft => {\n      draft.windowFocused = false\n    })\n  }, [setState])\n\n  const user_id = state.auth.user ? state.auth.user.user_id : null\n\n  useEffect(() => {\n    if (!socket || !user_id) {\n      return\n    }\n    socket.on('message', onMessage(user_id))\n  }, [socket, onMessage, user_id])\n\n  useEffect(() => {\n    window.addEventListener('focus', onFocus)\n    window.addEventListener('blur', onBlur)\n\n    return () => {\n      window.removeEventListener('focus', onFocus)\n      window.removeEventListener('blur', onBlur)\n    }\n  }, [onFocus, onBlur])\n\n  return (\n    <Helmet>\n      <title>{localState.titleNotification ? '•• dotdot' : 'dotdot'}</title>\n    </Helmet>\n  )\n}\n","/**\n * Get the difference between two date objects in ms\n */\nexport const dateDiff = (t1: Date, t2: Date = new Date()) => {\n  return t2.getTime() - t1.getTime();\n};","import { library } from '@fortawesome/fontawesome-svg-core'\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport {\n  faLock,\n  faLockOpen,\n  faCircle,\n  faDotCircle,\n  faCircleNotch,\n  faCode,\n  faCog,\n  faArrowAltCircleDown,\n  faMeh,\n  faAngry,\n  faDizzy,\n  faFlushed,\n  faFrown,\n  faFrownOpen,\n  faGrimace,\n  faGrin,\n  faGrinAlt,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faGrinHearts,\n  faGrinSquint,\n  faGrinSquintTears,\n  faGrinStars,\n  faGrinTears,\n  faGrinTongue,\n  faGrinTongueSquint,\n  faGrinTongueWink,\n  faGrinWink,\n  faKiss,\n  faKissBeam,\n  faKissWinkHeart,\n  faLaugh,\n  faLaughBeam,\n  faLaughSquint,\n  faLaughWink,\n  faMehBlank,\n  faMehRollingEyes,\n  faSadCry,\n  faSadTear,\n  faSmile,\n  faSmileBeam,\n  faSmileWink,\n  faSurprise,\n  faTired,\n  faShieldAlt,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faDotCircle as farDotCircle,\n  faMeh as farMeh,\n  faAngry as farAngry,\n  faDizzy as farDizzy,\n  faFlushed as farFlushed,\n  faFrown as farFrown,\n  faFrownOpen as farFrownOpen,\n  faGrimace as farGrimace,\n  faGrin as farGrin,\n  faGrinAlt as farGrinAlt,\n  faGrinBeam as farGrinBeam,\n  faGrinBeamSweat as farGrinBeamSweat,\n  faGrinHearts as farGrinHearts,\n  faGrinSquint as farGrinSquint,\n  faGrinSquintTears as farGrinSquintTears,\n  faGrinStars as farGrinStars,\n  faGrinTears as farGrinTears,\n  faGrinTongue as farGrinTongue,\n  faGrinTongueSquint as farGrinTongueSquint,\n  faGrinTongueWink as farGrinTongueWink,\n  faGrinWink as farGrinWink,\n  faKiss as farKiss,\n  faKissBeam as farKissBeam,\n  faKissWinkHeart as farKissWinkHeart,\n  faLaugh as farLaugh,\n  faLaughBeam as farLaughBeam,\n  faLaughSquint as farLaughSquint,\n  faLaughWink as farLaughWink,\n  faMehBlank as farMehBlank,\n  faMehRollingEyes as farMehRollingEyes,\n  faSadCry as farSadCry,\n  faSadTear as farSadTear,\n  faSmile as farSmile,\n  faSmileBeam as farSmileBeam,\n  faSmileWink as farSmileWink,\n  faSurprise as farSurprise,\n  faTired as farTired,\n} from '@fortawesome/free-regular-svg-icons'\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\nlibrary.add(\n  faLock,\n  faLockOpen,\n  faCircle,\n  faDotCircle,\n  farDotCircle,\n  faCircleNotch,\n  faCode,\n  faCog,\n  faArrowAltCircleDown,\n  faMeh,\n  farMeh,\n  faAngry,\n  faDizzy,\n  faFlushed,\n  faFrown,\n  faFrownOpen,\n  faGrimace,\n  faGrin,\n  faGrinAlt,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faGrinHearts,\n  faGrinSquint,\n  faGrinSquintTears,\n  faGrinStars,\n  faGrinTears,\n  faGrinTongue,\n  faGrinTongueSquint,\n  faGrinTongueWink,\n  faGrinWink,\n  faKiss,\n  faKissBeam,\n  faKissWinkHeart,\n  faLaugh,\n  faLaughBeam,\n  faLaughSquint,\n  faLaughWink,\n  faMehBlank,\n  faMehRollingEyes,\n  faSadCry,\n  faSadTear,\n  faSmile,\n  faSmileBeam,\n  faSmileWink,\n  faSurprise,\n  faTired,\n  farAngry,\n  farDizzy,\n  farFlushed,\n  farFrown,\n  farFrownOpen,\n  farGrimace,\n  farGrin,\n  farGrinAlt,\n  farGrinBeam,\n  farGrinBeamSweat,\n  farGrinHearts,\n  farGrinSquint,\n  farGrinSquintTears,\n  farGrinStars,\n  farGrinTears,\n  farGrinTongue,\n  farGrinTongueSquint,\n  farGrinTongueWink,\n  farGrinWink,\n  farKiss,\n  farKissBeam,\n  farKissWinkHeart,\n  farLaugh,\n  farLaughBeam,\n  farLaughSquint,\n  farLaughWink,\n  farMehBlank,\n  farMehRollingEyes,\n  farSadCry,\n  farSadTear,\n  farSmile,\n  farSmileBeam,\n  farSmileWink,\n  farSurprise,\n  farTired,\n  faShieldAlt,\n  faQuestionCircle\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { StateProvider } from 'store/state'\nimport SocketProvider from 'util/socketProvider'\n\nimport Router from './router'\nimport Title from './components/Title'\n\nimport './lib/icons'\nimport 'assets/scss/index.scss'\n\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\",\"messageScroll\":\"Messages_messageScroll__CCnSp\",\"unseen\":\"Messages_unseen__gVw6f\",\"unseenContainer\":\"Messages_unseenContainer__3haBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBox\":\"TextBox_textBox__McZeC\",\"textIcon\":\"TextBox_textIcon__mlsnG\",\"private\":\"TextBox_private__1kesE\",\"command\":\"TextBox_command__1uXWO\"};"],"sourceRoot":""}