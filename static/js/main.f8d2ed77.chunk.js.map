{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Login/index.module.scss","constants.ts","store/reducer.ts","store/state.tsx","util/socketProvider.tsx","components/Logo/index.tsx","components/Loader/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/ScrollBox/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/TextBox/index.tsx","sections/Chat/OnlineUsers/index.tsx","util/fetch.ts","sections/Chat/PasswordLock/index.tsx","sections/Chat/index.tsx","sections/loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/icons.ts","index.tsx","sections/Chat/Messages/Message/index.module.scss","components/Logo/index.module.scss","sections/Chat/Messages/index.module.scss","sections/Chat/TextBox/index.module.scss","sections/Chat/PasswordLock/index.module.scss","components/OfflineCheck/index.module.scss"],"names":["module","exports","VALID_USERNAME","produce","draft","action","console","log","type","offline","auth","checked","payload","loggedIn","user","error","socket","connected","onlineUsers","hasPassword","message","existingDraft","messages","findIndex","eachMessage","attributes","user_id","splice","trim","length","lastMessage","private","timestamp","Date","push","shift","map","initialState","StateContext","React","createContext","state","dispatch","warn","StateProvider","props","useReducer","reducer","value","Provider","children","useGlobalState","useContext","SocketContext","useState","setSocket","useEffect","newSocket","socketio","process","reconnection","timeout","on","users","provider","style","infinite","animationIterationCount","animationDirection","className","styles","logo","blob","svgFilter","xmlns","version","id","in","stdDeviation","result","mode","values","in2","Logo","userData","find","userColor","color","isSystem","isUserOnline","isActive","icon","classNames","system","key","toDateString","background","OverlayTrigger","placement","overlay","Tooltip","name","spin","toLocaleTimeString","hour","minute","body","boxRef","onScrollChanged","threshold","scrollTop","setScrollTop","height","setHeight","scrollDebounce","useRef","onScrollDebounced","useCallback","isAtBottom","clearTimeout","current","setTimeout","scrollToBottom","scrollHeight","offsetHeight","updateScrollState","shouldScroll","customThreshold","Math","abs","window","addEventListener","removeEventListener","newHeight","useImmer","scrollAtBottom","unseenMessages","localState","setLocalState","chatAreaRef","unseen","Container","unseenContainer","Button","variant","size","onClick","messageScroll","ref","ScrollBox","Message","to","isCommand","setState","draftTimer","sendMessage","emit","Form","noValidate","onSubmit","e","preventDefault","textBox","command","Group","controlId","Control","as","placeholder","autoFocus","onChange","currentTarget","isPM","words","split","test","substr","isCurrentUser","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","a","Error","url","options","data","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","i","Array","isArray","parseErrors","useFetch","showModal","setShowModal","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","handleClose","buttonClass","unlocked","buttonIcon","tooltipText","title","locked","passwordLock","delay","padding","Modal","show","onHide","event","stopPropagation","checkValidity","then","catch","reason","Header","closeButton","Title","Body","required","minLength","Feedback","pattern","Footer","chatArea","Loader","chat","Row","Col","PasswordLock","OnlineUsers","Messages","TextBox","exact","component","String","username","loading","captchaRef","theme","matchMedia","matches","login","execute","disabled","maxLength","sitekey","onVerify","token","captchaToken","resetCaptcha","visibility","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Chat","windowFocused","setWindowFocused","titleNotification","setTitleNotification","onMessage","msg","onfocus","onblur","library","add","faLock","faLockOpen","faCircle","faDotCircle","farDotCircle","faCircleNotch","faCode","faCog","faArrowAltCircleDown","faMeh","farMeh","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8d2ed77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__LEZtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im'\nexport const VALID_USERNAME = /^[A-Za-z0-9]+(?:[ _][A-Za-z0-9]+)*_?$/i\nexport const CAPTCHA_KEY = process.env.REACT_APP_CAPTCHA_KEY || ''\nexport const MAX_MESSAGE_HISTORY = 100\n","import produce from 'immer'\n\nimport { AppState, Action, Message } from './types'\nimport { MAX_MESSAGE_HISTORY } from '../constants'\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n\n  console.log('REDUCER', action)\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true\n      }\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false\n        draft.auth.user = null\n        break\n      }\n\n      draft.offline = false\n\n      draft.auth.loggedIn = true\n      draft.auth.user = action.payload.user\n      break\n    case 'offline':\n      draft.offline = true\n      draft.error = null\n      draft.socket.connected = false\n      break\n    case 'error':\n      draft.error = action.payload\n      break\n    case 'socketConnected':\n      draft.socket.connected = action.payload\n      draft.offline = !action.payload\n      draft.error = null\n      break\n    case 'onlineUsers':\n      draft.onlineUsers = action.payload\n      break\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true\n      }\n      break\n    case 'message':\n      const message: Message = action.payload\n      // delete draft from this user\n      const existingDraft = draft.messages.findIndex(\n        (eachMessage) =>\n          eachMessage.attributes.draft &&\n          eachMessage.user.user_id === message.user.user_id\n      )\n      if (existingDraft > -1) {\n        draft.messages.splice(existingDraft, 1)\n      }\n\n      if (message.message.trim().length < 1) {\n        return;\n      }\n\n      if (!message.attributes.draft) {\n        const lastMessage = draft.messages[draft.messages.length - 1]\n\n        if (lastMessage && lastMessage.user.user_id === message.user.user_id && lastMessage.attributes.private === message.attributes.private) {\n          // last message was by this same user (and it's the same kind of message)\n          lastMessage.message += `\\n${message.message}`\n          lastMessage.timestamp = new Date(message.timestamp)\n          return\n        }\n      }\n\n      draft.messages.push({\n        timestamp: new Date(message.timestamp),\n        attributes: message.attributes,\n        message: message.message,\n        user: message.user,\n      })\n\n      if (draft.messages.length > MAX_MESSAGE_HISTORY) {\n        draft.messages.shift()\n      }\n      break;\n    case 'history':\n      draft.messages = action.payload.map((eachMessage: Message) => {\n        eachMessage.timestamp = new Date(eachMessage.timestamp)\n        return eachMessage\n      });\n      break;\n  }\n})\n","import React from 'react'\n\nimport reducer from './reducer'\nimport { AppState, AppContext, Action } from './types'\n\nconst initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n  },\n  socket: {\n    connected: false,\n  },\n  onlineUsers: [],\n  messages: [],\n  offline: false,\n  error: null,\n}\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider')\n  return initialState\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n})\n\ntype Props = {\n  state?: AppState,\n  children: any\n}\n\nexport const StateProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(reducer, props.state || initialState)\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch }\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  )\n}\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext)\nexport default useGlobalState\n","import React, { createContext, useEffect, useState } from 'react'\nimport socketio from 'socket.io-client'\n\nimport { useGlobalState } from 'store/state'\nimport { API_URL } from '../constants'\nimport { Message } from 'store/types'\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null\n}\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n})\n\ntype Props = {\n  children: any\n}\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null)\n\n  useEffect(() => {\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    })\n\n    if (!state.auth.loggedIn) {\n      return\n    }\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n    })\n\n    newSocket.on('connect', () => {\n      dispatch({\n        type: 'socketConnected',\n        payload: true,\n      })\n    })\n\n    newSocket.on('users', (payload: any) => {\n      dispatch({\n        type: 'onlineUsers',\n        payload: payload.users,\n      })\n    })\n\n    newSocket.on('message', (payload: Message) => {\n      dispatch({\n        type: 'message',\n        payload,\n      })\n    })\n    newSocket.on('history', (payload: Message[]) => {\n      dispatch({\n        type: 'history',\n        payload,\n      })\n    })\n\n    newSocket.on('connect_error', (error: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('connect_timeout', (timeout: string) => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: 'socketConnected',\n        payload: false,\n      })\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        })\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n      }\n    })\n\n    setSocket(newSocket)\n  }, [dispatch, state.auth.loggedIn])\n\n  let provider = {\n    socket,\n  }\n\n  return (\n    <SocketContext.Provider value={provider}>\n      {props.children}\n    </SocketContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  infinite?: boolean\n}\n\nexport default (props: Props) => {\n  const style: any = {}\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite'\n    style.animationDirection = 'alternate'\n  }\n  return (\n    <>\n      <div className={styles.logo}>\n        <div className={styles.blob} style={style}></div>\n        <div className={styles.blob} style={style}></div>\n      </div>\n\n      <svg\n        className={styles.svgFilter}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n      >\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport Logo from 'components/Logo'\n\ntype Props = {\n  text?: string | null\n}\n\nexport default (props: Props) => {\n  return (\n    <>\n      <Logo infinite />\n    </>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Message } from 'store/types'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\ntype Props = {\n  message: Message\n}\n\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n\n  // User data comes from online users if available\n  const userData = state.onlineUsers.find(\n    user => user.user_id === props.message.user.user_id\n  ) || props.message.user\n\n  const userColor = `#${userData.color}`\n  const isSystem = userData.user_id === 'dotdot'\n  const isUserOnline = isSystem || (state.onlineUsers.findIndex(user => user.user_id === userData.user_id) > -1 && userData.isActive)\n\n  let icon: IconProp = 'circle'\n  if (userData.user_id === state.auth.user?.user_id) {\n    icon = ['far', 'dot-circle']\n  } else if (props.message.attributes.draft) {\n    icon = 'circle-notch'\n  }\n  if (props.message.attributes.private) {\n    icon = 'lock'\n  }\n  if (isSystem) {\n    icon = 'cog'\n  }\n  if (!isUserOnline) {\n    icon = 'meh'\n  }\n\n  return (\n    <div\n      className={classNames(styles.message, {\n        [styles.system]: isSystem,\n        [styles.offline]: !isUserOnline,\n        [styles.draft]: props.message.attributes.draft,\n        [styles.private]: props.message.attributes.private,\n      })}\n      key={props.message.timestamp.toDateString()}\n    >\n      <div className={classNames(styles.icon, { [styles.private]: props.message.attributes.private })} style={{ color: userColor, background: userColor }}>\n        { props.message.attributes.private && (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={(\n              <Tooltip id={`user-${userData.user_id}`}>\n                Private message from <b>@{userData.name}</b><br />\n                Only you can see this.\n              </Tooltip>\n            )}\n          >\n            <FontAwesomeIcon icon={ icon } />\n          </OverlayTrigger>\n        ) }\n        { !props.message.attributes.private && (\n          <FontAwesomeIcon icon={ icon } spin={ props.message.attributes.draft } />\n        ) }\n      </div>\n      <div className={classNames(styles.timestamp)}>\n        {props.message.attributes.draft ? 'now' : props.message.timestamp.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' })}\n      </div>\n      <span\n        className={classNames(styles.user)}\n        style={ { color: userColor } }\n      >\n        {userData.name}\n      </span>\n      <div className={classNames(styles.body)}>{props.message.message}</div>\n    </div>\n  )\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\n\nconst SCROLL_THRESHOLD = 100\nconst SCROLL_DEBOUNCE_DELAY = 150\n\ntype Props = {\n  onScrollChanged?: (isAtBottom: boolean) => void,\n  boxRef: React.RefObject<HTMLElement | null>,\n  threshold?: number,\n  children?: any,\n}\n\nexport default ({ boxRef, onScrollChanged, threshold, children }: Props) => {\n  const [ scrollTop, setScrollTop ] = useState<number>(-1);\n  const [ height, setHeight ] = useState<number>(0);\n  const scrollDebounce = useRef<any>(null)\n\n  const onScrollDebounced = useCallback((isAtBottom: boolean) => {\n    clearTimeout(scrollDebounce.current)\n\n    if (onScrollChanged) {\n      scrollDebounce.current = setTimeout(() => {\n        onScrollChanged(isAtBottom)\n      }, SCROLL_DEBOUNCE_DELAY)\n    }\n  }, [onScrollChanged])\n\n  const scrollToBottom = useCallback(() => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    const scrollHeight = boxRef.current.scrollHeight - boxRef.current.offsetHeight\n    boxRef.current.scrollTop = scrollHeight\n\n    setScrollTop(boxRef.current.scrollTop)\n    onScrollDebounced(true)\n  }, [boxRef, onScrollDebounced, setScrollTop])\n\n  const updateScrollState = useCallback((shouldScroll: boolean) => () => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    if (scrollTop > 0) {\n      const customThreshold = threshold || SCROLL_THRESHOLD\n      if (scrollTop > 0 && Math.abs(boxRef.current.scrollTop - scrollTop) > customThreshold) {\n         // we are not at the bottom of the page, so we won't do anything\n        onScrollDebounced(false)\n        return\n      } else {\n        onScrollDebounced(true)\n      }\n    }\n\n    if (shouldScroll) {\n      scrollToBottom()\n    }\n  }, [boxRef, onScrollDebounced, threshold, scrollToBottom, scrollTop])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", scrollToBottom, true);\n\n    if (boxRef && boxRef.current) {\n      boxRef.current.addEventListener('scroll', updateScrollState(false), true)\n    }\n\n    // cleanup\n    return () => {\n      window.removeEventListener(\"resize\", scrollToBottom, true);\n    }\n  }, [boxRef, scrollToBottom, updateScrollState])\n\n  useEffect(() => {\n    // when the children changes, recalculate\n    if (!boxRef.current) {\n      return;\n    }\n    const newHeight = boxRef.current.scrollHeight;\n    if (newHeight !== height) {\n      setHeight(newHeight)\n      updateScrollState(true)()\n    }\n  }, [boxRef, height, updateScrollState, children])\n\n  return (\n    <>\n      { children }\n    </>\n  )\n}\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Container, Button } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport MessageComponent from './Message'\n\nimport styles from './index.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ScrollBox from './ScrollBox'\nimport useGlobalState from 'store/state'\n\ntype State = {\n  scrollAtBottom: boolean,\n  unseenMessages: boolean, // are there new messages below the scroll point?\n}\n\nexport default () => {\n  const { state } = useGlobalState()\n  const [localState, setLocalState] = useImmer<State>({\n    scrollAtBottom: true,\n    unseenMessages: false,\n  })\n\n  const chatAreaRef = useRef<HTMLDivElement>(null)\n\n  const onScrollChanged = useCallback((isAtBottom: boolean) => {\n    setLocalState(draft => {\n      draft.scrollAtBottom = isAtBottom\n      if (isAtBottom) {\n        draft.unseenMessages = false\n      }\n    })\n  }, [setLocalState])\n\n  const scrollToBottom = useCallback(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return\n    }\n    const scrollHeight = chatAreaRef.current.scrollHeight - chatAreaRef.current.offsetHeight\n    chatAreaRef.current.scrollTop = scrollHeight\n\n    setLocalState(draft => {\n      draft.unseenMessages = false\n    })\n  }, [setLocalState])\n\n  useEffect(() => {\n    setLocalState(draft => {\n      draft.unseenMessages = !draft.scrollAtBottom\n    })\n  }, [state.messages, setLocalState])\n\n  // TODO set this on new messages: draft.unseenMessages = !draft.scrollAtBottom\n\n  return (\n    <div className={ styles.messages }>\n      { localState.unseenMessages && (\n        <div className={ classNames(styles.unseen) }>\n          <Container className={ styles.unseenContainer }>\n            <Button variant=\"outline-secondary\" size=\"sm\" onClick={ scrollToBottom }>\n              <FontAwesomeIcon icon='arrow-alt-circle-down' /> New messages\n            </Button>\n          </Container>\n        </div>\n      ) }\n        <div className={classNames(styles.messageScroll)} ref={chatAreaRef}>\n          <div className='container'>\n            <ScrollBox\n              boxRef={ chatAreaRef }\n              onScrollChanged={ onScrollChanged }\n            >\n              {state.messages.map((eachMessage) => (\n                <MessageComponent key={eachMessage.timestamp.toDateString()} message={eachMessage} />\n              ))}\n            </ScrollBox>\n          </div>\n        </div>\n    </div>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport { SocketContext } from 'util/socketProvider'\nimport styles from './index.module.scss'\nimport { VALID_USERNAME } from '../../../constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\ntype State = {\n  message: string,\n  private: boolean,\n  to: string | null,\n  isCommand: boolean,\n}\n\nexport default () => {\n  const [state, setState] = useImmer<State>({\n    message: '',\n    private: false,\n    to: null,\n    isCommand: false,\n  })\n  const draftTimer = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    if (state.message.length < 1 || state.message.trim().length < 1) {\n      return\n    }\n\n    sendMessage(state.message);\n\n    setState((draft) => {\n      draft.message = ''\n      draft.private = false\n      draft.isCommand = false\n    })\n  }\n\n  const sendMessage = (message: string, draft: boolean = false) => {\n    if (!draft && (message.length < 1 || message.trim().length < 1)) {\n      return\n    }\n    let type = 'message'\n    if (state.isCommand) {\n      type = 'command'\n    }\n    socket?.emit(type, {\n      message,\n      attributes: {\n        draft,\n        private: state.private,\n        to: state.to,\n      },\n    })\n  }\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    clearTimeout(draftTimer.current)\n\n    const value: string = e.currentTarget.value\n\n    // special messages\n    let isCommand = false;\n    let isPM = false;\n    let to: string | null = null;\n\n    if (value[0] === '/') {\n      isCommand = true;\n    } else {\n      const words = value.split(' ')\n      if (words.length > 0 && words[0][0] === '@' && VALID_USERNAME.test(words[0].substr(1))) {\n        isPM = true;\n        to = words[0].substr(1);\n      }\n    }\n\n    setState((draft) => {\n      draft.message = value\n      draft.private = isPM\n      draft.to = to\n      draft.isCommand = isCommand\n    })\n\n    if (isPM || isCommand) {\n      return;\n    }\n\n    draftTimer.current = setTimeout(() => {\n      sendMessage(value, true)\n    }, 100)\n  }\n\n  let icon: IconProp = 'lock'\n  if (state.isCommand) {\n    icon = 'code'\n  }\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={ classNames(styles.textBox, 'container', { [styles.private]: state.private, [styles.command]: state.isCommand }) }>\n      <Form.Group controlId=\"chatForm.message\">\n        <Form.Control\n          as=\"input\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          autoFocus\n          onChange={onType}\n          value={state.message}\n        />\n        <span>\n          <FontAwesomeIcon icon={ icon } />\n        </span>\n      </Form.Group>\n    </Form>\n  )\n}\n","import React from 'react'\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './index.module.scss'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport useGlobalState from 'store/state'\n\nexport default () => {\n  const { state } = useGlobalState();\n\n  return (\n    <div className={styles.onlineUsers}>\n      {\n        state.onlineUsers.map((user) => {\n          let icon: IconProp = 'circle'\n          const isCurrentUser = user.user_id === state.auth.user?.user_id\n          if (isCurrentUser) {\n            icon = ['far', 'dot-circle']\n          }\n          if (!user.isActive) {\n            icon = isCurrentUser ? ['far', 'meh'] : 'meh'\n          }\n          return (\n            <OverlayTrigger\n              key={user.user_id}\n              placement=\"bottom\"\n              overlay={<Tooltip id={`user-${user.user_id}`}>@{user.name}</Tooltip>}\n            >\n              <span style={{ color: `#${user.color}` }}>\n                <FontAwesomeIcon icon={ icon } />\n              </span>\n            </OverlayTrigger>\n          )\n        })\n      }\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { API_URL } from '../constants'\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\nexport const CSRF_HEADER = 'x-csrf-token'\nlet csrfToken = ''\n\nexport type FetchError = {\n  status: number\n  message: string\n  errors: string[]\n}\n\ntype FetchReturn<T> = [boolean, T | null, FetchError | null]\n\naxios.defaults.withCredentials = true\n\nfunction useFetch<T>(\n  path: string,\n  method: FetchMethod,\n  body?: any\n): FetchReturn<T> {\n  const [error, setError] = useState<FetchError | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [response, setResponse] = useState<T | null>(null)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body)\n        setResponse(data)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    sendRequest()\n  }, [path, method, body])\n\n  return [loading, response, error]\n}\n\nexport const fetchResource = async (\n  path: string,\n  method: FetchMethod,\n  body?: any\n) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`)\n  }\n\n  const url = `${API_URL}${path}`\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  }\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken\n  }\n\n  try {\n    const response = await axios(options)\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER]\n    }\n\n    return await response.data\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response)\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n      }\n      throw returnError\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error)\n    const returnError: FetchError = {\n      status: 500,\n      message: error.message,\n      errors: [error.message],\n    }\n    throw returnError\n  }\n}\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred'\n  }\n\n  return parseErrorList(error).join('. ')\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred'\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError]\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error\n  )\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i]\n    if (Array.isArray(error)) return error\n    if (typeof error === 'string') return [error]\n  }\n\n  return [defaultError]\n}\n\nexport default useFetch\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip, Button, Modal, Form } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\nimport { fetchResource } from 'util/fetch'\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [validated, setValidated] = useState<boolean>(false)\n\n  const [password, setPassword] = useState<string>('')\n  const [repeatPassword, setRepeatPassword] = useState<string>('')\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    setValidated(true)\n\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      return\n    }\n\n    const body = {\n      password,\n      repeatPassword,\n    }\n\n    fetchResource('/password', 'POST', body)\n      .then(() => {\n        dispatch({\n          type: 'user_password',\n          payload: true,\n        })\n\n        setShowModal(false)\n        setValidated(false)\n        setPassword('')\n        setRepeatPassword('')\n      })\n      .catch((reason) => {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      })\n  }\n\n  let buttonClass = styles.unlocked\n  let buttonIcon: IconProp = 'lock-open'\n  let tooltipText = 'Set a password to keep your username'\n  let title = 'Claim Username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    buttonClass = styles.locked\n    buttonIcon = 'lock'\n    tooltipText = 'Change your password'\n    title = 'Update Password'\n  }\n\n  return (\n    <div className={styles.passwordLock}>\n      <OverlayTrigger\n        placement=\"bottom\"\n        delay={500}\n        overlay={<Tooltip id=\"passwordLock\">{tooltipText}</Tooltip>}\n      >\n        <Button variant=\"link\" className={buttonClass} style={ { padding: 0 } } onClick={handleShow}>\n          <FontAwesomeIcon icon={buttonIcon} />\n        </Button>\n      </OverlayTrigger>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              { title }\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Password...\"\n                autoFocus\n                required\n                minLength={6}\n                onChange={(event) => {\n                  setPassword(event.currentTarget.value)\n                }}\n                value={password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The password is too short. Minimum length is 6 characters.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"pwd.new\">\n              <Form.Control\n                as=\"input\"\n                type=\"password\"\n                placeholder=\"Repeat Password...\"\n                required\n                minLength={6}\n                pattern={password}\n                onChange={(event) => {\n                  setRepeatPassword(event.currentTarget.value)\n                }}\n                value={repeatPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                The passwords don't match!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button type=\"submit\" variant=\"primary\">\n              Set password\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { useGlobalState } from 'store/state'\nimport Loader from 'components/Loader'\n\nimport styles from './index.module.scss'\nimport Messages from './Messages'\nimport TextBox from './TextBox'\nimport OnlineUsers from './OnlineUsers'\nimport PasswordLock from './PasswordLock'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  let chatArea = <Loader />\n\n  if (state.socket.connected) {\n    chatArea = (\n      <div className={styles.chat}>\n        <Container>\n          <Row>\n            <Col>\n              <PasswordLock />\n            </Col>\n            <Col>\n              <OnlineUsers />\n            </Col>\n          </Row>\n        </Container>\n\n        <Messages />\n        <TextBox />\n      </div>\n    )\n  }\n\n  return chatArea\n}\n","import React from 'react'\n\nimport Loader from 'components/Loader'\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (!state.auth.loggedIn) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (state.auth.loggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\n\nimport { useGlobalState } from 'store/state'\nimport styles from './index.module.scss'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  if (!state.offline && !state.error) {\n    return null\n  }\n\n  let error = state.error\n  if (Array.isArray(error)) {\n    error = error.join('. ')\n  }\n  if (typeof error !== 'string') {\n    error = String(error)\n  }\n\n  if (state.error) {\n    return <div className={styles.offline}>Error: {error}</div>\n  }\n\n  return (\n    <div className={styles.offline}>\n      You seem to be offline! Please try again later\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\nimport HCaptcha from \"react-hcaptcha\"\n\nimport { useGlobalState } from 'store/state'\nimport { fetchResource } from 'util/fetch'\nimport Logo from 'components/Logo'\n\nimport styles from './index.module.scss'\nimport { AuthData } from 'store/types'\nimport { CAPTCHA_KEY } from '../../constants'\n\ntype State = {\n  username: string\n  password: string\n  hasPassword: boolean\n  loading: boolean\n}\n\nexport default () => {\n  const { dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    hasPassword: false,\n    loading: false,\n  })\n\n  const captchaRef = useRef<any>(null)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n    captchaRef.current.execute()\n  };\n\n  const oncaptchaChange = (token: string | null) => {\n    if (!token || localState.loading) {\n      return\n    }\n\n    setState((draft) => {\n      draft.loading = true\n    })\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n      captchaToken: token,\n    }\n    fetchResource('/auth', 'POST', body)\n      .then((data: AuthData) => {\n        if (!data || !data.user.user_id) {\n          console.warn('Invalid user object')\n          dispatch({\n            type: 'login',\n            payload: data,\n          })\n          return\n        }\n\n        dispatch({\n          type: 'login',\n          payload: data,\n        })\n      })\n      .catch((reason) => {\n        console.log('login fail reason', reason)\n        if (reason.status !== 400) {\n          // username requires password\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        if (captchaRef.current.resetCaptcha) {\n          captchaRef.current.resetCaptcha()\n        }\n\n        setState((draft) => {\n          draft.loading = false\n          if (reason.status === 400) {\n            draft.hasPassword = true\n          }\n        })\n      }\n    )\n  }\n\n  let theme = 'light'\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    theme = 'dark'\n  }\n\n  return (\n    <Container className={classNames(styles.login, 'mt-4')}>\n      <Logo />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            placeholder=\"What's your name?\"\n            disabled={localState.loading}\n            autoFocus\n            minLength={ 1 }\n            maxLength={ 20 }\n            onChange={(e) => {\n              const value = e.currentTarget.value\n              setState((draft) => {\n                draft.username = value\n              })\n            }}\n            value={localState.username}\n          />\n          {localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              disabled={localState.loading}\n              autoFocus\n              onChange={(e) => {\n                const value = e.currentTarget.value\n                setState((draft) => {\n                  draft.password = value\n                })\n              }}\n              value={localState.password}\n            />\n          )}\n          <HCaptcha\n            ref={ captchaRef }\n            size='invisible'\n            theme={ theme }\n            sitekey={ CAPTCHA_KEY }\n            onVerify={ oncaptchaChange }\n          />\n          <button type=\"submit\" style={{ visibility: 'hidden' }}>\n            Login\n          </button>\n        </Form.Group>\n      </Form>\n    </Container>\n  )\n}\n","import { Action, AuthData } from 'store/types'\n\nimport { fetchResource } from './fetch'\n\nconst OFFLINE_RETRY_DELAY = 2000\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET')\n    .then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object')\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    })\n    .catch((reason) => {\n      console.log('Login check failed', reason)\n      if (reason.message === 'Network Error') {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n\n        // try again\n        setTimeout(() => {\n          checkAuth(dispatch)\n        }, OFFLINE_RETRY_DELAY)\n      } else {\n        if (reason.status !== 401) {\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      }\n    })\n}\n\nexport default checkAuth\n","import React, { useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport Chat from 'sections/Chat'\nimport AuthenticatedRoute from 'util/AuthenticatedRoute'\nimport UnauthenticatedRoute from 'util/UnauthenticatedRoute'\nimport OfflineCheck from 'components/OfflineCheck'\nimport Login from 'sections/Login'\nimport useGlobalState from 'store/state'\nimport checkAuth from 'util/checkAuth'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked) {\n      checkAuth(dispatch)\n    }\n  }, [state.auth.checked, dispatch])\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path=\"/login\" component={Login} />\n        <AuthenticatedRoute path=\"/\" component={Chat} />\n      </Switch>\n    </>\n  )\n}\n","import React, { useEffect, useContext, useState, useCallback } from 'react'\nimport Helmet from 'react-helmet'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport useGlobalState from 'store/state'\n\nexport default () => {\n  const { state } = useGlobalState();\n  const { socket } = useContext(SocketContext)\n\n  const [windowFocused, setWindowFocused] = useState<boolean>(true)\n  const [titleNotification, setTitleNotification] = useState<boolean>(false)\n\n  const onMessage = useCallback((msg: Message) => {\n    const user = state.auth.user;\n    if (!windowFocused && user && user.user_id !== msg.user.user_id) {\n      setTitleNotification(true)\n    }\n  }, [windowFocused, state.auth.user])\n\n  useEffect(() => {\n    if (!socket) {\n      return\n    }\n    socket.on('message', onMessage)\n  }, [socket, onMessage])\n\n  window.onfocus = function () {\n    setTitleNotification(false)\n    setWindowFocused(true)\n  }\n\n  window.onblur = function () {\n    setWindowFocused(false)\n  }\n\n  return (\n    <Helmet>\n      <title>{titleNotification ? '• dotdot' : 'dotdot'}</title>\n    </Helmet>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport { faLock, faLockOpen, faCircle, faDotCircle, faCircleNotch, faCode, faCog, faArrowAltCircleDown, faMeh } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faDotCircle as farDotCircle,\n  faMeh as farMeh,\n} from \"@fortawesome/free-regular-svg-icons\";\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\nlibrary.add(faLock, faLockOpen, faCircle, faDotCircle, farDotCircle, faCircleNotch, faCode, faCog, faArrowAltCircleDown, faMeh, farMeh)\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { StateProvider } from 'store/state'\nimport SocketProvider from 'util/socketProvider'\n\nimport Router from './router'\nimport Title from './components/Title'\n\nimport './lib/icons'\nimport 'assets/scss/index.scss'\n\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"system\":\"Message_system__2g6ZE\",\"user\":\"Message_user__3HofW\",\"timestamp\":\"Message_timestamp__2armv\",\"offline\":\"Message_offline__32gHu\",\"icon\":\"Message_icon__ATXFm\",\"body\":\"Message_body__32TEj\",\"draft\":\"Message_draft__1zB7h\",\"header\":\"Message_header__3wUCX\",\"private\":\"Message_private__ORZ48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30xDu\",\"svgFilter\":\"Logo_svgFilter__1s9i7\",\"blob\":\"Logo_blob__1iSwo\",\"blob-first\":\"Logo_blob-first__3YKrD\",\"blob-second\":\"Logo_blob-second__2r5Nx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\",\"messageScroll\":\"Messages_messageScroll__CCnSp\",\"unseen\":\"Messages_unseen__gVw6f\",\"unseenContainer\":\"Messages_unseenContainer__3haBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBox\":\"TextBox_textBox__McZeC\",\"private\":\"TextBox_private__1kesE\",\"command\":\"TextBox_command__1uXWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordLock\":\"PasswordLock_passwordLock__2FTiA\",\"unlocked\":\"PasswordLock_unlocked__21MTQ\",\"pulse\":\"PasswordLock_pulse__2T-_F\",\"locked\":\"PasswordLock_locked__1mCl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};"],"sourceRoot":""}