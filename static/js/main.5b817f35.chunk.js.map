{"version":3,"sources":["sections/Chat/index.module.scss","sections/Chat/Session/AdminBadge/index.module.scss","sections/Chat/Session/PasswordModal/index.module.scss","sections/Chat/OnlineUsers/index.module.scss","sections/Chat/Messages/Message/MessageContent/index.module.scss","sections/Chat/Footer/Reply/index.module.scss","sections/Chat/Footer/index.module.scss","components/OfflineCheck/index.module.scss","sections/Chat/Messages/Message/index.module.scss","sections/Chat/Wrapper/index.module.scss","sections/Chat/Footer/Submit/index.module.scss","sections/Login/index.module.scss","assets/sounds/newMessage.mp3","sections/Chat/Messages/Message/MessageContent/Embed/index.module.scss","sections/Chat/Footer/Field/index.module.scss","store/types.ts","constants.ts","sections/Admin/RealtimeChart/index.tsx","lib/secondsToHuman.ts","util/socketProvider.tsx","sections/Admin/Widget/index.tsx","sections/Admin/index.tsx","lib/color/makeColorReadable.ts","lib/color/hex2rgb.ts","lib/color/getRgbLuminance.ts","lib/color/psbc.ts","store/reducer.ts","store/state.tsx","components/LogoAnimation/index.tsx","components/Loader/index.tsx","components/Logo/index.tsx","sections/Chat/Wrapper/index.tsx","sections/Chat/Session/UserBadge/index.tsx","sections/Chat/Session/AdminBadge/index.tsx","util/fetch.ts","sections/Chat/Session/PasswordModal/index.tsx","sections/Chat/Session/index.tsx","sections/Chat/OnlineUsers/User/index.tsx","sections/Chat/OnlineUsers/index.tsx","sections/Chat/Header/index.tsx","sections/Chat/Messages/Message/HelpMessage/index.tsx","sections/Chat/Messages/Message/MessageContent/Embed/index.tsx","sections/Chat/Messages/Message/MessageContent/index.tsx","sections/Chat/Messages/Message/Heading/index.tsx","sections/Chat/Messages/Message/Reply/index.tsx","sections/Chat/Messages/Message/index.tsx","sections/Chat/Messages/ScrollBox/index.tsx","sections/Chat/Messages/index.tsx","sections/Chat/Footer/Reply/index.tsx","sections/Chat/Footer/Field/index.tsx","sections/Chat/Footer/Submit/index.tsx","sections/Chat/Footer/TextIcon/index.tsx","sections/Chat/Footer/index.tsx","lib/messageParse.ts","sections/Chat/index.tsx","sections/loading/index.tsx","util/AuthenticatedRoute.tsx","util/UnauthenticatedRoute.tsx","components/OfflineCheck/index.tsx","sections/Login/index.tsx","util/checkAuth.ts","router.tsx","components/Title/index.tsx","lib/dateDiff.ts","lib/icons.ts","index.tsx","sections/Chat/Session/UserBadge/index.module.scss","sections/Admin/Widget/index.module.scss","components/LogoAnimation/index.module.scss","sections/Chat/Header/index.module.scss","sections/Chat/Messages/index.module.scss","sections/Chat/Footer/TextIcon/index.module.scss"],"names":["module","exports","EVENTS","CONNECT","DISCONNECT","MESSAGE","COMMAND","HISTORY","ONLINE_USERS","STATS","TIMER","CONTROL","CHANGE_ROOM","API_URL","process","VALID_USERNAME","CAPTCHA_KEY","props","data","map","num","index","date","value","i","length","MAX_STATS_BARS","push","style","width","height","barSize","barCategoryGap","barGap","margin","top","bottom","left","right","allowDecimals","dataKey","tick","label","position","offset","fill","stroke","isAnimationActive","type","cursor","forHumans","seconds","levels","Math","floor","returntext","max","trim","SocketContext","createContext","socket","useGlobalState","state","dispatch","useState","setSocket","hasPassword","auth","user","useEffect","loggedIn","payload","newSocket","socketio","reconnection","timeout","setInterval","connected","emit","setTimeout","Object","values","forEach","event","on","error","provider","Provider","children","content","className","styles","title","icon","classNames","iconBg","history","dashboardWidget","tooltip","Tooltip","id","OverlayTrigger","delay","show","hide","overlay","useContext","totalTime","stats","timeActive","timeInactive","statsData","header","round","sessions","detail","onlineUsers","totalUsers","totalMessages","cpuUsage","freeMemory","uptime","roomData","rooms","Container","fluid","Row","Col","RealtimeChart","messages","users","onClick","room","activePayload","domain","stackId","row","key","Widget","makeColorReadable","color","colorRgb","hex","result","exec","r","parseInt","g","b","hex2Rgb","lightMode","window","matchMedia","matches","lum","a","v","pow","getRgbLuminance","p","c0","P","f","t","h","c1","l","m","pSBCr","d","n","x","split","slice","parseFloat","toString","undefined","pSBC","produce","draft","action","offline","checked","systemMessage","uuid","uuidv4","systemUser","timestamp","Date","attributes","private","contrastColor","incomingMessage","draftIsPastMessage","draftIndex","eachMessage","user_id","isEmpty","splice","replyToId","messageReply","find","replyTo","lastMessage","message","shift","keys","chat","focused","name","isActive","initialState","draftTimer","Array","StateContext","React","console","warn","StateProvider","useReducer","reducer","infinite","animationIterationCount","animationDirection","logo","blob","svgFilter","xmlns","version","in","stdDeviation","mode","in2","transform","LogoAnimation","lettersColor","theme","viewBox","fillRule","xlinkHref","opacity","mask","cx","cy","rx","ry","wrapper","small","isLocked","badge","dot","lock","closed","to","marginLeft","csrfToken","axios","defaults","withCredentials","fetchResource","path","method","body","Error","url","options","xsrfHeaderName","headers","response","status","parseAxiosError","errors","parseErrorList","join","defaultError","isArray","parseErrors","useFetch","onHide","validated","setValidated","password","setPassword","repeatPassword","setRepeatPassword","Modal","Form","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","then","catch","reason","Header","closeButton","Title","Body","Group","controlId","Control","as","autoComplete","placeholder","autoFocus","required","minLength","onChange","Feedback","pattern","Footer","footer","href","Button","variant","isOpen","setModalOpen","tooltipText","isAdmin","AdminBadge","placement","UserBadge","PasswordModal","isCurrentUser","iconName","inactive","userColor","count","User","scrollingWhileFocused","pageYOffset","Wrapper","Logo","online","OnlineUsers","Table","size","rel","target","useImmer","loading","setState","replace","description","favicon","embed","author_name","author_url","images","oEmbed","provider_name","twitter_card","players","site","open_graph","sizes","video","aspect","maxWidth","SoundCloud","src","frameBorder","allowFullScreen","allowTransparency","allow","alt","author","image","USER_REGEX","RegExp","URL_REGEX","isSystem","messageContent","urls","HelpMessage","match","includes","reactStringReplace","username","eachUser","mention","source","unwrapDisallowed","allowedTypes","embeds","useMemo","Embed","Heading","isDraft","isPrivate","isOnline","userContrastColor","background","spin","toLocaleTimeString","hour","minute","Reply","replyBox","borderLeftColor","Message","reply","MessageComponent","memo","log","messageBody","userData","isUserOnline","findIndex","isReplyAllowed","MessageContent","system","replyButton","boxRef","onScrollChanged","threshold","scrollTop","setScrollTop","setHeight","scrollDebounce","useRef","onScrollDebounced","useCallback","isAtBottom","clearTimeout","current","scrollToBottom","scrollHeight","offsetHeight","updateScrollState","shouldScroll","customThreshold","abs","addEventListener","removeEventListener","newHeight","scrollAtBottom","unseenMessages","localState","setLocalState","chatAreaRef","ref","unseen","unseenContainer","messageScroll","ScrollBox","onMessageClick","onCancelReply","actions","kind","inputRef","handleFocus","focus","field","command","inputArea","onFocus","onBlur","disabled","button","onHelp","textIcon","interactive","askForHelp","sendMessage","FieldActions","TextIcon","Submit","container","e","Field","val","isCommand","isPm","words","test","substr","getMessagePmTo","smoothscroll","polyfill","messageId","cancelReply","setHeaderPosition","scrollingChat","Messages","Loader","exact","component","String","verified","captchaRef","oncaptchaChange","token","captchaToken","resetCaptcha","login","execute","maxLength","sitekey","CAPTCHA_PROVIDER","checkAuth","OfflineCheck","UnauthenticatedRoute","Login","AuthenticatedRoute","Admin","Chat","lastSound","windowFocused","titleNotification","useSound","newMessageSound","interrupt","volume","play","onMessage","msg","t1","t2","getTime","dateDiff","Helmet","library","add","faLock","faLockOpen","faEyeSlash","faCircle","faDotCircle","farDotCircle","faCircleNotch","faCode","faCog","faArrowAltCircleDown","faMeh","farMeh","faAngry","faDizzy","faFlushed","faFrown","faFrownOpen","faGrimace","faGrin","faGrinAlt","faGrinBeam","faGrinBeamSweat","faGrinHearts","faGrinSquint","faGrinSquintTears","faGrinStars","faGrinTears","faGrinTongue","faGrinTongueSquint","faGrinTongueWink","faGrinWink","faKiss","faKissBeam","faKissWinkHeart","faLaugh","faLaughBeam","faLaughSquint","faLaughWink","faMehBlank","faMehRollingEyes","faSadCry","faSadTear","faSmile","faSmileBeam","faSmileWink","faSurprise","faTired","farAngry","farDizzy","farFlushed","farFrown","farFrownOpen","farGrimace","farGrin","farGrinAlt","farGrinBeam","farGrinBeamSweat","farGrinHearts","farGrinSquint","farGrinSquintTears","farGrinStars","farGrinTears","farGrinTongue","farGrinTongueSquint","farGrinTongueWink","farGrinWink","farKiss","farKissBeam","farKissWinkHeart","farLaugh","farLaughBeam","farLaughSquint","farLaughWink","farMehBlank","farMehRollingEyes","farSadCry","farSadTear","farSmile","farSmileBeam","farSmileWink","farSurprise","farTired","faShieldAlt","faQuestionCircle","faPaperPlane","faTimes","faReply","faExternalLinkAlt","faRobot","app","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b817f35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__LEZtX\",\"scrollingChat\":\"Chat_scrollingChat__165RB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"AdminBadge_badge__1HTPx\",\"icon\":\"AdminBadge_icon__H_GPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"PasswordModal_footer__32ASO\",\"left\":\"PasswordModal_left__1uFYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineUsers\":\"OnlineUsers_onlineUsers__2Umxk\",\"count\":\"OnlineUsers_count__1iz1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContent\":\"MessageContent_messageContent__2lJQW\",\"mention\":\"MessageContent_mention__1rALG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply\":\"Reply_reply__F5QhM\",\"actions\":\"Reply_actions__xvZzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__pTkkR\",\"container\":\"Footer_container__323Ar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offline\":\"OfflineCheck_offline__2vKbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2v30T\",\"reply\":\"Message_reply__jMrB5\",\"replyButton\":\"Message_replyButton__15_Mb\",\"mention\":\"Message_mention__82QFp\",\"system\":\"Message_system__2g6ZE\",\"user\":\"Message_user__3HofW\",\"timestamp\":\"Message_timestamp__2armv\",\"offline\":\"Message_offline__32gHu\",\"icon\":\"Message_icon__ATXFm\",\"inactive\":\"Message_inactive__2OBrK\",\"body\":\"Message_body__32TEj\",\"draft\":\"Message_draft__1zB7h\",\"header\":\"Message_header__3wUCX\",\"private\":\"Message_private__ORZ48\",\"replyBox\":\"Message_replyBox__1NP5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__STXDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Submit_button__VLsx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__38Hzs\"};","module.exports = __webpack_public_path__ + \"static/media/newMessage.482e2f99.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embed\":\"Embed_embed__3wuAi\",\"title\":\"Embed_title__2Mpxf\",\"icon\":\"Embed_icon__1MOM5\",\"description\":\"Embed_description__12iOR\",\"author\":\"Embed_author__3e6ma\",\"images\":\"Embed_images__HWNzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__3cbYw\",\"focused\":\"Field_focused__3YLuR\",\"private\":\"Field_private__3D8g3\",\"command\":\"Field_command__3ZUJA\",\"inputArea\":\"Field_inputArea__3Xbcc\",\"actions\":\"Field_actions__KHHdb\"};","import { IconName } from '@fortawesome/fontawesome-svg-core'\n\nexport type User = {\n  user_id: string\n  name: string\n  color: string\n  contrastColor?: string\n  icon: IconName | null\n  isActive: boolean\n  isAdmin?: boolean\n  hasPassword: boolean\n}\n\nexport type MessageAttributes = {\n  draft: boolean\n  private: boolean\n  to?: string | null\n  replyToId?: string | null\n  replyTo?: Message | null\n}\n\nexport type Message = {\n  uuid: string\n  user: User\n  timestamp: Date\n  content: string[]\n  attributes: MessageAttributes\n}\n\nexport type IncomingMessage = {\n  uuid: string\n  user: User\n  timestamp: Date\n  content: string\n  attributes: MessageAttributes\n}\n\nexport type OutgoingMessage = {\n  content: string\n  attributes: MessageAttributes\n}\n\nexport type RoomStats = {\n  id: string\n  active: number\n  inactive: number\n}\n\nexport type AppState = {\n  auth: {\n    checked: boolean\n    loggedIn: boolean\n    user: User | null\n  }\n  socket: {\n    connected: boolean\n  }\n  draftTimer: number\n  onlineUsers: User[]\n  messages: Message[]\n  stats: {\n    messages: number[]\n    users: number[]\n    rooms: RoomStats[]\n    onlineUsers: number\n    totalMessages: number\n    totalUsers: number\n    cpuUsage: number\n    freeMemory: number\n    uptime: number\n    timeActive: number\n    timeInactive: number\n    sessions: number\n  }\n  offline: boolean\n  error: string | null\n  chat: {\n    focused: boolean\n  }\n\n  [key: string]: any\n}\n\nexport type Action = {\n  type: string\n  payload?: any\n}\n\nexport type AppContext = {\n  state: AppState\n  dispatch: React.Dispatch<Action>\n}\n\nexport type AuthData = {\n  user: User\n  token: string\n}\n\nexport const EVENTS = {\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  MESSAGE: 'message',\n  COMMAND: 'command',\n  HISTORY: 'history',\n  ONLINE_USERS: 'users',\n  STATS: 'stats',\n  TIMER: 'timer',\n  CONTROL: 'control',\n  CHANGE_ROOM: 'change_room',\n}\n","export const API_URL = process.env.REACT_APP_API_URL || 'https://api.dotdot.im'\nexport const VALID_USERNAME = /^[A-Za-z0-9]+(?:[ _][A-Za-z0-9]+)*_?$/i\nexport const CAPTCHA_PROVIDER = process.env.REACT_APP_CAPTCHA_PROVIDER || 'recaptcha'\nexport const CAPTCHA_KEY = process.env.REACT_APP_CAPTCHA_KEY || ''\nexport const MAX_MESSAGE_HISTORY = 100\n","import React from 'react'\nimport { AreaChart, XAxis, YAxis, Area, Tooltip, ResponsiveContainer, Label } from 'recharts'\nimport { MAX_STATS_BARS } from '..';\n\ntype Props = {\n  data: number[],\n  height?: number,\n  label: string,\n};\n\nexport default (props: Props) => {\n  const data = props.data.map((num, index) => ({\n    date: index,\n    value: num,\n  }))\n\n  for (let i = data.length; i < MAX_STATS_BARS; i++) {\n    data.push({\n      date: i,\n      value: 0,\n    })\n  }\n\n  return (\n    <div style={ { width: '100%', height: `${ props.height || 250 }px` } }>\n      <ResponsiveContainer>\n        <AreaChart data={data} barSize={ 5 } barCategoryGap={ 2 } barGap={ 2 } margin={{ top: 50, bottom: 20, left: 0, right: 0}}>\n          <YAxis allowDecimals={ false } />\n          <XAxis dataKey=\"date\" tick={false}>\n            <Label value={ props.label } position=\"bottom\" offset={ -15 } fill='#ccc' />\n          </XAxis>\n          <Area dataKey=\"value\" fill=\"#f75f00\" stroke=\"#f75f00\" isAnimationActive={ false } type='linear' />\n          <Tooltip cursor={ { fill: 'rgba(255, 255, 255, 0.1)' } }/>\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","export function forHumans ( seconds: number ) {\n  const levels: [number, string][] = [\n      [Math.floor(seconds / 31536000), 'y'],\n      [Math.floor((seconds % 31536000) / 86400), 'd'],\n      [Math.floor(((seconds % 31536000) % 86400) / 3600), 'h'],\n      [Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 'm'],\n      [(((seconds % 31536000) % 86400) % 3600) % 60, 's'],\n  ];\n  let returntext = '';\n\n  for (let i = 0, max = levels.length; i < max; i++) {\n      if ( levels[i][0] === 0 ) continue;\n      returntext += ' ' + levels[i][0] + levels[i][1];\n  };\n  return returntext.trim();\n}","import React, { createContext, useEffect, useState } from 'react'\nimport socketio from 'socket.io-client'\n\nimport { useGlobalState } from 'store/state'\nimport { API_URL } from '../constants'\nimport { Message, EVENTS } from 'store/types'\n\nconst USAGE_TIMER_INTERAL = 30 * 1000\n\ntype SocketContextType = {\n  socket: SocketIOClient.Socket | null\n}\n\nexport const SocketContext = createContext<SocketContextType>({\n  socket: null,\n})\n\ntype Props = {\n  children: any\n}\n\nexport default (props: Props) => {\n  const { state, dispatch } = useGlobalState()\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null)\n\n  const hasPassword = state.auth.user?.hasPassword;\n\n  useEffect(() => {\n    if (!state.auth.loggedIn) {\n      return\n    }\n\n    // socket already set up\n    if (socket) {\n      return;\n    }\n\n    // clear any errors\n    dispatch({\n      type: 'error',\n      payload: null,\n    })\n\n    // initialize the socket\n    const newSocket = socketio(API_URL, {\n      reconnection: true,\n      timeout: 2000,\n    })\n\n    setInterval(() => {\n      if (newSocket.connected) {\n        newSocket.emit('timer')\n      }\n    }, USAGE_TIMER_INTERAL)\n\n    // remind to set a password\n    if (!hasPassword) {\n      setTimeout(() => {\n        dispatch({\n          type: 'system_message',\n          payload: 'Remember: If you want to keep this username, you must set a password! You can set it by clicking on the lock icon on the top right of the screen.'\n        })\n      }, 60 * 1000);\n    }\n\n    Object.values(EVENTS).forEach(event => {\n      newSocket.on(event, (payload: any) => {\n        dispatch({\n          type: `socket_${event}`,\n          payload: payload,\n        })\n      })\n    })\n\n    newSocket.on('stats', (payload: Message[]) => {\n      dispatch({\n        type: 'stats',\n        payload,\n      })\n    })\n\n    newSocket.on('connect_error', () => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('connect_timeout', () => {\n      dispatch({\n        type: 'offline',\n        payload: null,\n      })\n    })\n\n    newSocket.on('error', (error: string) => {\n      dispatch({\n        type: `socket_${EVENTS.DISCONNECT}`,\n      })\n\n      if (error) {\n        dispatch({\n          type: 'error',\n          payload: error,\n        })\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      } else {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n      }\n    })\n\n    setSocket(newSocket)\n  }, [dispatch, socket, state.auth.loggedIn, hasPassword])\n\n  let provider = {\n    socket,\n  }\n\n  return (\n    <SocketContext.Provider value={provider}>\n      {props.children}\n    </SocketContext.Provider>\n  )\n}\n","import React from 'react'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  title: string;\n  content: string | number | null;\n  icon?: IconProp;\n  iconBg?: \"blue\" | \"orange\" | \"green\";\n  history?: string | number | null;\n  tooltip?: string;\n};\n\nexport default (props: Props) => {\n  let content = (\n    <>\n      <div className={ styles.title }>{props.title}</div>\n      <span className={ styles.content }>{props.content}</span>\n      {props.icon && (\n        <span className={classNames(\"icon\", props.iconBg)}>\n          <FontAwesomeIcon icon={props.icon} />\n        </span>\n      )}\n      <div className={ styles.history }>\n        <span className={ 'text-muted' }>{props.history}</span>\n      </div>\n    </>\n  );\n\n  content = (\n    <div className={ styles.dashboardWidget }>\n      { content }\n    </div>\n  );\n\n  if (!props.tooltip) {\n    return content;\n  }\n\n  const tooltip = (\n    <Tooltip id='counterTooltip'>\n      { props.tooltip }\n    </Tooltip>\n  );\n\n  return (\n    <OverlayTrigger\n      delay={{ show: 50, hide: 0 }}\n      overlay={ tooltip }\n    >\n      { content }\n    </OverlayTrigger>\n  );\n};\n","import React, { useContext } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { BarChart, XAxis, YAxis, Bar, Tooltip, ResponsiveContainer, Label } from 'recharts'\n\nimport useGlobalState from 'store/state';\nimport RealtimeChart from './RealtimeChart';\nimport { forHumans } from 'lib/secondsToHuman';\nimport { SocketContext } from 'util/socketProvider';\nimport { EVENTS } from 'store/types';\nimport Widget from './Widget';\n\nexport const MAX_STATS_BARS = 100;\n\ntype Stat = {\n  header: string,\n  data: string | number,\n  detail?: string,\n  tooltip?: string,\n}\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  const { socket } = useContext(SocketContext)\n\n  const totalTime = state.stats.timeActive + state.stats.timeInactive\n\n  const statsData: Stat[][] = [\n    [\n      {\n        header: 'Time Active / Session',\n        data: forHumans(Math.round(state.stats.timeActive / state.stats.sessions)),\n        detail: 'Total: ' + forHumans(state.stats.timeActive) + ' (' + Math.round(state.stats.timeActive * 100 / totalTime) + '%)'\n      },\n      {\n        header: 'Time Inactive / Session',\n        data: forHumans(Math.round(state.stats.timeInactive / state.stats.sessions)),\n        detail: 'Total: ' + forHumans(state.stats.timeInactive) + ' (' + Math.round(state.stats.timeInactive * 100 / totalTime) + '%)'\n      },\n    ],\n    [\n      {\n        header: 'Users Online',\n        data: Math.round(state.stats.onlineUsers * 100 / state.stats.totalUsers) + '%',\n        detail: `${state.stats.onlineUsers} out of ${state.stats.totalUsers}`,\n        tooltip: '',\n      },\n      {\n        header: 'Total Messages',\n        data: state.stats.totalMessages,\n        detail: Math.round(state.stats.totalMessages / state.stats.totalUsers) + ' messages / user'\n      },\n      {\n        header: 'Server',\n        data: 'CPU: ' + state.stats.cpuUsage + '% - RAM: ' + state.stats.freeMemory + '%',\n        detail: 'Up for ' + forHumans(state.stats.uptime),\n        tooltip: 'Shows CPU usage over the last few seconds, and free RAM',\n      },\n      {\n        header: 'Avg Sessions / user',\n        data: Math.round(state.stats.sessions / state.stats.totalUsers),\n        detail: 'Total sessions: ' + state.stats.sessions\n      },\n    ],\n  ]\n\n  const roomData = state.stats.rooms\n\n  const onRoomClick = (event: any) => {\n    if (!event) {\n      return\n    }\n    const room = event.activePayload[0].payload.id\n    if (socket) {\n      socket.emit(EVENTS.CHANGE_ROOM, {\n        room,\n      })\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <RealtimeChart\n            data={ state.stats.messages }\n            label='Realtime Messages'\n          />\n        </Col>\n        <Col>\n          <RealtimeChart\n            data={ state.stats.users }\n            label='Realtime Users'\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div style={ { width: '100%', height: '400px' } }>\n            <ResponsiveContainer>\n              <BarChart onClick={ onRoomClick } data={roomData} barSize={ 10 } margin={{ top: 50, bottom: 0, left: 0, right: 0}}>\n                <YAxis allowDecimals={ false } domain={ [ 0, 10 ] } />\n                <XAxis tick={false}>\n                  <Label value='Rooms' position=\"bottom\" offset={ -15 } fill='#ccc' />\n                </XAxis>\n                <Bar dataKey=\"active\" stackId='a' fill=\"#f75f00\" />\n                <Bar dataKey=\"inactive\" stackId='a' fill=\"#555\" />\n                <Tooltip cursor={ { fill: 'rgba(255, 255, 255, 0.1)' } }/>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </Col>\n      </Row>\n      <Container className='mt-4'>\n        { statsData.map((row, index) => (\n          <Row key={ index }>\n            { row.map(stats => (\n              <Col key={ stats.header }>\n                <Widget\n                  title={ stats.header }\n                  content={ stats.data }\n                  history={ stats.detail }\n                  tooltip={ stats.tooltip }\n                />\n              </Col>\n            )) }\n          </Row>\n        )) }\n      </Container>\n    </Container>\n  )\n}","import { getRgbLuminance } from './getRgbLuminance'\nimport { hex2Rgb } from './hex2rgb'\nimport { pSBC } from './psbc'\n\n/**\n * Takes a HEX string (with or without pound) and returns a colour visible in the theme background\n */\nexport const makeColorReadable = (color: string) => {\n  const colorRgb = hex2Rgb(color)\n  const lightMode =\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: light)').matches\n\n  if (!colorRgb) return '#0000FF' // fail\n\n  const lum = getRgbLuminance(colorRgb.r, colorRgb.g, colorRgb.b)\n  let offset = 0\n  // Only change color if luminance difference in the 50% range to theme\n  if (lightMode && lum >= 0.5) offset = -lum\n  else if (!lightMode && lum < 0.5) offset = lum + 0.2\n\n  /*\n  // !Demo\n  // Make sure to replicate the formula changes you do above, here\n  const forLight = lum >= 0.5 ? pSBC(-lum, color, '#000000') : color\n  const forDark = lum < 0.5 ? pSBC(lum + 0.2, color, '#ffffff') : color\n  // Current on dark\n  console.log(\n    `%c (${forDark !== color ? '<' : '='}) @jaicab ☃ ★ ♖`,\n    `background:#293134; color: ${color}; display: block; padding: 1em; font-size: 1.5em`\n  )\n  // New on dark\n  if (forDark !== color)\n    console.log(\n      `%c (>) @jaicab ☃ ★ ♖`,\n      `background:#293134; color: ${forDark}; display: block; padding: 1em; font-size: 1.5em`\n    )\n  // Current on light\n  console.log(\n    `%c (${forLight !== color ? '<' : '='}) @jaicab ☃ ★ ♖`,\n    `background:#fcfcfc; color: ${color}; display: block; padding: 1em; font-size: 1.5em`\n  )\n  // New on light\n  if (forLight !== color)\n    console.log(\n      '%c (>) @jaicab ☃ ★ ♖',\n      `background:#fcfcfc; color: ${forLight}; display: block; padding: 1em; font-size: 1.5em`\n    )\n  */\n\n  return offset ? pSBC(offset, color) || color : color\n}\n","/**\n * hex2Rgb\n * Takes string, returns { r, g, b }\n */\nexport const hex2Rgb = (hex: string) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null\n}\n","/**\n * Calculates luminance for { r, g, b } passed\n * Returns value 0-1\n */\nexport const getRgbLuminance = (r: number, g: number, b: number) => {\n  const a = [r, g, b].map(function (v) {\n    v /= 255\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4)\n  })\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722\n}\n","// @ts-nocheck\n/* eslint-disable */\n\n/**\n * pSBC v4.0\n * ===============\n * How to use and source:\n * https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)#usages\n */\nexport const pSBC = (\n  p: number,\n  c0: string,\n  c1: string = null,\n  l: boolean = false\n) => {\n  let r,\n    g,\n    b,\n    P,\n    f,\n    t,\n    h,\n    i = parseInt,\n    m = Math.round,\n    a = typeof c1 == 'string'\n  if (\n    typeof p != 'number' ||\n    p < -1 ||\n    p > 1 ||\n    typeof c0 != 'string' ||\n    (c0[0] != 'r' && c0[0] != '#') ||\n    (c1 && !a)\n  )\n    return null\n  if (!window.pSBCr)\n    window.pSBCr = (d) => {\n      let n = d.length,\n        x = {}\n      if (n > 9) {\n        ;([r, g, b, a] = d = d.split(',')), (n = d.length)\n        if (n < 3 || n > 4) return null\n        ;(x.r = i(r[3] == 'a' ? r.slice(5) : r.slice(4))),\n          (x.g = i(g)),\n          (x.b = i(b)),\n          (x.a = a ? parseFloat(a) : -1)\n      } else {\n        if (n == 8 || n == 6 || n < 4) return null\n        if (n < 6)\n          d =\n            '#' +\n            d[1] +\n            d[1] +\n            d[2] +\n            d[2] +\n            d[3] +\n            d[3] +\n            (n > 4 ? d[4] + d[4] : '')\n        d = i(d.slice(1), 16)\n        if (n == 9 || n == 5)\n          (x.r = (d >> 24) & 255),\n            (x.g = (d >> 16) & 255),\n            (x.b = (d >> 8) & 255),\n            (x.a = m((d & 255) / 0.255) / 1000)\n        else\n          (x.r = d >> 16), (x.g = (d >> 8) & 255), (x.b = d & 255), (x.a = -1)\n      }\n      return x\n    }\n  ;(h = c0.length > 9),\n    (h = a ? (c1.length > 9 ? true : c1 == 'c' ? !h : false) : h),\n    (f = window.pSBCr(c0)),\n    (P = p < 0),\n    (t =\n      c1 && c1 != 'c'\n        ? window.pSBCr(c1)\n        : P\n        ? { r: 0, g: 0, b: 0, a: -1 }\n        : { r: 255, g: 255, b: 255, a: -1 }),\n    (p = P ? p * -1 : p),\n    (P = 1 - p)\n  if (!f || !t) return null\n  if (l)\n    (r = m(P * f.r + p * t.r)),\n      (g = m(P * f.g + p * t.g)),\n      (b = m(P * f.b + p * t.b))\n  else\n    (r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5)),\n      (g = m((P * f.g ** 2 + p * t.g ** 2) ** 0.5)),\n      (b = m((P * f.b ** 2 + p * t.b ** 2) ** 0.5))\n  ;(a = f.a),\n    (t = t.a),\n    (f = a >= 0 || t >= 0),\n    (a = f ? (a < 0 ? t : t < 0 ? a : a * P + t * p) : 0)\n  if (h)\n    return (\n      'rgb' +\n      (f ? 'a(' : '(') +\n      r +\n      ',' +\n      g +\n      ',' +\n      b +\n      (f ? ',' + m(a * 1000) / 1000 : '') +\n      ')'\n    )\n  else\n    return (\n      '#' +\n      (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0))\n        .toString(16)\n        .slice(1, f ? undefined : -2)\n    )\n}\n","import produce from 'immer'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport {\n  AppState,\n  Action,\n  Message,\n  EVENTS,\n  User,\n  IncomingMessage,\n} from './types'\nimport { MAX_MESSAGE_HISTORY } from '../constants'\nimport { MAX_STATS_BARS } from 'sections/Admin'\nimport { makeColorReadable } from 'lib/color/makeColorReadable'\n\n// TODO NEW BLOG POST\n// const REDUCER = {\n//   [REDUX_CONSTANTS.LOGIN]: (draft, payload) => {},\n// };\n\nexport default produce((draft: AppState, action: Action) => {\n  // REDUCER[action.type](draft, action.payload);\n  // console.log('REDUCER', action)\n\n  switch (action.type) {\n    case 'login':\n      if (!draft.offline) {\n        draft.auth.checked = true\n      }\n\n      if (!action.payload) {\n        draft.auth.loggedIn = false\n        draft.auth.user = null\n        break\n      }\n\n      draft.offline = false\n\n      draft.auth.loggedIn = true\n      draft.auth.user = action.payload.user\n      break\n    case 'offline':\n      draft.offline = true\n      draft.error = null\n      draft.socket.connected = false\n      break\n    case 'error':\n      draft.error = action.payload\n      break\n    case 'user_password':\n      if (draft.auth.user) {\n        draft.auth.user.hasPassword = true\n      }\n      break\n    case 'system_message':\n      const systemMessage = {\n        uuid: uuidv4(),\n        user: systemUser,\n        content: [action.payload],\n        timestamp: new Date(),\n        attributes: {\n          private: false,\n          draft: false,\n        },\n      }\n      draft.messages.push(systemMessage)\n      break\n    case `socket_${EVENTS.CONNECT}`:\n      draft.socket.connected = true\n      draft.offline = false\n      draft.error = null\n      break\n    case `socket_${EVENTS.DISCONNECT}`:\n      draft.socket.connected = false\n      draft.offline = true\n      draft.error = null\n      break\n    case `socket_${EVENTS.ONLINE_USERS}`:\n      draft.onlineUsers = action.payload.users.map((user: User) => {\n        user.contrastColor = makeColorReadable('#' + user.color)\n        return user\n      })\n      break\n    case `socket_${EVENTS.MESSAGE}`:\n      const incomingMessage: IncomingMessage = action.payload\n      incomingMessage.timestamp = new Date(incomingMessage.timestamp)\n\n      // delete draft from this user, and if the draft is past messages, stay there\n      let draftIsPastMessage = false\n      let draftIndex = -1\n      for (let i = draft.messages.length - 1; i >= 0; i--) {\n        const eachMessage = draft.messages[i]\n        if (!eachMessage.attributes.draft) {\n          draftIsPastMessage = true\n        }\n        if (\n          eachMessage.attributes.draft &&\n          eachMessage.user.user_id === incomingMessage.user.user_id\n        ) {\n          draftIndex = i\n          break\n        }\n      }\n\n      const isEmpty = incomingMessage.content.trim().length < 1\n\n      if (draftIndex > -1) {\n        if (draftIsPastMessage || !incomingMessage.attributes.draft) {\n          draft.messages.splice(draftIndex, 1)\n        } else if (!isEmpty && incomingMessage.attributes.draft) {\n          draft.messages[draftIndex].content[0] = incomingMessage.content\n          draft.messages[draftIndex].timestamp = new Date(\n            incomingMessage.timestamp\n          )\n          return\n        }\n      }\n\n      if (isEmpty) {\n        return\n      }\n\n      if (incomingMessage.attributes.replyToId) {\n        const messageReply =\n          draft.messages.find(\n            (eachMessage) =>\n              eachMessage.uuid ===\n              incomingMessage.attributes.replyToId\n          ) || null\n        if (messageReply && messageReply.user) {\n          incomingMessage.attributes.replyTo = messageReply\n        }\n      }\n\n      if (!incomingMessage.attributes.draft) {\n        const lastMessage = draft.messages[draft.messages.length - 1]\n\n        if (\n          lastMessage &&\n          lastMessage.user.user_id === incomingMessage.user.user_id &&\n          lastMessage.attributes.private ===\n            incomingMessage.attributes.private &&\n          lastMessage.attributes.replyToId ===\n            incomingMessage.attributes.replyToId\n        ) {\n          // last message was by this same user (and it's the same kind of message)\n          lastMessage.content.push(incomingMessage.content)\n          lastMessage.timestamp = new Date(incomingMessage.timestamp)\n          return\n        }\n      }\n\n      const message: Message = {\n        uuid: incomingMessage.uuid,\n        user: incomingMessage.user,\n        timestamp: incomingMessage.timestamp,\n        attributes: incomingMessage.attributes,\n        content: [incomingMessage.content],\n      }\n\n      draft.messages.push(message)\n\n      if (draft.messages.length > MAX_MESSAGE_HISTORY) {\n        draft.messages.shift()\n      }\n      break\n    case `socket_${EVENTS.HISTORY}`:\n      draft.messages = action.payload.map((eachMessage: Message) => {\n        eachMessage.timestamp = new Date(eachMessage.timestamp)\n        return eachMessage\n      })\n      break\n    case `socket_${EVENTS.STATS}`:\n      draft.stats.messages.push(action.payload.messages)\n      if (draft.stats.messages.length > MAX_STATS_BARS) {\n        draft.stats.messages.shift()\n      }\n\n      draft.stats.users.push(action.payload.users)\n      if (draft.stats.users.length > MAX_STATS_BARS) {\n        draft.stats.users.shift()\n      }\n\n      draft.stats.rooms = action.payload.rooms\n      draft.stats.onlineUsers = action.payload.users\n      draft.stats.totalUsers = action.payload.totalUsers\n      draft.stats.totalMessages = action.payload.totalMessages\n      draft.stats.cpuUsage = Math.round(action.payload.cpuUsage * 100)\n      draft.stats.freeMemory = Math.round(action.payload.freeMemory * 100)\n      draft.stats.uptime = Math.round(action.payload.uptime)\n      draft.stats.timeActive = action.payload.timeActive * 30\n      draft.stats.timeInactive = action.payload.timeInactive * 30\n      draft.stats.sessions = action.payload.sessions\n      break\n    case `socket_${EVENTS.CONTROL}`:\n      Object.keys(action.payload).forEach((key) => {\n        if (typeof draft[key] !== 'undefined') {\n          draft[key] = action.payload[key]\n        }\n      })\n      break\n    case 'chat_focus':\n      draft.chat.focused = action.payload\n      break\n  }\n})\n\nconst systemUser: User = {\n  user_id: 'dotdot',\n  name: 'dotdot',\n  icon: 'cog',\n  color: 'f75f00',\n  isActive: true,\n  hasPassword: true,\n}\n","import React from 'react'\n\nimport reducer from './reducer'\nimport { AppState, AppContext, Action } from './types'\nimport { MAX_STATS_BARS } from 'sections/Admin'\n\nexport const initialState: AppState = {\n  auth: {\n    checked: false,\n    loggedIn: false,\n    user: null,\n  },\n  socket: {\n    connected: false,\n  },\n  draftTimer: 100,\n  onlineUsers: [],\n  messages: [],\n  stats: {\n    messages: new Array(MAX_STATS_BARS).fill(0),\n    users: new Array(MAX_STATS_BARS).fill(0),\n    rooms: [],\n    onlineUsers: 0,\n    totalUsers: 0,\n    totalMessages: 0,\n    cpuUsage: 0,\n    freeMemory: 0,\n    uptime: 0,\n    timeActive: 0,\n    timeInactive: 0,\n    sessions: 1,\n  },\n  offline: false,\n  error: null,\n  chat: {\n    focused: false\n  }\n}\nconst defaultDispatch: React.Dispatch<Action> = () => {\n  console.warn('Using default reducer, check StateProvider')\n  return initialState\n}\nexport const StateContext = React.createContext<AppContext>({\n  state: initialState,\n  dispatch: defaultDispatch,\n})\n\ntype Props = {\n  state?: AppState,\n  children: any\n}\n\nexport const StateProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(reducer, props.state || initialState)\n  // TODO: if value is not \"any\" then typescript has an issue with readonly state values\n  const value: any = { state, dispatch }\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  )\n}\n\nexport const useGlobalState = (): AppContext => React.useContext(StateContext)\nexport default useGlobalState\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  infinite?: boolean\n}\n\nexport default (props: Props) => {\n  const style: any = {}\n  if (props.infinite) {\n    style.animationIterationCount = 'infinite'\n    style.animationDirection = 'alternate'\n  }\n  return (\n    <>\n      <div className={styles.logo}>\n        <div className={styles.blob} style={style}></div>\n        <div className={styles.blob} style={style}></div>\n      </div>\n\n      <svg\n        className={styles.svgFilter}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n      >\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"10\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport LogoAnimation from 'components/LogoAnimation'\n\ntype Props = {\n  text?: string | null\n}\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '45%',\n        left: '50%',\n        transform: 'translateX(-50%) translateY(-50%)',\n      }}\n    >\n      <LogoAnimation infinite />\n    </div>\n  )\n}\n","import React from 'react'\n\ntype Props = {\n  className: string\n  theme: 'dark' | 'light'\n}\n\nexport default ({ className, theme }: Props) => {\n  const lettersColor = theme === 'light' ? '282B2D' : 'F3F3F3'\n\n  return (\n    <svg\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"717\"\n      height=\"139\"\n      viewBox=\"0 0 717 139\"\n    >\n      <defs>\n        <path\n          id=\"main-black-a\"\n          d=\"M29.0928934,85.7089474 C35.276613,85.7089474 40.4425154,84.2681579 44.5906006,81.3865789 C45.0197129,81.0884846 45.4378302,80.7792888 45.8449525,80.4589915 L45.9155783,80.402 L45.9156834,83.98 L59.7426341,83.98 L59.7426341,0.99052624 L43.9568654,0.99052624 L43.9562341,23.746 L43.6237812,23.5352083 C39.952661,21.2683262 35.567712,20.0944052 30.468934,20.0134451 L29.8994655,20.0089473 C23.9461951,20.0089473 18.7610886,21.4305263 14.344146,24.2736842 C9.9272034,27.1168421 6.49927187,31.0069736 4.0603514,35.9440789 C1.62143093,40.8811842 0.401970697,46.5194736 0.401970697,52.8589473 C0.401970697,59.0831579 1.60222683,64.673421 4.00273911,69.6297368 C6.40325138,74.5860526 9.75436651,78.505 14.0560845,81.3865789 C18.3578025,84.2681579 23.3700721,85.7089474 29.0928934,85.7089474 Z M31.6278343,71.7621053 C28.2479131,71.7621053 25.4825229,70.9168421 23.3316639,69.2263158 C21.1808049,67.5357895 19.5868648,65.2593421 18.5498435,62.3969737 C17.5128222,59.5346052 16.9943115,56.3552631 16.9943115,52.8589473 C16.9943115,49.4010526 17.5320263,46.240921 18.6074558,43.3785526 C19.6828853,40.5161842 21.3440398,38.2301315 23.5909193,36.5203947 C25.8377987,34.8106578 28.7088114,33.9557894 32.2039573,33.9557894 C35.468654,33.9557894 38.1092175,34.743421 40.1256478,36.3186842 C42.1420781,37.8939473 43.6111916,40.1031579 44.5329883,42.9463158 C45.454785,45.7894736 45.9156834,49.0936842 45.9156834,52.8589473 C45.9156834,56.6242105 45.454785,59.928421 44.5329883,62.7715789 C43.6111916,65.6147368 42.1036699,67.8239474 40.0104232,69.3992105 C37.9171765,70.9744737 35.1229802,71.7621053 31.6278343,71.7621053 Z M102.374154,85.7089474 C108.596281,85.7089474 114.079051,84.3161842 118.822464,81.5306579 C123.565876,78.7451316 127.272267,74.8838158 129.941637,69.9467105 C132.611006,65.0096052 133.945691,59.3136842 133.945691,52.8589473 C133.945691,46.4426315 132.620608,40.765921 129.970443,35.8288157 C127.320277,30.8917105 123.623488,27.0207894 118.880076,24.2160526 C114.136664,21.4113157 108.63469,20.0089473 102.374154,20.0089473 C96.2288422,20.0089473 90.7940824,21.3921052 86.0698743,24.158421 C81.3456661,26.9247368 77.6392752,30.7764473 74.9507014,35.7135526 C72.2621277,40.6506579 70.9178408,46.3657894 70.9178408,52.8589473 C70.9178408,59.2752631 72.2333215,64.9519737 74.864283,69.8890789 C77.4952444,74.8261842 81.1728292,78.6971053 85.8970374,81.5018421 C90.6212455,84.3065789 96.1136176,85.7089474 102.374154,85.7089474 Z M102.374154,71.0705263 C97.4963127,71.0705263 93.7995238,69.4280263 91.2837869,66.1430263 C88.7680501,62.8580263 87.5101816,58.43 87.5101816,52.8589473 C87.5101816,49.2473684 88.0382943,46.0776315 89.0945197,43.3497368 C90.1507451,40.6218421 91.7734914,38.4894736 93.9627586,36.9526315 C96.1520258,35.4157894 98.9558242,34.6473684 102.374154,34.6473684 C107.328811,34.6473684 111.064008,36.2994736 113.579745,39.6036842 C116.095482,42.9078947 117.35335,47.3263158 117.35335,52.8589473 C117.35335,58.1994737 116.114686,62.5698684 113.637357,65.9701316 C111.160029,69.3703947 107.405627,71.0705263 102.374154,71.0705263 Z M170.807431,85.0461842 C174.936312,85.1422368 179.151612,84.7868421 183.45333,83.98 L183.45333,83.98 L183.45333,70.9552631 C179.766143,71.4547368 176.405426,71.608421 173.371178,71.4163158 C170.336931,71.2242105 168.12846,70.0331579 166.745765,67.8431579 C166.016009,66.6905263 165.622325,65.1440789 165.564713,63.2038158 C165.5071,61.2635526 165.478294,59.0831579 165.478294,56.6626316 L165.478294,56.6626316 L165.477558,33.841 L183.45333,33.8405263 L183.45333,21.7378947 L165.477558,21.738 L165.478294,4.44842098 L149.80775,4.44842098 L149.806803,21.738 L139.207088,21.7378947 L139.207088,33.8405263 L149.806803,33.841 L149.80775,57.5847368 C149.80775,61.0248988 149.840477,64.1295017 149.90593,66.8985456 L149.922975,67.5838158 C149.999791,70.5230263 150.806363,73.4142105 152.342691,76.2573684 C154.032652,79.2926316 156.500378,81.4922368 159.745871,82.8561842 C162.991363,84.2201316 166.67855,84.9501316 170.807431,85.0461842 Z M222.556557,85.7089474 C228.740277,85.7089474 233.906179,84.2681579 238.054264,81.3865789 C238.483376,81.0884846 238.901494,80.7792888 239.308616,80.4589915 L239.378821,80.402 L239.379347,83.98 L253.206298,83.98 L253.206298,0.99052624 L237.420529,0.99052624 L237.420476,23.747 L237.087445,23.5352083 C233.416325,21.2683262 229.031375,20.0944052 223.932597,20.0134451 L223.363129,20.0089473 C217.409859,20.0089473 212.224752,21.4305263 207.807809,24.2736842 C203.390867,27.1168421 199.962935,31.0069736 197.524015,35.9440789 C195.085094,40.8811842 193.865634,46.5194736 193.865634,52.8589473 C193.865634,59.0831579 195.06589,64.673421 197.466403,69.6297368 C199.866915,74.5860526 203.21803,78.505 207.519748,81.3865789 C211.821466,84.2681579 216.833736,85.7089474 222.556557,85.7089474 Z M225.091498,71.7621053 C221.711577,71.7621053 218.946186,70.9168421 216.795327,69.2263158 C214.644468,67.5357895 213.050528,65.2593421 212.013507,62.3969737 C210.976486,59.5346052 210.457975,56.3552631 210.457975,52.8589473 C210.457975,49.4010526 210.99569,46.240921 212.071119,43.3785526 C213.146549,40.5161842 214.807703,38.2301315 217.054583,36.5203947 C219.301462,34.8106578 222.172475,33.9557894 225.667621,33.9557894 C228.932317,33.9557894 231.572881,34.743421 233.589311,36.3186842 C235.605742,37.8939473 237.074855,40.1031579 237.996652,42.9463158 C238.918449,45.7894736 239.379347,49.0936842 239.379347,52.8589473 C239.379347,56.6242105 238.918449,59.928421 237.996652,62.7715789 C237.074855,65.6147368 235.567333,67.8239474 233.474087,69.3992105 C231.38084,70.9744737 228.586644,71.7621053 225.091498,71.7621053 Z M295.837817,85.7089474 C302.059945,85.7089474 307.542715,84.3161842 312.286127,81.5306579 C317.029539,78.7451316 320.73593,74.8838158 323.4053,69.9467105 C326.07467,65.0096052 327.409355,59.3136842 327.409355,52.8589473 C327.409355,46.4426315 326.084272,40.765921 323.434106,35.8288157 C320.783941,30.8917105 317.087152,27.0207894 312.34374,24.2160526 C307.600327,21.4113157 302.098353,20.0089473 295.837817,20.0089473 C289.692506,20.0089473 284.257746,21.3921052 279.533538,24.158421 C274.80933,26.9247368 271.102939,30.7764473 268.414365,35.7135526 C265.725791,40.6506579 264.381504,46.3657894 264.381504,52.8589473 C264.381504,59.2752631 265.696985,64.9519737 268.327947,69.8890789 C270.958908,74.8261842 274.636493,78.6971053 279.360701,81.5018421 C284.084909,84.3065789 289.577281,85.7089474 295.837817,85.7089474 Z M295.837817,71.0705263 C290.959976,71.0705263 287.263187,69.4280263 284.74745,66.1430263 C282.231714,62.8580263 280.973845,58.43 280.973845,52.8589473 C280.973845,49.2473684 281.501958,46.0776315 282.558183,43.3497368 C283.614409,40.6218421 285.237155,38.4894736 287.426422,36.9526315 C289.615689,35.4157894 292.419488,34.6473684 295.837817,34.6473684 C300.792474,34.6473684 304.527672,36.2994736 307.043408,39.6036842 C309.559145,42.9078947 310.817014,47.3263158 310.817014,52.8589473 C310.817014,58.1994737 309.578349,62.5698684 307.101021,65.9701316 C304.623692,69.3703947 300.869291,71.0705263 295.837817,71.0705263 Z M364.271095,85.0461842 C368.399976,85.1422368 372.615276,84.7868421 376.916994,83.98 L376.916994,83.98 L376.916994,70.9552631 C373.229807,71.4547368 369.86909,71.608421 366.834842,71.4163158 C363.800594,71.2242105 361.592123,70.0331579 360.209428,67.8431579 C359.479672,66.6905263 359.085988,65.1440789 359.028376,63.2038158 C358.970764,61.2635526 358.941958,59.0831579 358.941958,56.6626316 L358.941958,56.6626316 L358.9418,33.841 L376.916994,33.8405263 L376.916994,21.7378947 L358.9418,21.738 L358.941958,4.44842098 L343.271414,4.44842098 L343.271045,21.738 L332.670751,21.7378947 L332.670751,33.8405263 L343.271045,33.841 L343.271414,57.5847368 C343.271414,61.0248988 343.30414,64.1295017 343.369593,66.8985456 L343.386638,67.5838158 C343.463455,70.5230263 344.270027,73.4142105 345.806354,76.2573684 C347.496315,79.2926316 349.964042,81.4922368 353.209534,82.8561842 C356.455027,84.2201316 360.142214,84.9501316 364.271095,85.0461842 Z\"\n        />\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(339.337 25.02)\">\n          <mask id=\"main-black-b\" fill=\"#fff\">\n            <use xlinkHref=\"#main-black-a\" />\n          </mask>\n          <use\n            fill=\"#FFF\"\n            fillRule=\"nonzero\"\n            opacity=\".9\"\n            xlinkHref=\"#main-black-a\"\n          />\n          <g fill={`#${lettersColor}`} mask=\"url(#main-black-b)\">\n            <rect\n              width=\"377.177\"\n              height=\"86.18\"\n              transform=\"translate(0 -.158)\"\n            />\n          </g>\n        </g>\n        <g transform=\"translate(0 1)\">\n          <ellipse\n            cx=\"217.427\"\n            cy=\"69.5\"\n            fill=\"#FF5151\"\n            rx=\"67.477\"\n            ry=\"67.5\"\n          />\n          <ellipse cx=\"67.477\" cy=\"67.5\" fill=\"#4DCBC3\" rx=\"67.477\" ry=\"67.5\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport default ({ children }: Props) => {\n  return <div className={styles.wrapper}>{children}</div>\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport useGlobalState from 'store/state'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  onClick: () => void\n  small?: boolean\n}\n\nexport default ({ onClick, small }: Props) => {\n  const { state } = useGlobalState()\n\n  if (!state.auth.user) return <></>\n\n  const isLocked = state.auth.user && state.auth.user.hasPassword\n  const icon: IconProp = isLocked ? 'lock' : 'lock-open'\n\n  return (\n    <button className={styles.badge} onClick={onClick}>\n      <span\n        className={ styles.dot }\n        style={{ color: `#${state.auth.user.color}` }}\n      >\n        <FontAwesomeIcon icon={ state.auth.user.icon || 'circle' } />\n      </span>\n      <span className={styles.name}>{state.auth.user.name}</span>\n      <FontAwesomeIcon\n        className={classNames(styles.lock, {\n          [styles.closed]: isLocked,\n        })}\n        icon={icon}\n      />\n    </button>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\n\nimport styles from './index.module.scss'\n\nexport default () => (\n  <Link\n    className={styles.badge}\n    to=\"/admin\"\n    title=\"Monitoring\"\n    style={{ marginLeft: '1em' }}\n  >\n    <FontAwesomeIcon className={styles.icon} icon=\"shield-alt\" />\n  </Link>\n)\n","import { useEffect, useState } from 'react'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { API_URL } from '../constants'\nimport useGlobalState from 'store/state'\n\nexport type FetchMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\nexport const CSRF_HEADER = 'x-csrf-token'\nlet csrfToken = ''\n\nexport type FetchError = {\n  status: number\n  message: string\n  errors: string[]\n  data?: any\n}\n\ntype FetchReturn<T> = [boolean, T | null, FetchError | null]\n\naxios.defaults.withCredentials = true\n\nfunction useFetch<T>(\n  path: string,\n  method: FetchMethod,\n  body?: any\n): FetchReturn<T> {\n  const { dispatch } = useGlobalState()\n  const [error, setError] = useState<FetchError | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [response, setResponse] = useState<T | null>(null)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const data = await fetchResource(path, method, body)\n        setResponse(data)\n      } catch (error) {\n        if (error.message === 'offline') {\n          dispatch({\n            type: 'offline',\n            payload: null\n          })\n        }\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    sendRequest()\n  }, [path, method, body, dispatch])\n\n  return [loading, response, error]\n}\n\nexport const fetchResource = async (\n  path: string,\n  method: FetchMethod,\n  body?: any\n) => {\n  if (!path) {\n    throw new Error(`'url' is required for fetching data`)\n  }\n\n  const url = `${API_URL}${path}`\n  const options: AxiosRequestConfig = {\n    url,\n    method,\n    data: body,\n    timeout: 6000,\n    withCredentials: true,\n    xsrfHeaderName: CSRF_HEADER,\n    headers: {},\n  }\n\n  if (csrfToken.length > 0) {\n    options.headers[CSRF_HEADER] = csrfToken\n  }\n\n  try {\n    const response = await axios(options)\n\n    if (response.headers[CSRF_HEADER]) {\n      csrfToken = response.headers[CSRF_HEADER]\n    }\n\n    return await response.data\n  } catch (error) {\n    if (error.response) {\n      console.warn(`useFetch error on ${method} ${path}`, error.response)\n      const returnError: FetchError = {\n        status: error.response.status,\n        message: parseAxiosError(error),\n        errors: parseErrorList(error),\n        data: error.response.data\n      }\n      throw returnError\n    }\n\n    console.warn(`useFetch network error on ${method} ${path}`, error)\n    const returnError: FetchError = {\n      status: 500,\n      message: 'offline',\n      errors: [error.message],\n    }\n    throw returnError\n  }\n}\n\nfunction parseAxiosError(error: AxiosError): string {\n  if (!error.response || !error.response.data) {\n    return error.message || 'An error occurred'\n  }\n\n  return parseErrorList(error).join('. ')\n}\n\nfunction parseErrorList(error: AxiosError): string[] {\n  const defaultError = 'An error occurred'\n  if (!error.response || !error.response.data) {\n    return [error.message || defaultError]\n  }\n\n  return parseErrors(\n    defaultError,\n    error.response.data,\n    error.response.data.errors,\n    error.response.data.error\n  )\n}\n\nfunction parseErrors(defaultError: string, ...errors: any[]): string[] {\n  for (let i = 0; i < errors.length; i++) {\n    const error = errors[i]\n    if (Array.isArray(error)) return error\n    if (typeof error === 'string') return [error]\n  }\n\n  return [defaultError]\n}\n\nexport default useFetch\n","import React, { useState } from 'react'\nimport { Button, Modal, Form } from 'react-bootstrap'\nimport classNames from 'classnames'\n\nimport { fetchResource } from 'util/fetch'\nimport { API_URL } from '../../../../constants'\nimport useGlobalState from 'store/state'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  show: boolean\n  onHide: () => void\n}\n\nexport default ({ show, onHide }: Props) => {\n  const { state, dispatch } = useGlobalState()\n\n  const [validated, setValidated] = useState<boolean>(false)\n  const [password, setPassword] = useState<string>('')\n  const [repeatPassword, setRepeatPassword] = useState<string>('')\n\n  let title = 'Claim Username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    title = 'Update Password'\n  }\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    setValidated(true)\n\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      return\n    }\n\n    const body = {\n      password,\n      repeatPassword,\n    }\n\n    fetchResource('/password', 'POST', body)\n      .then(() => {\n        dispatch({\n          type: 'user_password',\n          payload: true,\n        })\n\n        onHide()\n        setValidated(false)\n        setPassword('')\n        setRepeatPassword('')\n      })\n      .catch((reason) => {\n        dispatch({\n          type: 'error',\n          payload: reason.errors.join(', '),\n        })\n      })\n  }\n\n  return (\n    <Modal show={show} onHide={onHide}>\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Group controlId=\"pwd.new\">\n            <Form.Control\n              as=\"input\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              placeholder=\"Password...\"\n              autoFocus\n              required\n              minLength={6}\n              onChange={(event) => {\n                setPassword(event.currentTarget.value)\n              }}\n              value={password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              The password is too short. Minimum length is 6 characters.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"pwd.new\">\n            <Form.Control\n              as=\"input\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              placeholder=\"Repeat Password...\"\n              required\n              minLength={6}\n              pattern={password}\n              onChange={(event) => {\n                setRepeatPassword(event.currentTarget.value)\n              }}\n              value={repeatPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              The passwords don't match!\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer className={styles.footer}>\n          <a\n            href={`${API_URL}/logout`}\n            className={classNames(styles.left, 'text-danger')}\n          >\n            Logout\n          </a>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Set password\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport useGlobalState from 'store/state'\n\nimport UserBadge from './UserBadge'\nimport AdminBadge from './AdminBadge'\nimport PasswordModal from './PasswordModal'\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nexport default ({ children }: Props) => {\n  const { state } = useGlobalState()\n\n  const [isOpen, setModalOpen] = useState<boolean>(false)\n\n  const handleClick = () => setModalOpen(true)\n  const handleClose = () => setModalOpen(false)\n\n  let tooltipText = 'Set a password to keep your username'\n\n  if (state.auth.user && state.auth.user.hasPassword) {\n    tooltipText = 'Change your password'\n  }\n\n  return (\n    <>\n      {state.auth.user && state.auth.user.isAdmin && <AdminBadge />}\n      <OverlayTrigger\n        placement=\"bottom\"\n        delay={500}\n        overlay={<Tooltip id=\"passwordLock\">{tooltipText}</Tooltip>}\n      >\n        <UserBadge onClick={handleClick} />\n      </OverlayTrigger>\n\n      <PasswordModal show={isOpen} onHide={handleClose} />\n    </>\n  )\n}\n","import React from 'react'\nimport { IconProp, IconName } from '@fortawesome/fontawesome-svg-core'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport useGlobalState from 'store/state'\nimport { User } from 'store/types'\n\ntype Props = {\n  user: User\n}\n\nexport default ({ user }: Props) => {\n  const { state } = useGlobalState()\n\n  const isCurrentUser =\n    state.auth.user && user.user_id === state.auth.user.user_id\n\n  let iconName: IconName = 'circle'\n  let inactive = ''\n\n  // Set icon\n  if (user.icon) {\n    iconName = user.icon\n  } else if (isCurrentUser) {\n    iconName = 'dot-circle'\n  }\n\n  // Set status\n  if (!user.isActive) {\n    iconName = 'meh'\n    inactive = ' (away)'\n  }\n\n  // TODO: Do we need this?\n  let icon: IconProp = iconName\n  if (isCurrentUser) {\n    icon = ['far', iconName]\n  }\n\n  const userColor = user.contrastColor || `#${user.color}`\n\n  return (\n    <OverlayTrigger\n      key={user.user_id}\n      placement=\"bottom\"\n      overlay={\n        <Tooltip id={`user-${user.user_id}`}>\n          @{user.name}\n          {inactive}\n        </Tooltip>\n      }\n    >\n      <FontAwesomeIcon style={{ color: userColor }} icon={icon} />\n    </OverlayTrigger>\n  )\n}\n","import React from 'react'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport User from './User'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  return (\n    <div className={styles.onlineUsers}>\n      <span className={styles.count}>{state.onlineUsers.length}</span>\n\n      {state.onlineUsers.map((user) => (\n        <User user={user} key={user.user_id} />\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Logo from 'components/Logo'\nimport Wrapper from '../Wrapper'\n\nimport styles from './index.module.scss'\nimport PasswordLock from '../Session'\nimport OnlineUsers from '../OnlineUsers'\n\ntype Props = {\n  scrollingWhileFocused?: boolean\n}\n\nexport default ({ scrollingWhileFocused }: Props) => {\n  const top = scrollingWhileFocused ? window.pageYOffset + 'px' : 0\n  const position = scrollingWhileFocused ? 'absolute' : 'fixed'\n  const theme = window.matchMedia('(prefers-color-scheme: light)').matches\n    ? 'light'\n    : 'dark'\n\n  return (\n    <header className={styles.header} style={{ position, top }}>\n      <Wrapper>\n        <Logo className={styles.logo} theme={theme} />\n\n        <div className={styles.online}>\n          <OnlineUsers />\n        </div>\n\n        <div className={styles.badge}>\n          <PasswordLock />\n        </div>\n      </Wrapper>\n    </header>\n  )\n}\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\nexport default () => {\n  return (\n    <div>\n      <h4>Welcome to dotdot</h4>\n      <p>\n        This is a place where you can chat with people whenever you want :)\n        <br />\n        We don't save any messages, so when the last person in a chat\n        disconnects, the chat history is lost.\n      </p>\n      <p>Inactive user accounts are deleted after 2 weeks without chatting.</p>\n\n      <h6>Keep your User</h6>\n      <p>\n        You can set a password to protect your username from being deleted and\n        used by someone else. Simply click on the lock in the top right corner.\n      </p>\n\n      <h6>Private Messages</h6>\n      <p>\n        You can send anyone a private message simply by starting your message\n        with @ and their name. You'll see the text box change to orange and a\n        lock icon appear.\n      </p>\n      <p>\n        Only you and the person you send the message to can see them. If they\n        are offline they won't receive the message\n      </p>\n\n      <h5>Commands</h5>\n      <p>There are some commands that you can use:</p>\n      <Table size=\"sm\" variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Command</th>\n            <th>Example</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <code>/help</code>\n            </td>\n            <td>\n              <code>/help</code>\n            </td>\n            <td>It shows this message</td>\n          </tr>\n          <tr>\n            <td>\n              <code>/set color</code>\n            </td>\n            <td>\n              <code>/set color eb0000</code>\n            </td>\n            <td>\n              Change your color, the color needs to be a hex representation\n              (sorry if this sounds confusing, soon there will be an easier way\n              to do this)\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>/set icon</code>\n            </td>\n            <td>\n              <code>/set icon smile</code>\n            </td>\n            <td>\n              Change your icon, pick any of the ones from{' '}\n              <a\n                href=\"https://fontawesome.com/icons?d=gallery&s=regular&c=emoji&m=free\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                this list\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>/list users</code>\n            </td>\n            <td>\n              <code>/list users</code>\n            </td>\n            <td>Get a list of the users who are currently online</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport { fetchResource } from 'util/fetch'\nimport { useImmer } from 'use-immer'\n\nimport styles from './index.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\ntype Props = {\n  url: string\n}\n\ntype State = {\n  loading: boolean\n  url: string\n  result: {\n    title: string\n    description: string\n    favicon: string | null\n    embed: string | null\n    provider: string | null\n    type: string | null\n    author_name: string | null\n    author_url: string | null\n    images: [{ url: string }] | null\n  } | null\n}\n\nexport default ({ url }: Props) => {\n  const [state, setState] = useImmer<State>({\n    loading: false,\n    url,\n    result: null,\n  })\n\n  useEffect(() => {\n    setState((draft) => {\n      draft.loading = true\n    })\n    fetchResource('/unfurl', 'POST', {\n      url,\n    })\n      .then((data: any) => {\n        setState((draft) => {\n          draft.loading = false\n          draft.result = {\n            title: data.title.replace(/(\\r\\n|\\n|\\r)/gm, ''),\n            description: data.description,\n            favicon: data.favicon,\n            embed: null,\n            provider: null,\n            type: null,\n            author_name: null,\n            author_url: null,\n            images: null,\n          }\n\n          if (data.oEmbed) {\n            draft.result.type = data.oEmbed.type\n            draft.result.provider = data.oEmbed.provider_name\n            draft.result.author_name = data.oEmbed.author_name\n            draft.result.author_url = data.oEmbed.author_url\n          }\n\n          if (data.twitter_card) {\n            draft.url = data.twitter_card.url\n\n            if (\n              data.twitter_card.players &&\n              data.twitter_card.players.length > 0\n            ) {\n              draft.result.embed = data.twitter_card.players[0].url\n\n              // Fallback to site name for type if not video\n              if (draft.result.type !== 'video') {\n                draft.result.type = data.twitter_card.site\n              }\n            }\n          }\n\n          if (data.open_graph) {\n            draft.url = data.open_graph.url\n\n            // Fallback to opengraph type if all fails\n            if (!draft.result.type) {\n              draft.result.type = data.open_graph.type\n            }\n\n            draft.result.images = data.open_graph.images\n          }\n        })\n      })\n      .catch((reason) => {\n        setState((draft) => {\n          draft.loading = true\n          draft.result = null\n        })\n      })\n  }, [url, setState])\n\n  if (state.loading || !state.result) {\n    return null\n  }\n\n  let content = null\n\n  const sizes = {\n    video: {\n      aspect: '16by9',\n      maxWidth: '640px',\n    },\n    '@spotify': {\n      aspect: '1by1',\n      maxWidth: '320px',\n    },\n    SoundCloud: {\n      aspect: null,\n      maxWidth: 'none',\n    },\n  }\n\n  switch (state.result.type) {\n    case 'video':\n    case '@spotify':\n    case 'SoundCloud':\n      if (!state.result.embed) {\n        return null\n      }\n      content = (\n        <div>\n          <div\n            className={\n              sizes[state.result.type].aspect\n                ? `embed-responsive embed-responsive-${\n                    sizes[state.result.type].aspect\n                  }`\n                : undefined\n            }\n            style={{ maxWidth: sizes[state.result.type].maxWidth }}\n          >\n            <iframe\n              className=\"embed-responsive-item\"\n              src={state.result.embed}\n              title={state.result.title}\n              frameBorder=\"0\"\n              allowFullScreen\n              allowTransparency\n              allow=\"encrypted-media\"\n              width=\"100%\"\n              height=\"150\"\n            />\n          </div>\n          <h4>\n            <a\n              href={url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title={state.result.description}\n              className={styles.title}\n            >\n              {state.result.favicon && (\n                <img\n                  className={styles.icon}\n                  src={state.result.favicon}\n                  alt={state.result.title}\n                />\n              )}\n              {state.result.title} <FontAwesomeIcon icon=\"external-link-alt\" />\n            </a>\n            <div className={styles.description}>{state.result.description}</div>\n            {state.result.author_url && state.result.author_name && (\n              <div className={styles.author}>\n                By{' '}\n                <a href={state.result.author_url}>\n                  @{state.result.author_name}\n                </a>\n              </div>\n            )}\n          </h4>\n        </div>\n      )\n      break\n    default:\n      content = (\n        <>\n          <a\n            href={url}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            title={state.result.description}\n            className={styles.title}\n          >\n            {state.result.favicon && (\n              <img\n                className={styles.icon}\n                src={state.result.favicon}\n                alt={state.result.title}\n              />\n            )}\n            {state.result.title}{' '}\n            <FontAwesomeIcon icon=\"external-link-alt\" />\n          </a>\n          {state.result.description && (\n            <div className={styles.description}>{state.result.description}</div>\n          )}\n\n          <div className={styles.images}>\n            {state.result.images?.map(image => (\n              <img alt={ state.result?.title || image.url } src={image.url} />\n            ))}\n          </div>\n        </>\n      )\n  }\n\n  if (!content) {\n    return null\n  }\n\n  return <blockquote className={styles.embed}>{content}</blockquote>\n}\n","import React, { useMemo } from 'react'\nimport reactStringReplace from 'react-string-replace'\nimport ReactMarkdown from 'react-markdown'\n\nimport { User } from 'store/types'\nimport HelpMessage from '../HelpMessage'\nimport styles from './index.module.scss'\nimport Embed from './Embed'\n\ntype Props = {\n  content: string\n  isSystem: boolean\n  onlineUsers: User[]\n}\n\nconst USER_REGEX = new RegExp('@([A-Za-z0-9]+(?:[_][A-Za-z0-9]+)*_?)', 'gmi')\nconst URL_REGEX = new RegExp(\n  /((?:ftp|http|https):\\/\\/(?:\\w+:{0,1}\\w*@)?(?:\\S+)(?::[0-9]+)?(?:\\/|\\/(?:[\\w#!:.?+=&%@!\\-/]))?)/,\n  'gmi'\n)\n\nexport default ({ content, isSystem, onlineUsers }: Props) => {\n  let messageContent: React.ReactNodeArray | JSX.Element | string = content\n  const urls: string[] = []\n\n  if (isSystem && content === '/help') {\n    messageContent = <HelpMessage />\n  } else {\n    // find urls for embeds\n    const matches = messageContent.match(URL_REGEX)\n    if (matches) {\n      matches.forEach(url => {\n        if (!urls.includes(url)) {\n          urls.push(url)\n        }\n      })\n    }\n\n    // replace mentions with colored version\n    messageContent = reactStringReplace(\n      messageContent,\n      USER_REGEX,\n      (username, index) => {\n        const style: React.CSSProperties = {}\n        const user = onlineUsers.find(\n          eachUser => eachUser.name === username\n        )\n        if (user) {\n          style.color = user.contrastColor || '#' + user.color\n        }\n        return (\n          <span key={index} className={styles.mention} style={style}>\n            @{username}\n          </span>\n        )\n      }\n    ).map((content, index) => { // parse markdown\n      if (typeof content !== 'string') {\n        return content\n      }\n      return (\n        <ReactMarkdown\n          key={ index }\n          source={ content }\n          unwrapDisallowed={ true }\n          allowedTypes={ ['text', 'link', 'blockquote', 'code', 'strong', 'emphasis', 'delete', 'image', 'inlineCode'] }\n        />\n      )\n    })\n  }\n\n  const embeds = useMemo(() => {\n    return urls.map(url => (\n      <Embed\n        key={ url }\n        url={ url }\n      />\n    ))\n  }, [urls])\n\n  return (\n    <div className={ styles.messageContent }>\n      { messageContent }\n      { embeds }\n    </div>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { IconProp, IconName } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\nimport { User } from 'store/types'\nimport styles from '../index.module.scss'\n\ntype Props = {\n  user: User\n  timestamp: Date\n  isDraft: boolean\n  isPrivate: boolean\n  isOnline: boolean\n  isCurrentUser: boolean\n}\n\nconst Heading = ({ user, timestamp, isDraft, isPrivate, isOnline, isCurrentUser }: Props) => {\n  const userContrastColor = user.contrastColor || `#${user.color}`\n  const isSystem = user.user_id === 'dotdot'\n\n  let iconName: IconName = 'circle'\n  if (user.icon) {\n    iconName = user.icon\n  } else if (isCurrentUser) {\n    iconName = 'dot-circle'\n  }\n\n  // special icons\n  if (isSystem) {\n    iconName = 'cog'\n  } else if (isDraft) {\n    iconName = 'circle-notch'\n  } else if (isPrivate) {\n    iconName = 'lock'\n  } else if (!isOnline) {\n    iconName = 'meh'\n  }\n\n  let icon: IconProp = iconName\n  if (isCurrentUser) {\n    icon = ['far', iconName]\n  }\n\n  return (\n    <>\n      <div\n        className={classNames(styles.icon, {\n          [styles.private]: isPrivate,\n        })}\n        style={{ color: userContrastColor, background: userContrastColor }}\n      >\n        {isPrivate && (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={\n              <Tooltip id={`user-${user.user_id}`}>\n                Private message from <b>@{user.name}</b>\n                <br />\n                Only you can see this.\n              </Tooltip>\n            }\n          >\n            <FontAwesomeIcon icon={icon} />\n          </OverlayTrigger>\n        )}\n        {!isPrivate && (\n          <FontAwesomeIcon icon={icon} spin={ isDraft } />\n        )}\n      </div>\n\n      <div className={classNames(styles.user)}>\n        <span style={{ color: userContrastColor }}>{user.name}</span>\n        {!isDraft && (\n          <span className={classNames(styles.timestamp)}>\n            {timestamp.toLocaleTimeString([], {\n              hour: 'numeric',\n              minute: '2-digit',\n            })}\n          </span>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Heading\n","import React from 'react'\n\nimport { Message } from 'store/types'\nimport styles from '../index.module.scss'\nimport MessageComponent from '..'\n\ntype Props = {\n  replyTo: Message | null | undefined\n  replyToId: string | null | undefined\n}\n\nconst Reply = ({ replyTo, replyToId }: Props) => {\n\n  if (!replyTo || !replyTo.user) {\n    return null\n  }\n\n  return (\n    <a\n      href={'#message-' + replyToId}\n      className={styles.replyBox}\n      title=\"Go to original message\"\n      style={{\n        borderLeftColor: `#${replyTo.user.color}`,\n      }}\n    >\n      <MessageComponent\n        reply\n        message={replyTo}\n      />\n    </a>\n  )\n}\n\nexport default Reply\n","import React, { useEffect } from 'react'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'react-bootstrap'\n\nimport { Message } from 'store/types'\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\nimport MessageContent from './MessageContent'\nimport Heading from './Heading'\nimport Reply from './Reply'\n\ntype Props = {\n  reply?: boolean\n  message: Message\n  onClick?: (messageId: string) => void\n}\n\nconst MessageComponent = React.memo(({ message, onClick, reply }: Props) => {\n  const { state } = useGlobalState()\n\n  useEffect(() => {\n    console.log('first render: messageComponent');\n  }, [])\n\n  // User data comes from online users if available\n  const userData =\n    state.onlineUsers.find((user) => user.user_id === message.user.user_id) ||\n    message.user\n\n  const isSystem = userData.user_id === 'dotdot'\n  const isUserOnline =\n    isSystem ||\n    state.onlineUsers.findIndex((user) => user.user_id === userData.user_id) >\n      -1\n\n  const isReplyAllowed =\n    !reply && onClick && !isSystem && !message.attributes.draft\n\n  const onReplyClick = () => {\n    if (!isReplyAllowed || !onClick) {\n      return\n    }\n    onClick(message.uuid)\n  }\n\n  let messageBody\n  if (reply) {\n    messageBody = message.content.join('. ')\n  } else {\n    messageBody = message.content.map(content => (\n      <MessageContent\n        content={content}\n        isSystem={isSystem}\n        onlineUsers={state.onlineUsers}\n        key={ content }\n      />\n    ))\n  }\n\n  return (\n    <div\n      id={'message-' + message.uuid}\n      className={classNames(styles.message, {\n        [styles.reply]: reply,\n        [styles.system]: isSystem,\n        [styles.offline]: !isUserOnline,\n        [styles.inactive]: !userData.isActive,\n        [styles.draft]: message.attributes.draft,\n        [styles.private]: message.attributes.private,\n      })}\n    >\n      {isReplyAllowed && (\n        <div className={styles.replyButton}>\n          <Button\n            variant=\"link\"\n            onClick={onReplyClick}\n            title=\"Reply to this message\"\n          >\n            <FontAwesomeIcon icon=\"reply\" /> Reply\n          </Button>\n        </div>\n      )}\n\n      <Heading\n        user={ userData }\n        timestamp={ message.timestamp }\n        isOnline={ isUserOnline }\n        isDraft={ message.attributes.draft }\n        isPrivate={ message.attributes.private }\n        isCurrentUser={ userData.user_id === state.auth.user?.user_id }\n      />\n\n      { !reply && (\n        <Reply\n          replyTo={ message.attributes.replyTo }\n          replyToId={ message.attributes.replyToId }\n        />\n      ) }\n\n      <div className={classNames(styles.body)}>\n        {messageBody}\n      </div>\n    </div>\n  )\n})\n\nexport default MessageComponent\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\n\nconst SCROLL_THRESHOLD = 200\nconst SCROLL_DEBOUNCE_DELAY = 150\n\ntype Props = {\n  onScrollChanged?: (isAtBottom: boolean) => void,\n  boxRef: React.RefObject<HTMLElement | null>,\n  threshold?: number,\n  children?: any,\n}\n\nexport default ({ boxRef, onScrollChanged, threshold, children }: Props) => {\n  const [ scrollTop, setScrollTop ] = useState<number>(-1);\n  const [ height, setHeight ] = useState<number>(0);\n  const scrollDebounce = useRef<any>(null)\n\n  const onScrollDebounced = useCallback((isAtBottom: boolean) => {\n    clearTimeout(scrollDebounce.current)\n\n    if (onScrollChanged) {\n      scrollDebounce.current = setTimeout(() => {\n        onScrollChanged(isAtBottom)\n      }, SCROLL_DEBOUNCE_DELAY)\n    }\n  }, [onScrollChanged])\n\n  const scrollToBottom = useCallback(() => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    const scrollHeight = boxRef.current.scrollHeight - boxRef.current.offsetHeight\n    boxRef.current.scrollTop = scrollHeight\n\n    setScrollTop(boxRef.current.scrollTop)\n    onScrollDebounced(true)\n  }, [boxRef, onScrollDebounced, setScrollTop])\n\n  const updateScrollState = useCallback((shouldScroll: boolean) => () => {\n    if (!boxRef || !boxRef.current) {\n      return\n    }\n\n    if (scrollTop > 0) {\n      const customThreshold = threshold || SCROLL_THRESHOLD\n      if (scrollTop > 0 && Math.abs(boxRef.current.scrollTop - scrollTop) > customThreshold) {\n         // we are not at the bottom of the page, so we won't do anything\n        onScrollDebounced(false)\n        return\n      } else {\n        onScrollDebounced(true)\n      }\n    }\n\n    if (shouldScroll) {\n      scrollToBottom()\n    }\n  }, [boxRef, onScrollDebounced, threshold, scrollToBottom, scrollTop])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", scrollToBottom, true);\n\n    if (boxRef && boxRef.current) {\n      boxRef.current.addEventListener('scroll', updateScrollState(false), true)\n    }\n\n    // cleanup\n    return () => {\n      window.removeEventListener(\"resize\", scrollToBottom, true);\n    }\n  }, [boxRef, scrollToBottom, updateScrollState])\n\n  useEffect(() => {\n    // when the children changes, recalculate\n    if (!boxRef.current) {\n      return;\n    }\n    const newHeight = boxRef.current.scrollHeight;\n    if (newHeight !== height) {\n      setHeight(newHeight)\n      updateScrollState(true)()\n    }\n  }, [boxRef, height, updateScrollState, children])\n\n  return (\n    <>\n      { children }\n    </>\n  )\n}\n","import React, { useEffect, useRef, useCallback } from 'react'\nimport { Container, Button } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\n\nimport MessageComponent from './Message'\n\nimport styles from './index.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ScrollBox from './ScrollBox'\nimport useGlobalState from 'store/state'\n\ntype State = {\n  scrollAtBottom: boolean,\n  unseenMessages: boolean, // are there new messages below the scroll point?\n}\n\ntype Props = {\n  onMessageClick: (messageId: string) => void,\n}\n\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  const [localState, setLocalState] = useImmer<State>({\n    scrollAtBottom: true,\n    unseenMessages: false,\n  })\n\n  const chatAreaRef = useRef<HTMLDivElement>(null)\n\n  const onScrollChanged = useCallback((isAtBottom: boolean) => {\n    setLocalState(draft => {\n      draft.scrollAtBottom = isAtBottom\n      if (isAtBottom) {\n        draft.unseenMessages = false\n      }\n    })\n  }, [setLocalState])\n\n  const scrollToBottom = useCallback(() => {\n    if (!chatAreaRef || !chatAreaRef.current) {\n      return\n    }\n    const scrollHeight = chatAreaRef.current.scrollHeight - chatAreaRef.current.offsetHeight\n    chatAreaRef.current.scrollTop = scrollHeight\n\n    setLocalState(draft => {\n      draft.unseenMessages = false\n    })\n  }, [setLocalState])\n\n  useEffect(() => {\n    setLocalState(draft => {\n      draft.unseenMessages = !draft.scrollAtBottom\n    })\n  }, [state.messages, setLocalState])\n\n  return (\n    <div className={ styles.messages } ref={chatAreaRef}>\n      { localState.unseenMessages && (\n        <div className={ classNames(styles.unseen) }>\n          <Container className={ styles.unseenContainer }>\n            <Button variant=\"secondary\" size=\"sm\" onClick={ scrollToBottom }>\n              <FontAwesomeIcon icon='arrow-alt-circle-down' /> New messages\n            </Button>\n          </Container>\n        </div>\n      ) }\n        <div className={classNames(styles.messageScroll)}>\n          <div className='container'>\n            <ScrollBox\n              boxRef={ chatAreaRef }\n              onScrollChanged={ onScrollChanged }\n            >\n              {state.messages.map((eachMessage) => (\n                <MessageComponent\n                  key={eachMessage.uuid}\n                  onClick={ props.onMessageClick }\n                  message={eachMessage}\n                />\n              ))}\n            </ScrollBox>\n          </div>\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport MessageComponent from '../../Messages/Message'\nimport { Message } from 'store/types'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  replyTo: Message\n  onCancelReply: () => void\n}\n\nexport default ({ replyTo, onCancelReply }: Props) => {\n  return (\n    <div\n      className={styles.reply}\n      style={{ borderLeftColor: `#${replyTo.user.color}` }}\n    >\n      <div className={styles.actions}>\n        <Button variant=\"link\" onClick={onCancelReply}>\n          <FontAwesomeIcon icon=\"times\" />\n        </Button>\n      </div>\n      <MessageComponent reply message={replyTo} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\nimport useGlobalState from 'store/state'\n\ntype Props = {\n  value: any\n  kind: 'private' | 'command' | false\n  inputRef: React.Ref<any>\n  onChange: (e: React.ChangeEvent<any>) => void\n  children: React.ReactNode\n}\n\nexport default ({ value, kind, inputRef, onChange, children }: Props) => {\n  const { state, dispatch } = useGlobalState()\n\n  const handleFocus = (focus: boolean) => () => {\n    dispatch({\n      type: 'chat_focus',\n      payload: focus,\n    })\n  }\n\n  return (\n    <div\n      className={classNames(styles.field, {\n        [styles.focused]: state.chat.focused,\n        [styles.private]: kind === 'private',\n        [styles.command]: kind === 'command',\n      })}\n    >\n      <Form.Control\n        ref={inputRef}\n        className={styles.inputArea}\n        onChange={onChange}\n        onFocus={handleFocus(true)}\n        onBlur={handleFocus(false)}\n        value={value}\n        autoFocus\n        as=\"input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Type a message...\"\n      />\n      <div className={styles.actions}>{children}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'react-bootstrap'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  disabled: boolean\n}\n\nexport default ({ disabled }: Props) => (\n  <Button className={styles.button} type=\"submit\" disabled={disabled}>\n    <FontAwesomeIcon icon=\"paper-plane\" />\n  </Button>\n)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\n\ntype Props = {\n  onHelp: () => void\n  kind: 'private' | 'command' | false\n}\n\nexport default ({ onHelp, kind }: Props) => {\n  let icon: IconProp = 'question-circle'\n  if (kind === 'command') {\n    icon = 'code'\n  } else if (kind === 'private') {\n    icon = 'eye-slash'\n  }\n\n  const handleClick = () => {\n    if (icon !== 'question-circle') {\n      return\n    }\n    onHelp()\n  }\n\n  return (\n    <div\n      className={classNames(styles.textIcon, {\n        [styles.interactive]: kind === false,\n        [styles.private]: kind === 'private',\n        [styles.command]: kind === 'command',\n      })}\n      onClick={handleClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </div>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { getMessageKind, getMessagePmTo } from 'lib/messageParse'\nimport useGlobalState from 'store/state'\nimport { EVENTS, Message, OutgoingMessage } from 'store/types'\n\nimport Reply from './Reply'\nimport Field from './Field'\nimport Submit from './Submit'\nimport TextIcon from './TextIcon'\n\nimport styles from './index.module.scss'\n\ntype State = {\n  message: string\n  kind: 'private' | 'command' | false\n  to: string | null\n}\n\ntype Props = {\n  replyTo?: Message | null\n  onCancelReply: () => void\n}\n\nexport default ({ replyTo, onCancelReply }: Props) => {\n  const { state, dispatch } = useGlobalState()\n\n  const [localState, setState] = useImmer<State>({\n    message: '',\n    kind: false,\n    to: null,\n  })\n  const draftTimer = useRef<any>(null)\n  const inputRef = useRef<any>(null)\n\n  const { socket } = useContext(SocketContext)\n\n  const askForHelp = () => {\n    dispatch({\n      type: 'system_message',\n      payload: '/help',\n    })\n  }\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    if (localState.message.length < 1 || localState.message.trim().length < 1) {\n      return\n    }\n\n    sendMessage(localState.message)\n\n    setState((draft) => {\n      draft.message = ''\n      draft.kind = false\n    })\n\n    // refocus the input\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus()\n      }\n    })\n\n    onCancelReply && onCancelReply()\n  }\n\n  const sendMessage = (message: string, draft: boolean = false) => {\n    if (!draft && (message.length < 1 || message.trim().length < 1)) {\n      return\n    }\n\n    if (message === '/help') {\n      return askForHelp()\n    }\n\n    let type = EVENTS.MESSAGE\n    if (localState.kind === 'command') {\n      type = EVENTS.COMMAND\n    }\n\n    const payload: OutgoingMessage = {\n      content: message,\n      attributes: {\n        draft,\n        private: localState.kind === 'private',\n        to: localState.to,\n        replyToId: replyTo ? replyTo.uuid : null,\n      },\n    }\n\n    socket?.emit(type, payload)\n  }\n\n  const onType = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n\n    clearTimeout(draftTimer.current)\n\n    const value: string = e.currentTarget.value\n    const kind = getMessageKind(value)\n\n    // special messages\n    setState((draft) => {\n      draft.message = value\n      draft.kind = kind\n      draft.to = kind === 'private' ? getMessagePmTo(value) : null\n    })\n\n    // What is this for?\n    if (kind) {\n      return\n    }\n\n    if (state.draftTimer > 0) {\n      draftTimer.current = setTimeout(() => {\n        sendMessage(value, true)\n      }, state.draftTimer)\n    }\n  }\n\n  const FieldActions = () => (\n    <>\n      <TextIcon kind={localState.kind} onHelp={askForHelp} />\n      <Submit disabled={!state.chat.focused} />\n    </>\n  )\n\n  return (\n    <div className={styles.footer}>\n      <Container className={styles.container}>\n        {replyTo && <Reply replyTo={replyTo} onCancelReply={onCancelReply} />}\n        <Form noValidate onSubmit={handleSubmit}>\n          <Field\n            inputRef={inputRef}\n            kind={localState.kind}\n            value={localState.message}\n            onChange={onType}\n          >\n            <FieldActions />\n          </Field>\n        </Form>\n      </Container>\n    </div>\n  )\n}\n","import { VALID_USERNAME } from '../constants'\n\n// Detects actions based on message string on input\n\nconst isCommand = (val: string) => val[0] === '/'\nconst isPm = (val: string) => val[0] === '@'\n\nexport const getMessageKind = (val: string) => {\n  if (isCommand(val)) return 'command'\n  if (isPm(val)) return 'private'\n  return false\n}\n\nexport const getMessagePmTo = (val: string) => {\n  const words = val.split(' ')\n\n  if (\n    words.length > 0 &&\n    words[0][0] === '@' &&\n    VALID_USERNAME.test(words[0].substr(1))\n  ) {\n    return words[0].substr(1)\n  }\n\n  return null\n}\n","import React, { useEffect, useCallback } from 'react'\nimport classNames from 'classnames'\nimport smoothscroll from 'smoothscroll-polyfill'\n\nimport { useGlobalState } from 'store/state'\nimport Loader from 'components/Loader'\n\nimport styles from './index.module.scss'\nimport Header from './Header'\nimport Messages from './Messages'\nimport Footer from './Footer'\nimport { useImmer } from 'use-immer'\nimport { Message } from 'store/types'\n\n// fix for browser with no smooth scrolling\nsmoothscroll.polyfill()\n\ntype State = {\n  scrollingWhileFocused: boolean\n  replyTo: Message | null\n}\n\nexport default () => {\n  const { state } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    scrollingWhileFocused: false,\n    replyTo: null,\n  })\n\n  const onMessageClick = useCallback(\n    (messageId: string) => {\n      setState((draft) => {\n        const messageReply =\n          state.messages.find(\n            (eachMessage) =>\n              eachMessage.uuid === messageId\n          ) || null\n        draft.replyTo = messageReply\n      })\n    },\n    [state.messages, setState]\n  )\n\n  const cancelReply = useCallback(() => {\n    setState((draft) => {\n      draft.replyTo = null\n    })\n  }, [setState])\n\n  // On window scroll\n  const setHeaderPosition = useCallback(() => {\n    setState((draft) => {\n      if (state.chat.focused) {\n        draft.scrollingWhileFocused = true\n      }\n    })\n    // eslint-disable-next-line\n  }, [setState])\n\n  useEffect(() => {\n    window.addEventListener('scroll', setHeaderPosition, true)\n\n    return () => {\n      window.removeEventListener('scroll', setHeaderPosition)\n    }\n  }, [setHeaderPosition])\n\n  useEffect(() => {\n    if (state.chat.focused) {\n      setHeaderPosition()\n    } else {\n      setState((draft) => {\n        draft.scrollingWhileFocused = false\n      })\n    }\n  }, [setState, setHeaderPosition, state.chat.focused])\n\n  if (!state.socket.connected) {\n    return <Loader />\n  }\n\n  return (\n    <div\n      className={classNames(styles.chat, {\n        [styles.scrollingChat]: localState.scrollingWhileFocused,\n      })}\n    >\n      <Header scrollingWhileFocused={localState.scrollingWhileFocused} />\n\n      <Messages onMessageClick={onMessageClick} />\n\n      <Footer replyTo={localState.replyTo} onCancelReply={cancelReply} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Loader from 'components/Loader'\n\nexport default () => {\n  return (\n    <>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user IS logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (!state.auth.loggedIn) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useGlobalState } from 'store/state'\n\nimport Loading from 'sections/loading'\n\ntype Props = {\n  path: string\n  exact?: boolean\n  component?: React.ComponentType<any>\n}\n\n/**\n * This Route only allows browsing into if the user is NOT logged in\n */\nexport default (props: Props) => {\n  const { state } = useGlobalState()\n  if (!state.auth.checked) {\n    return <Loading />\n  }\n\n  if (state.auth.loggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  )\n}\n","import React from 'react'\n\nimport { useGlobalState } from 'store/state'\nimport styles from './index.module.scss'\n\nexport default () => {\n  const { state } = useGlobalState()\n\n  if (!state.offline && !state.error) {\n    return null\n  }\n\n  let error = state.error\n  if (Array.isArray(error)) {\n    error = error.join('. ')\n  }\n  if (typeof error !== 'string') {\n    error = String(error)\n  }\n\n  if (state.error) {\n    return <div className={styles.offline}>Error: {error}</div>\n  }\n\n  return (\n    <div className={styles.offline}>\n      One of us is offline! Please try again later\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Form, Container, Button } from 'react-bootstrap'\nimport { useImmer } from 'use-immer'\nimport classNames from 'classnames'\nimport HCaptcha from 'react-hcaptcha'\nimport ReCaptcha from 'react-google-recaptcha'\n\nimport { useGlobalState } from 'store/state'\nimport { fetchResource } from 'util/fetch'\nimport LogoAnimation from 'components/LogoAnimation'\n\nimport styles from './index.module.scss'\nimport { AuthData } from 'store/types'\nimport { CAPTCHA_KEY, CAPTCHA_PROVIDER } from '../../constants'\n\ntype State = {\n  username: string\n  password: string\n  verified: boolean\n  hasPassword: boolean\n  loading: boolean\n}\n\nexport default () => {\n  const { dispatch } = useGlobalState()\n  const [localState, setState] = useImmer<State>({\n    username: '',\n    password: '',\n    verified: false,\n    hasPassword: false,\n    loading: false,\n  })\n\n  const captchaRef = useRef<any>(null)\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault()\n    if (localState.verified) {\n      oncaptchaChange('verified')\n      return\n    }\n    captchaRef.current.execute()\n  }\n\n  const oncaptchaChange = (token: string | null) => {\n    if (!token || localState.loading) {\n      return\n    }\n\n    setState((draft) => {\n      draft.loading = true\n    })\n\n    const body = {\n      username: localState.username,\n      password: localState.password,\n      captchaToken: token,\n    }\n    fetchResource('/auth', 'POST', body)\n      .then((data: AuthData) => {\n        if (captchaRef.current.resetCaptcha) {\n          captchaRef.current.resetCaptcha()\n        }\n\n        if (!data || !data.user.user_id) {\n          console.warn('Invalid user object')\n          dispatch({\n            type: 'login',\n            payload: null,\n          })\n          return\n        }\n\n        dispatch({\n          type: 'login',\n          payload: data,\n        })\n      })\n      .catch((reason) => {\n        if (reason.status !== 400) {\n          // username requires password\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        if (captchaRef.current.resetCaptcha) {\n          captchaRef.current.resetCaptcha()\n        }\n\n        setState((draft) => {\n          draft.loading = false\n          draft.verified = (reason.data && reason.data.verified) || false\n          if (reason.status === 400) {\n            draft.hasPassword = true\n          }\n        })\n      })\n  }\n\n  let theme: 'light' | 'dark' = 'light'\n  if (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  ) {\n    theme = 'dark'\n  }\n\n  return (\n    <Container className={classNames(styles.login, 'mt-4')}>\n      <LogoAnimation />\n      <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group controlId=\"loginForm.username\">\n          <Form.Control\n            as=\"input\"\n            type=\"text\"\n            autoComplete=\"username\"\n            placeholder=\"What's your name?\"\n            disabled={localState.loading}\n            autoFocus\n            minLength={1}\n            maxLength={20}\n            onChange={(e) => {\n              const value = e.currentTarget.value\n              setState((draft) => {\n                draft.username = value\n              })\n            }}\n            value={localState.username}\n          />\n          {localState.hasPassword && (\n            <Form.Control\n              as=\"input\"\n              className=\"mt-2\"\n              type=\"password\"\n              placeholder=\"Password...\"\n              autoComplete=\"current-password\"\n              disabled={localState.loading}\n              autoFocus\n              onChange={(e) => {\n                const value = e.currentTarget.value\n                setState((draft) => {\n                  draft.password = value\n                })\n              }}\n              value={localState.password}\n            />\n          )}\n          {CAPTCHA_PROVIDER === 'recaptcha' && (\n            <ReCaptcha\n              ref={captchaRef}\n              size=\"invisible\"\n              theme={theme}\n              sitekey={CAPTCHA_KEY}\n              onChange={oncaptchaChange}\n            />\n          )}\n          {CAPTCHA_PROVIDER === 'hcaptcha' && (\n            <HCaptcha\n              ref={captchaRef}\n              size=\"invisible\"\n              theme={theme}\n              sitekey={CAPTCHA_KEY}\n              onVerify={oncaptchaChange}\n            />\n          )}\n          <p className=\"text-center mt-4\">\n            <Button type=\"submit\" size=\"sm\">\n              Login\n            </Button>\n          </p>\n        </Form.Group>\n      </Form>\n    </Container>\n  )\n}\n","import { Action, AuthData } from 'store/types'\n\nimport { fetchResource } from './fetch'\n\nconst OFFLINE_RETRY_DELAY = 2000\n\nexport const checkAuth = (dispatch: React.Dispatch<Action>) => {\n  fetchResource('/auth', 'GET')\n    .then((data: AuthData) => {\n      if (!data || !data.user.user_id) {\n        console.warn('Invalid user object')\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n        return\n      }\n\n      dispatch({\n        type: 'login',\n        payload: data,\n      })\n    })\n    .catch((reason) => {\n      if (reason.message === 'Network Error' || reason.message === 'offline') {\n        dispatch({\n          type: 'offline',\n          payload: null,\n        })\n\n        // try again\n        setTimeout(() => {\n          checkAuth(dispatch)\n        }, OFFLINE_RETRY_DELAY)\n      } else {\n        if (reason.status !== 401) {\n          dispatch({\n            type: 'error',\n            payload: reason.errors.join(', '),\n          })\n        }\n\n        dispatch({\n          type: 'login',\n          payload: null,\n        })\n      }\n    })\n}\n\nexport default checkAuth\n","import React, { useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\n\nimport Chat from 'sections/Chat'\nimport AuthenticatedRoute from 'util/AuthenticatedRoute'\nimport UnauthenticatedRoute from 'util/UnauthenticatedRoute'\nimport OfflineCheck from 'components/OfflineCheck'\nimport Login from 'sections/Login'\nimport useGlobalState from 'store/state'\nimport checkAuth from 'util/checkAuth'\nimport Admin from 'sections/Admin'\n\nexport default () => {\n  const { state, dispatch } = useGlobalState()\n\n  // Check authentication state\n  useEffect(() => {\n    if (!state.auth.checked) {\n      checkAuth(dispatch)\n    }\n  }, [state.auth.checked, dispatch])\n\n  return (\n    <>\n      <OfflineCheck />\n      <Switch>\n        <UnauthenticatedRoute path=\"/login\" component={Login} />\n        <AuthenticatedRoute path=\"/admin\" component={Admin} />\n        <AuthenticatedRoute path=\"/\" component={Chat} />\n      </Switch>\n    </>\n  )\n}\n","import React, { useEffect, useContext, useCallback } from 'react'\nimport { Helmet } from 'react-helmet'\nimport useSound from 'use-sound'\nimport { useImmer } from 'use-immer'\n\nimport { SocketContext } from 'util/socketProvider'\nimport { Message } from 'store/types'\nimport useGlobalState from 'store/state'\nimport newMessageSound from 'assets/sounds/newMessage.mp3'\nimport { dateDiff } from 'lib/dateDiff'\n\nconst TIME_BETWEEN_SOUND = 5 * 1000 // ms\nconst NOTIFICATION_VOLUME = 0.5 // 0-1\n\ntype State = {\n  lastSound: Date | null,\n  windowFocused: boolean,\n  titleNotification: boolean,\n}\n\nexport default () => {\n  const { state } = useGlobalState();\n  const [ localState, setState ] = useImmer<State>({\n    lastSound: new Date(),\n    windowFocused: true,\n    titleNotification: false,\n  })\n\n  const { socket } = useContext(SocketContext)\n  const [ play ] = useSound(newMessageSound, {\n    interrupt: true,\n    volume: NOTIFICATION_VOLUME,\n  });\n\n  const onMessage = useCallback((user_id: string) => (msg: Message) => {\n    if (msg.attributes.draft || user_id === msg.user.user_id) {\n      return\n    }\n\n    setState(draft => {\n      if (!draft.windowFocused) {\n        draft.titleNotification = true;\n\n        if (!draft.lastSound || dateDiff(draft.lastSound) > TIME_BETWEEN_SOUND) {\n          draft.lastSound = new Date()\n          play({})\n        }\n      }\n    })\n  }, [setState, play])\n\n  const onFocus = useCallback(() => {\n    setState(draft => {\n      draft.titleNotification = false\n      draft.windowFocused = true\n    })\n  }, [setState])\n\n  const onBlur = useCallback(() => {\n    setState(draft => {\n      draft.windowFocused = false\n    })\n  }, [setState])\n\n  const user_id = state.auth.user ? state.auth.user.user_id : null\n\n  useEffect(() => {\n    if (!socket || !user_id) {\n      return\n    }\n    socket.on('message', onMessage(user_id))\n  }, [socket, onMessage, user_id])\n\n  useEffect(() => {\n    window.addEventListener('focus', onFocus)\n    window.addEventListener('blur', onBlur)\n\n    return () => {\n      window.removeEventListener('focus', onFocus)\n      window.removeEventListener('blur', onBlur)\n    }\n  }, [onFocus, onBlur])\n\n  return (\n    <Helmet>\n      <title>{localState.titleNotification ? '•• dotdot' : 'dotdot'}</title>\n    </Helmet>\n  )\n}\n","/**\n * Get the difference between two date objects in ms\n */\nexport const dateDiff = (t1: Date, t2: Date = new Date()) => {\n  return t2.getTime() - t1.getTime();\n}","import { library } from '@fortawesome/fontawesome-svg-core'\n\n/**\n * Icon Preloading\n * This is done so that only the icons that we need are loaded from FontAwesome\n */\n\n// Icons available in two styles, regular and solid\n// solid tends to have all free icons, while some regular ones are PRO only\nimport {\n  faLock,\n  faLockOpen,\n  faCircle,\n  faDotCircle,\n  faCircleNotch,\n  faCode,\n  faCog,\n  faArrowAltCircleDown,\n  faMeh,\n  faAngry,\n  faDizzy,\n  faFlushed,\n  faFrown,\n  faFrownOpen,\n  faGrimace,\n  faGrin,\n  faGrinAlt,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faGrinHearts,\n  faGrinSquint,\n  faGrinSquintTears,\n  faGrinStars,\n  faGrinTears,\n  faGrinTongue,\n  faGrinTongueSquint,\n  faGrinTongueWink,\n  faGrinWink,\n  faKiss,\n  faKissBeam,\n  faKissWinkHeart,\n  faLaugh,\n  faLaughBeam,\n  faLaughSquint,\n  faLaughWink,\n  faMehBlank,\n  faMehRollingEyes,\n  faSadCry,\n  faSadTear,\n  faSmile,\n  faSmileBeam,\n  faSmileWink,\n  faSurprise,\n  faTired,\n  faShieldAlt,\n  faQuestionCircle,\n  faPaperPlane,\n  faTimes,\n  faReply,\n  faExternalLinkAlt,\n  faEyeSlash,\n  faRobot,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  faDotCircle as farDotCircle,\n  faMeh as farMeh,\n  faAngry as farAngry,\n  faDizzy as farDizzy,\n  faFlushed as farFlushed,\n  faFrown as farFrown,\n  faFrownOpen as farFrownOpen,\n  faGrimace as farGrimace,\n  faGrin as farGrin,\n  faGrinAlt as farGrinAlt,\n  faGrinBeam as farGrinBeam,\n  faGrinBeamSweat as farGrinBeamSweat,\n  faGrinHearts as farGrinHearts,\n  faGrinSquint as farGrinSquint,\n  faGrinSquintTears as farGrinSquintTears,\n  faGrinStars as farGrinStars,\n  faGrinTears as farGrinTears,\n  faGrinTongue as farGrinTongue,\n  faGrinTongueSquint as farGrinTongueSquint,\n  faGrinTongueWink as farGrinTongueWink,\n  faGrinWink as farGrinWink,\n  faKiss as farKiss,\n  faKissBeam as farKissBeam,\n  faKissWinkHeart as farKissWinkHeart,\n  faLaugh as farLaugh,\n  faLaughBeam as farLaughBeam,\n  faLaughSquint as farLaughSquint,\n  faLaughWink as farLaughWink,\n  faMehBlank as farMehBlank,\n  faMehRollingEyes as farMehRollingEyes,\n  faSadCry as farSadCry,\n  faSadTear as farSadTear,\n  faSmile as farSmile,\n  faSmileBeam as farSmileBeam,\n  faSmileWink as farSmileWink,\n  faSurprise as farSurprise,\n  faTired as farTired,\n} from '@fortawesome/free-regular-svg-icons'\n\n/**\n * All icons that will be used in this app need to be preloaded here\n */\nlibrary.add(\n  faLock,\n  faLockOpen,\n  faEyeSlash,\n  faCircle,\n  faDotCircle,\n  farDotCircle,\n  faCircleNotch,\n  faCode,\n  faCog,\n  faArrowAltCircleDown,\n  faMeh,\n  farMeh,\n  faAngry,\n  faDizzy,\n  faFlushed,\n  faFrown,\n  faFrownOpen,\n  faGrimace,\n  faGrin,\n  faGrinAlt,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faGrinHearts,\n  faGrinSquint,\n  faGrinSquintTears,\n  faGrinStars,\n  faGrinTears,\n  faGrinTongue,\n  faGrinTongueSquint,\n  faGrinTongueWink,\n  faGrinWink,\n  faKiss,\n  faKissBeam,\n  faKissWinkHeart,\n  faLaugh,\n  faLaughBeam,\n  faLaughSquint,\n  faLaughWink,\n  faMehBlank,\n  faMehRollingEyes,\n  faSadCry,\n  faSadTear,\n  faSmile,\n  faSmileBeam,\n  faSmileWink,\n  faSurprise,\n  faTired,\n  farAngry,\n  farDizzy,\n  farFlushed,\n  farFrown,\n  farFrownOpen,\n  farGrimace,\n  farGrin,\n  farGrinAlt,\n  farGrinBeam,\n  farGrinBeamSweat,\n  farGrinHearts,\n  farGrinSquint,\n  farGrinSquintTears,\n  farGrinStars,\n  farGrinTears,\n  farGrinTongue,\n  farGrinTongueSquint,\n  farGrinTongueWink,\n  farGrinWink,\n  farKiss,\n  farKissBeam,\n  farKissWinkHeart,\n  farLaugh,\n  farLaughBeam,\n  farLaughSquint,\n  farLaughWink,\n  farMehBlank,\n  farMehRollingEyes,\n  farSadCry,\n  farSadTear,\n  farSmile,\n  farSmileBeam,\n  farSmileWink,\n  farSurprise,\n  farTired,\n  faShieldAlt,\n  faQuestionCircle,\n  faPaperPlane,\n  faTimes,\n  faReply,\n  faExternalLinkAlt,\n  faRobot,\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { StateProvider } from 'store/state'\nimport SocketProvider from 'util/socketProvider'\n\nimport Router from './router'\nimport Title from './components/Title'\n\nimport './lib/icons'\nimport 'assets/scss/index.scss'\n\n\nconst app = (\n  <BrowserRouter basename={process.env.REACT_APP_BASEPATH}>\n    <StateProvider>\n      <SocketProvider>\n        <Title />\n        <Router />\n      </SocketProvider>\n    </StateProvider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"UserBadge_badge__28gDi\",\"lock\":\"UserBadge_lock__EV7LR\",\"closed\":\"UserBadge_closed__3uZeG\",\"pulse\":\"UserBadge_pulse__3c_w7\",\"dot\":\"UserBadge_dot__1T6bu\",\"name\":\"UserBadge_name__jOOgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWidget\":\"Widget_dashboardWidget__Z_mwK\",\"title\":\"Widget_title__2QBZt\",\"content\":\"Widget_content__1BMNx\",\"icon\":\"Widget_icon__3cYOg\",\"blue\":\"Widget_blue__1DB9R\",\"green\":\"Widget_green__2mXfC\",\"orange\":\"Widget_orange__X3jtY\",\"history\":\"Widget_history__1eQoj\",\"change\":\"Widget_change__36iJl\",\"text-muted\":\"Widget_text-muted__1SkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"LogoAnimation_logo__cXB1h\",\"svgFilter\":\"LogoAnimation_svgFilter__DGLai\",\"blob\":\"LogoAnimation_blob__1-tkV\",\"blob-first\":\"LogoAnimation_blob-first__kGvvT\",\"blob-second\":\"LogoAnimation_blob-second__20T0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2XEwx\",\"logo\":\"Header_logo__1GzGV\",\"badge\":\"Header_badge__3OtLN\",\"online\":\"Header_online__2vz5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__tCmp1\",\"messageScroll\":\"Messages_messageScroll__CCnSp\",\"unseen\":\"Messages_unseen__gVw6f\",\"unseenContainer\":\"Messages_unseenContainer__3haBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textIcon\":\"TextIcon_textIcon__2H6ej\",\"interactive\":\"TextIcon_interactive__j55M9\"};"],"sourceRoot":""}